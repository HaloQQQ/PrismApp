<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MusicPlayerModule.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/MusicPlayerModule;component/Resources/MediaDic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:MusicDistributeMultiConverter x:Key="MusicDistributeMultiConverter" />

    <ContextMenu x:Key="PlayinigDataGridContextMenu" MyAttachProperty.IsCollapsed="True">
        <MenuItem Command="{Binding PlacementTarget.DataContext.TogglePlayCurrentCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
            <MenuItem.Style>
                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                    <Setter Property="Icon" Value="&#xea6d;" />
                    <Setter Property="Header" Value="播放" />

                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding PlacementTarget.SelectedItem.IsPlayingMedia, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True" />
                                <Condition Binding="{Binding PlacementTarget.DataContext.Running, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True" />
                            </MultiDataTrigger.Conditions>

                            <Setter Property="Icon" Value="&#xe62a;" />
                            <Setter Property="Header" Value="暂停" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.Style>
        </MenuItem>

        <MenuItem
            Command="{Binding PlacementTarget.DataContext.OpenInExploreCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
            CommandParameter="{Binding PlacementTarget.SelectedItem.Music.FileDir, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
            Header="打开目录位置"
            Icon="&#xebdf;" />


        <MenuItem
            Command="{Binding PlacementTarget.DataContext.DownLoadCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
            CommandParameter="{Binding PlacementTarget.SelectedItem.Music, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
            Header="下载"
            Icon="&#xe63b;" />

        <MenuItem
            Command="{Binding PlacementTarget.DataContext.DeletePlayingCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
            CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
            Header="从播放队列删除"
            Icon="&#xec7b;"
            IsEnabled="{Binding PlacementTarget.SelectedItem.IsPlayingMedia, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource OppositeBoolConverter}}" />

        <MenuItem
            Header="添加到"
            Icon="&#xe663;"
            ItemsSource="{Binding PlacementTarget.DataContext.DistributeMusicViewModel.MusicDirs, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
            <MenuItem.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                    <Setter Property="Header" Value="{Binding DirName}" />
                    <Setter Property="Command" Value="{Binding PlacementTarget.DataContext.DistributeMusicViewModel.DistributeToCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />

                    <Setter Property="CommandParameter">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource MusicDistributeMultiConverter}">
                                <MultiBinding.Bindings>
                                    <Binding Path="PlacementTarget.SelectedItem.Music" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                    <Binding Path="DirPath" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource MultiConverter_IsStringEquals}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="PlacementTarget.SelectedItem.Music.FileDir" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                        <Binding Path="DirPath" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
    </ContextMenu>

    <DataTemplate x:Key="PlayingDataGridFirstColumnCellTemplate">
        <DockPanel Width="280">
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                <Button Command="{Binding DataContext.TogglePlayCurrentCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource ButtonBase_Icon_Small_HoverBlue}" TargetType="Button">
                            <Setter Property="Content" Value="&#xea6d;" />
                            <Setter Property="ToolTip" Value="播放当前" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPlayingMedia}" Value="True" />
                                        <Condition Binding="{Binding DataContext.Running, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="True" />
                                    </MultiDataTrigger.Conditions>

                                    <Setter Property="Content" Value="&#xe62a;" />
                                    <Setter Property="ToolTip" Value="暂停当前" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button
                    Command="{Binding DataContext.DownLoadCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                    CommandParameter="{Binding Music}"
                    Content="&#xe63b;"
                    Style="{StaticResource ButtonBase_Icon_Small_HoverBlue}"
                    ToolTip="下载" />
                <Button
                    Content="&#xe682;"
                    MyAttachProperty.HasContextMenu="True"
                    Style="{StaticResource ButtonBase_Icon_Small_HoverBlue}"
                    Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                    ToolTip="更多">
                    <Button.ContextMenu>
                        <ContextMenu MyAttachProperty.IsCollapsed="True">
                            <MenuItem Command="{Binding PlacementTarget.Tag.TogglePlayCurrentCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                <MenuItem.Style>
                                    <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                                        <Setter Property="Icon" Value="&#xea6d;" />
                                        <Setter Property="Header" Value="播放" />

                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding PlacementTarget.DataContext.IsPlayingMedia, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True" />
                                                    <Condition Binding="{Binding PlacementTarget.Tag.Running, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True" />
                                                </MultiDataTrigger.Conditions>

                                                <Setter Property="Icon" Value="&#xe62a;" />
                                                <Setter Property="Header" Value="暂停" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>

                            <MenuItem
                                Command="{Binding PlacementTarget.Tag.OpenInExploreCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                CommandParameter="{Binding PlacementTarget.DataContext.Music.FileDir, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                Header="打开目录位置"
                                Icon="&#xebdf;" />

                            <MenuItem
                                Command="{Binding PlacementTarget.Tag.DownLoadCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                CommandParameter="{Binding PlacementTarget.DataContext.Music, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                Header="下载"
                                Icon="&#xe63b;" />

                            <MenuItem
                                Command="{Binding PlacementTarget.Tag.DeletePlayingCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                Header="从播放队列删除"
                                Icon="&#xec7b;"
                                IsEnabled="{Binding PlacementTarget.DataContext.IsPlayingMedia, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource OppositeBoolConverter}}" />

                            <MenuItem
                                Header="添加到"
                                Icon="&#xe663;"
                                ItemsSource="{Binding PlacementTarget.Tag.DistributeMusicViewModel.MusicDirs, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                <MenuItem.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding DirName}" />
                                        <Setter Property="Command" Value="{Binding PlacementTarget.Tag.DistributeMusicViewModel.DistributeToCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />

                                        <Setter Property="CommandParameter">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource MusicDistributeMultiConverter}">
                                                    <MultiBinding.Bindings>
                                                        <Binding Path="PlacementTarget.DataContext.Music" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                                        <Binding Path="DirPath" />
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <DataTrigger Value="True">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource MultiConverter_IsStringEquals}">
                                                        <MultiBinding.Bindings>
                                                            <Binding Path="PlacementTarget.DataContext.Music.FileDir" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                                            <Binding Path="DirPath" />
                                                        </MultiBinding.Bindings>
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>

                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>

            <TextBlock
                DockPanel.Dock="Right"
                Foreground="{StaticResource LightWhite}"
                TextAlignment="Right"
                Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource BoolToCollapsedVisibleConverter}}">
                <TextBlock Text="{Binding Music.Duration}" />
                <TextBlock Width="40" Text="{Binding Music.Size}" />
                MB
            </TextBlock>

            <TextBlock Text="{Binding Music.Name}" ToolTip="{Binding Music.Name}" />
            <TextBlock
                Margin="5,0"
                Text="{Binding Music.Singer}"
                ToolTip="{Binding Music.Singer}" />
        </DockPanel>
    </DataTemplate>

    <Style TargetType="MediaElement">
        <Setter Property="LoadedBehavior" Value="Manual" />
        <Setter Property="UnloadedBehavior" Value="Pause" />

        <Setter Property="Stretch" Value="UniformToFill" />
        <Setter Property="Volume" Value="1" />

        <Setter Property="Visibility" Value="Visible" />
    </Style>

    <Style
        x:Key="MusicEffectToggleButton"
        BasedOn="{StaticResource ButtonBase_Icon_Conent_Transparent}"
        TargetType="ToggleButton">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="12,2" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MyAttachProperty.CornerRadius" Value="5" />

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="1" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#6AD2FF" />
                <Setter Property="BorderBrush" Value="#6AD2FF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MusicImage" TargetType="Image">
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="60" />

        <Setter Property="Margin" Value="5" />

        <Setter Property="Source" Value="{Binding CurrentMedia.Music.ImageSource}" />

        <Setter Property="Clip">
            <Setter.Value>
                <RectangleGeometry
                    RadiusX="5"
                    RadiusY="5"
                    Rect="0,0,60,60" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentMedia.Music.ImageSource}" Value="{x:Null}">
                <Setter Property="Source">
                    <Setter.Value>
                        <BitmapImage UriSource="/MusicPlayerModule;component/Resources/音符SVG-87.png" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="Music_PointABTextBlock"
        BasedOn="{StaticResource PointABTextBlock}"
        TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentMedia}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>