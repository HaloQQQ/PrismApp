<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attaches="http://IceTea.Wpf.Core.Attaches.com/"
    xmlns:converter="http://IceTea.Wpf.Core.com/"
    xmlns:myconverter="clr-namespace:MusicPlayerModule.Converters"
    xmlns:utils="clr-namespace:MusicPlayerModule.Utils">

    <VisualBrush x:Key="GradientOpacityMask">
        <VisualBrush.Visual>
            <Border>
                <Border.Background>

                    <!--<RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5">
                        <RadialGradientBrush.GradientStops>
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Color="White" Offset="0.9"/>
                            <GradientStop Color="Transparent" Offset="1"/>
                        </RadialGradientBrush.GradientStops>
                    </RadialGradientBrush>-->

                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="Transparent" />
                        <GradientStop Offset="0.15" Color="White" />
                        <GradientStop Offset="0.85" Color="White" />
                        <GradientStop Offset="1" Color="Transparent" />
                    </LinearGradientBrush>
                </Border.Background>
                <TextBlock FontSize="24" Text=" " />
            </Border>
        </VisualBrush.Visual>
    </VisualBrush>

    <GeometryGroup x:Key="PopupGeometryGroup_PlayOrder">
        <RectangleGeometry RadiusX="16" RadiusY="16">
            <RectangleGeometry.Rect>
                <Rect Width="150" Height="293" />
            </RectangleGeometry.Rect>
        </RectangleGeometry>
        <PathGeometry Figures="M65,293 L75,303 L85,293 Z" />
    </GeometryGroup>

    <GeometryGroup x:Key="PopupGeometryGroup_VideoStretchMode">
        <RectangleGeometry RadiusX="16" RadiusY="16">
            <RectangleGeometry.Rect>
                <Rect Width="100" Height="150" />
            </RectangleGeometry.Rect>
        </RectangleGeometry>
        <PathGeometry Figures="M40,150 L50,160 L60,150 Z" />
    </GeometryGroup>

    <GeometryGroup x:Key="PopupGeometryGroup_Volume">
        <RectangleGeometry RadiusX="6" RadiusY="6">
            <RectangleGeometry.Rect>
                <Rect Width="65" Height="190" />
            </RectangleGeometry.Rect>
        </RectangleGeometry>
        <PathGeometry Figures="M25,190 L32.5,196 L40,190 Z" />
    </GeometryGroup>

    <GeometryGroup x:Key="PopupGeometryGroup_MediaSpeedRatio">
        <RectangleGeometry RadiusX="16" RadiusY="16">
            <RectangleGeometry.Rect>
                <Rect Width="280" Height="90" />
            </RectangleGeometry.Rect>
        </RectangleGeometry>
        <PathGeometry Figures="M130,90 L140,100 L150,90 Z" />
    </GeometryGroup>

    <converter:MultiConverter_MultiplicationDivision x:Key="MultiConverter_MultiplicationDivision" />
    <myconverter:NoEnglishDesktopLyricColorfulMultiConverter x:Key="NoEnglishDesktopLyricColorfulMultiConverter" />

    <myconverter:LyricWidth_MultiConverter x:Key="LyricWidth_MultiConverter" />

    <myconverter:DesktopLyricColorfulMultiConverter x:Key="DesktopLyricColorfulMultiConverter" />

    <converter:WindowMinToBoolConverter x:Key="WindowMinToBoolConverter" />

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <converter:DigitDoubleConverter x:Key="DigitDoubleConverter" />

    <DataTemplate x:Key="HorizentalDesktopLyric">
        <Grid Margin="20,5" HorizontalAlignment="Center">
            <TextBlock
                HorizontalAlignment="Left"
                FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=Border}, Converter={StaticResource DigitDoubleConverter}, ConverterParameter=1.5, FallbackValue=20}"
                Foreground="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush, RelativeSource={RelativeSource AncestorType=Border}}"
                Text="{Binding Words, FallbackValue=狗空音乐，就是歌多}"
                TextAlignment="Center"
                TextTrimming="None"
                TextWrapping="NoWrap" />
            <TextBlock
                HorizontalAlignment="Left"
                ClipToBounds="True"
                FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=Border}, Converter={StaticResource DigitDoubleConverter}, ConverterParameter=1.5, FallbackValue=20}"
                Text="{Binding Words}"
                TextAlignment="Center"
                TextTrimming="None"
                TextWrapping="NoWrap">
                <TextBlock.Foreground>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0.5" Color="{Binding DataContext.DesktopLyric.LinearGradientColorBrush.ColorBrush.Color, RelativeSource={RelativeSource AncestorType=Border}}" />
                        <GradientStop Offset="1" Color="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush.Color, RelativeSource={RelativeSource AncestorType=Border}}" />
                    </LinearGradientBrush>
                </TextBlock.Foreground>
                <TextBlock.Width>
                    <MultiBinding Converter="{StaticResource DesktopLyricColorfulMultiConverter}">
                        <Binding Mode="OneWay" Path="IsPlayed" />

                        <Binding Mode="OneWay" Path="IsPlayingLine" />

                        <Binding
                            Mode="OneWay"
                            Path="DataContext.CurrentMusic.WordProgress"
                            RelativeSource="{RelativeSource AncestorType=Border}" />

                        <Binding Mode="OneWay" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </TextBlock.Width>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="VerticalDesktopLyricWithoutEnglish">
        <Grid Margin="10,20">
            <TextBlock
                Width="{Binding FontSize, RelativeSource={RelativeSource Self}}"
                VerticalAlignment="Top"
                FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=Border}, Converter={StaticResource DigitDoubleConverter}, ConverterParameter=1.5, FallbackValue=20}"
                Foreground="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush, RelativeSource={RelativeSource AncestorType=Border}}"
                LineHeight="{Binding FontSize, RelativeSource={RelativeSource Self}}"
                LineStackingStrategy="BlockLineHeight"
                Text="{Binding VerticalWords, FallbackValue=狗空音乐，就是歌多}"
                TextTrimming="None"
                TextWrapping="Wrap" />

            <TextBlock
                Width="{Binding FontSize, RelativeSource={RelativeSource Self}}"
                VerticalAlignment="Top"
                FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=Border}, Converter={StaticResource DigitDoubleConverter}, ConverterParameter=1.5, FallbackValue=20}"
                LineHeight="{Binding FontSize, RelativeSource={RelativeSource Self}}"
                LineStackingStrategy="BlockLineHeight"
                Text="{Binding VerticalWords}"
                TextTrimming="None"
                TextWrapping="Wrap">
                <TextBlock.Foreground>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0.2" Color="{Binding DataContext.DesktopLyric.LinearGradientColorBrush.ColorBrush.Color, RelativeSource={RelativeSource AncestorType=Border}}" />
                        <GradientStop Offset="1" Color="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush.Color, RelativeSource={RelativeSource AncestorType=Border}}" />
                    </LinearGradientBrush>
                </TextBlock.Foreground>
                <TextBlock.Height>
                    <MultiBinding Converter="{StaticResource NoEnglishDesktopLyricColorfulMultiConverter}">
                        <Binding Mode="OneWay" Path="IsPlayed" />

                        <Binding Mode="OneWay" Path="IsPlayingLine" />

                        <Binding
                            Mode="OneWay"
                            Path="DataContext.CurrentMusic.WordProgress"
                            RelativeSource="{RelativeSource AncestorType=Border}" />

                        <Binding Mode="OneWay" Path="Words.Length" />

                        <Binding
                            Mode="OneWay"
                            Path="FontSize"
                            RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </TextBlock.Height>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="VerticalDesktopLyricWithEnglish">
        <Grid Margin="10,20">
            <TextBlock
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=Border}, Converter={StaticResource DigitDoubleConverter}, ConverterParameter=1.5, FallbackValue=20}"
                Foreground="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush, RelativeSource={RelativeSource AncestorType=Border}}"
                Text="{Binding Words, FallbackValue=狗空音乐，就是歌多}"
                TextAlignment="Center"
                TextTrimming="None"
                TextWrapping="NoWrap">
                <TextBlock.LayoutTransform>
                    <TransformGroup>
                        <TranslateTransform Y="-50" />
                        <RotateTransform Angle="90" />
                    </TransformGroup>
                </TextBlock.LayoutTransform>
            </TextBlock>

            <TextBlock
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=Border}, Converter={StaticResource DigitDoubleConverter}, ConverterParameter=1.5, FallbackValue=20}"
                Text="{Binding Words}"
                TextAlignment="Center"
                TextTrimming="None"
                TextWrapping="NoWrap">
                <TextBlock.LayoutTransform>
                    <TransformGroup>
                        <TranslateTransform Y="-50" />
                        <RotateTransform Angle="90" />
                    </TransformGroup>
                </TextBlock.LayoutTransform>
                <TextBlock.Foreground>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0.2" Color="{Binding DataContext.DesktopLyric.LinearGradientColorBrush.ColorBrush.Color, RelativeSource={RelativeSource AncestorType=Border}}" />
                        <GradientStop Offset="1" Color="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush.Color, RelativeSource={RelativeSource AncestorType=Border}}" />
                    </LinearGradientBrush>
                </TextBlock.Foreground>
                <TextBlock.Width>
                    <MultiBinding Converter="{StaticResource DesktopLyricColorfulMultiConverter}">
                        <Binding Mode="OneWay" Path="IsPlayed" />

                        <Binding Mode="OneWay" Path="IsPlayingLine" />

                        <Binding
                            Mode="OneWay"
                            Path="DataContext.CurrentMusic.WordProgress"
                            RelativeSource="{RelativeSource AncestorType=Border}" />

                        <Binding Mode="OneWay" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </TextBlock.Width>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PanelSimpleLyric">
        <Grid Margin="20,10" HorizontalAlignment="Center">
            <TextBlock
                FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource DigitDoubleConverter}, ConverterParameter=1.5, FallbackValue=20}"
                Foreground="{DynamicResource TextBlock.Foreground}"
                Text="{Binding Words}" />

            <TextBlock
                HorizontalAlignment="Left"
                ClipToBounds="True"
                FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource DigitDoubleConverter}, ConverterParameter=1.5, FallbackValue=20}"
                Foreground="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush, RelativeSource={RelativeSource AncestorType=UserControl}, FallbackValue=SkyBlue}"
                Text="{Binding Words}"
                TextTrimming="None">
                <TextBlock.Width>
                    <MultiBinding Converter="{StaticResource DesktopLyricColorfulMultiConverter}">
                        <Binding Mode="OneWay" Path="IsPlayed" />

                        <Binding Mode="OneWay" Path="IsPlayingLine" />

                        <Binding
                            Mode="OneWay"
                            Path="DataContext.CurrentMusic.WordProgress"
                            RelativeSource="{RelativeSource AncestorType=Border}" />

                        <Binding Mode="OneWay" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </TextBlock.Width>
                <TextBlock.ToolTip>
                    <TextBlock>
                        <TextBlock Text="{Binding LineStart.TotalSeconds}" />
                        <TextBlock Text="{Binding LineDuring.TotalSeconds}" />
                    </TextBlock>
                </TextBlock.ToolTip>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <Style
        x:Key="MusicEffectToggleButton"
        BasedOn="{StaticResource TransparentButtonBase}"
        TargetType="ToggleButton">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="12,2" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="attaches:MyAttachProperty.CornerRadius" Value="5" />

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="1" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#6AD2FF" />
                <Setter Property="BorderBrush" Value="#6AD2FF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MediaElement">
        <Setter Property="LoadedBehavior" Value="Manual" />
        <Setter Property="UnloadedBehavior" Value="Pause" />

        <Setter Property="Stretch" Value="UniformToFill" />
        <Setter Property="Volume" Value="1" />

        <Setter Property="Visibility" Value="Visible" />
    </Style>

    <Style
        x:Key="BatchOperateToggleButton"
        BasedOn="{StaticResource TransparentButtonBase}"
        TargetType="ToggleButton">
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock>
                    <TextBlock Text="&#xe74f;" />
                    <TextBlock Text="批量操作" />
                </TextBlock>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />

                <!--<Setter Property="DockPanel.Dock" Value="Right" />
                <Setter Property="Content" Value="退出批量操作" />-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="DeleteButton"
        BasedOn="{StaticResource TransparentButtonBase}"
        TargetType="Button">
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock>
                    <TextBlock Text="&#xec7b;" />
                    <TextBlock Text="删除" />
                </TextBlock>
            </Setter.Value>
        </Setter>

        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=ToggleBatch, Mode=OneWay}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="PlayAllButton"
        BasedOn="{StaticResource TransparentButtonBase}"
        TargetType="Button">
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock>
                    <TextBlock Text="&#xea6d;" />
                    <TextBlock Text="播放" />
                </TextBlock>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="DownloadButton"
        BasedOn="{StaticResource TransparentButtonBase}"
        TargetType="Button">
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock>
                    <TextBlock Text="&#xe63b;" />
                    <TextBlock Text="下载" />
                </TextBlock>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="AddMusicButton"
        BasedOn="{StaticResource TransparentButtonBase}"
        TargetType="Button">
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock>
                    <TextBlock Text="&#xe663;" />
                    <TextBlock Text="本地添加" />
                </TextBlock>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="LyricSlideTxt"
        BasedOn="{StaticResource IconText}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="40,20,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Text" Value="&#xe65e;" />
        <Setter Property="Foreground" Value="{StaticResource LightWhite}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource HoveredTransparentButtonBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="LyricListBoxItem"
        BasedOn="{StaticResource ListBoxItem_General}"
        TargetType="ListBoxItem">
        <Setter Property="FontSize" Value="20" />

        <Setter Property="Focusable" Value="False" />

        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type utils:KRCLyricsLine}">
                    <Grid HorizontalAlignment="Center">
                        <TextBlock
                            HorizontalAlignment="Left"
                            FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=ListBox}}"
                            Text="{Binding Words}"
                            TextWrapping="NoWrap" />

                        <TextBlock
                            HorizontalAlignment="Left"
                            ClipToBounds="True"
                            FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=ListBox}}"
                            Foreground="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush, RelativeSource={RelativeSource AncestorType=ListBox}}"
                            Text="{Binding Words}"
                            TextTrimming="None"
                            TextWrapping="NoWrap">

                            <TextBlock.Width>
                                <MultiBinding Converter="{StaticResource LyricWidth_MultiConverter}" FallbackValue="0">
                                    <Binding Mode="OneWay" Path="IsPlayingLine" />
                                    <Binding
                                        Mode="OneWay"
                                        Path="DataContext.CurrentMusic.WordProgress"
                                        RelativeSource="{RelativeSource AncestorType=ListBox}" />

                                    <Binding Mode="OneWay" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </TextBlock.Width>

                            <TextBlock.ToolTip>
                                <TextBlock>
                                    <TextBlock Text="{Binding LineStart.TotalSeconds}" />
                                    <TextBlock Text="{Binding LineDuring.TotalSeconds}" />
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="PointABTextBlock"
        BasedOn="{StaticResource ThemeBlk}"
        TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontWeight" Value="Normal" />

        <Setter Property="FontSize" Value="8" />
    </Style>

    <Style
        x:Key="MusicProgressSlider"
        BasedOn="{StaticResource {x:Type Slider}}"
        TargetType="Slider">
        <Setter Property="Margin" Value="2,0" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentMusic}" Value="{x:Null}">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="VideoProgressSlider"
        BasedOn="{StaticResource {x:Type Slider}}"
        TargetType="Slider">
        <Setter Property="Margin" Value="2,0" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentVideo}" Value="{x:Null}">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ClosePlayingListFilter"
        BasedOn="{StaticResource IconButtonBase_Small}"
        TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource LightWhite}" />
    </Style>

    <Style x:Key="MyImage" TargetType="Image">
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="60" />

        <Setter Property="Source" Value="/MusicPlayerModule;component/Resources/网络.png" />

        <Setter Property="Clip">
            <Setter.Value>
                <EllipseGeometry
                    Center="30,30"
                    RadiusX="30"
                    RadiusY="30" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="DefaultSingerBack"
        BasedOn="{StaticResource IconText}"
        TargetType="TextBlock">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource DeepGray}" />

        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="60" />

        <Setter Property="FontSize" Value="40" />

        <Setter Property="Text" Value="&#xe61c;" />

        <Setter Property="Padding" Value="0,10" />

        <Setter Property="TextAlignment" Value="Center" />

        <Setter Property="Clip">
            <Setter.Value>
                <EllipseGeometry
                    Center="30,30"
                    RadiusX="30"
                    RadiusY="30" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>