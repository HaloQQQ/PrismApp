<UserControl
    x:Class="MusicPlayerModule.Views.MusicListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MusicPlayerModule.Converters"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:prism="http://prismlibrary.com/">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:MusicDistributeMultiConverter x:Key="MusicDistributeMultiConverter" />

            <Style
                x:Key="Love"
                BasedOn="{StaticResource ToggleButton_Icon_Fill}"
                TargetType="ToggleButton">
                <Setter Property="MyAttachProperty.SelectedForeground" Value="{StaticResource OrangeRed}" />

                <Setter Property="Content" Value="&#xe644;" />
                <Setter Property="ToolTip" Value="收藏" />

                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Content" Value="&#xe684;" />
                        <Setter Property="ToolTip" Value="取消收藏" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ContextMenu x:Key="MusicDir_CRUD" MyAttachProperty.IsCollapsed="True">
                <MenuItem
                    Command="{Binding OpenInExploreCommand}"
                    CommandParameter="{Binding PlacementTarget.SelectedItem.ClassifyKey, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    Header="打开目录位置"
                    Icon="&#xebdf;" />
                <MenuItem
                    Command="{Binding DistributeMusicViewModel.AddMusicDirCommand}"
                    Header="新增目录"
                    Icon="&#xe622;" />
                <MenuItem
                    Command="{Binding DistributeMusicViewModel.BatchMoveMusicDirCommand}"
                    CommandParameter="{Binding PlacementTarget.SelectedItem.ClassifyKey, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    Header="移动内容"
                    Icon="&#xe64f;" />
                <MenuItem
                    Command="{Binding DistributeMusicViewModel.RemoveMusicDirCommand}"
                    CommandParameter="{Binding PlacementTarget.SelectedItem.ClassifyKey, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    Header="移除目录"
                    Icon="&#xec7b;" />
                <MenuItem
                    Command="{Binding DistributeMusicViewModel.RenameMusicDirCommand}"
                    CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    Header="修改目录名"
                    Icon="&#xe654;" />
                <MenuItem
                    Command="{Binding AddToPlayingCommand}"
                    CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    Header="添加到播放队列"
                    Icon="&#xe704;" />
            </ContextMenu>

            <ContextMenu x:Key="FavoriteDataGridContextMenu" MyAttachProperty.IsCollapsed="True">
                <MenuItem
                    Command="{Binding PlacementTarget.DataContext.PlayFavoriteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    Header="播放"
                    Icon="&#xea6d;" />

                <MenuItem
                    Command="{Binding PlacementTarget.DataContext.AddNextCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    Header="下一首播放"
                    Icon="&#xe704;" />

                <MenuItem
                    Command="{Binding PlacementTarget.DataContext.OpenInExploreCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    CommandParameter="{Binding PlacementTarget.SelectedItem.Music.FileDir, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    Header="打开目录位置"
                    Icon="&#xebdf;" />

                <MenuItem
                    Command="{Binding PlacementTarget.DataContext.DownLoadCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    CommandParameter="{Binding PlacementTarget.SelectedItem.Music, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    Header="下载"
                    Icon="&#xe63b;" />

                <MenuItem
                    Command="{Binding PlacementTarget.DataContext.DistributeMusicViewModel.DeleteFavoriteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                    Header="从列表删除"
                    Icon="&#xec7b;" />

                <MenuItem
                    Header="添加到"
                    Icon="&#xe663;"
                    ItemsSource="{Binding PlacementTarget.DataContext.DistributeMusicViewModel.MusicDirs, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding DirName}" />
                            <Setter Property="Command" Value="{Binding PlacementTarget.DataContext.DistributeMusicViewModel.DistributeToCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />

                            <Setter Property="CommandParameter">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource MusicDistributeMultiConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="PlacementTarget.SelectedItem.Music" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                            <Binding Path="DirPath" />
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MultiConverter_IsStringEquals}">
                                            <MultiBinding.Bindings>
                                                <Binding Path="PlacementTarget.SelectedItem.Music.FileDir" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                                <Binding Path="DirPath" />
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </ContextMenu>

            <Style
                x:Key="FavoriteDataGridFirstColumnHeaderStyle"
                BasedOn="{StaticResource {x:Type DataGridColumnHeader}}"
                TargetType="DataGridColumnHeader">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridColumnHeader">
                            <Grid Margin="10,0,0,0">
                                <TextBlock Style="{StaticResource TextBlock_NotImportant_White}" Visibility="{Binding DataContext.DistributeMusicViewModel.CanBatchSelect, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource BoolToVisibleCollapsedConverter}}">
                                    <TextBlock Text="已选" />
                                    <TextBlock Text="{Binding DataContext.DistributeMusicViewModel.SelectedCount, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                                    <TextBlock Text="首" />
                                </TextBlock>

                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock Text="音乐名" />
                                    <TextBlock Style="{StaticResource TextBlock_DataGridColumnHeader_SortIcon}" />

                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Visible" />

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DataContext.DistributeMusicViewModel.CanBatchSelect, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="FavoriteDataGridFirstColumnCellTemplate">
                <DockPanel Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=DataGridCell}}" HorizontalAlignment="Stretch">
                    <StackPanel
                        Margin="0,0,15,0"
                        DockPanel.Dock="Right"
                        Orientation="Horizontal">
                        <Button
                            Command="{Binding DataContext.PlayFavoriteCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                            CommandParameter="{Binding}"
                            Content="&#xea6d;"
                            Style="{StaticResource ButtonBase_Icon_Small_HoverBlue}"
                            ToolTip="播放当前" />
                        <Button
                            Command="{Binding DataContext.AddNextCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                            CommandParameter="{Binding}"
                            Content="&#xe704;"
                            Style="{StaticResource ButtonBase_Icon_Small_HoverBlue}"
                            ToolTip="下一首播放" />
                        <Button
                            Command="{Binding DataContext.DownLoadCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                            CommandParameter="{Binding Music}"
                            Content="&#xe63b;"
                            Style="{StaticResource ButtonBase_Icon_Small_HoverBlue}"
                            ToolTip="下载" />
                        <Button
                            Content="&#xe682;"
                            MyAttachProperty.HasContextMenu="True"
                            Style="{StaticResource ButtonBase_Icon_Small_HoverBlue}"
                            Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                            ToolTip="更多">
                            <Button.ContextMenu>
                                <ContextMenu MyAttachProperty.IsCollapsed="True">
                                    <MenuItem
                                        Command="{Binding PlacementTarget.Tag.PlayFavoriteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        Header="播放"
                                        Icon="&#xea6d;" />

                                    <MenuItem
                                        Command="{Binding PlacementTarget.Tag.AddNextCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        Header="下一首播放"
                                        Icon="&#xe704;" />

                                    <MenuItem
                                        Command="{Binding PlacementTarget.Tag.OpenInExploreCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding PlacementTarget.DataContext.Music.FileDir, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        Header="打开目录位置"
                                        Icon="&#xebdf;" />

                                    <MenuItem
                                        Command="{Binding PlacementTarget.Tag.DownLoadCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding PlacementTarget.DataContext.Music, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        Header="下载"
                                        Icon="&#xe63b;" />

                                    <MenuItem
                                        Command="{Binding PlacementTarget.Tag.DistributeMusicViewModel.DeleteFavoriteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        Header="从列表删除"
                                        Icon="&#xec7b;" />

                                    <MenuItem
                                        Header="添加到"
                                        Icon="&#xe663;"
                                        ItemsSource="{Binding PlacementTarget.Tag.DistributeMusicViewModel.MusicDirs, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                        <MenuItem.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                                                <Setter Property="Header" Value="{Binding DirName}" />
                                                <Setter Property="Command" Value="{Binding PlacementTarget.Tag.DistributeMusicViewModel.DistributeToCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                <Setter Property="CommandParameter">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource MusicDistributeMultiConverter}">
                                                            <MultiBinding.Bindings>
                                                                <Binding Path="PlacementTarget.DataContext.Music" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                                                <Binding Path="DirPath" />
                                                            </MultiBinding.Bindings>
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>

                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource MultiConverter_IsStringEquals}">
                                                                <MultiBinding.Bindings>
                                                                    <Binding Path="PlacementTarget.DataContext.Music.FileDir" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                                                    <Binding Path="DirPath" />
                                                                </MultiBinding.Bindings>
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>

                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                    </MenuItem>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>

                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <ToggleButton DockPanel.Dock="Left" Style="{StaticResource Love}" />

                    <TextBlock
                        DockPanel.Dock="Left"
                        Text="{Binding Music.Name}"
                        ToolTip="{Binding Music.Name}" />
                </DockPanel>
            </DataTemplate>

            <Style
                x:Key="DefaultSingerBack"
                BasedOn="{StaticResource TextBlock_Theme_Icon_MouseOver}"
                TargetType="TextBlock">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="{StaticResource DeepGray}" />

                <Setter Property="Width" Value="60" />
                <Setter Property="Height" Value="60" />

                <Setter Property="FontSize" Value="40" />

                <Setter Property="Text" Value="&#xe61c;" />

                <Setter Property="Padding" Value="0,10" />

                <Setter Property="TextAlignment" Value="Center" />

                <Setter Property="Clip">
                    <Setter.Value>
                        <EllipseGeometry
                            Center="30,30"
                            RadiusX="30"
                            RadiusY="30" />
                    </Setter.Value>
                </Setter>
            </Style>

            <converters:BatchAddAndPlayModelConverter x:Key="BatchAddAndPlayModelConverter" />
        </ResourceDictionary>
    </UserControl.Resources>


    <Grid Grid.Row="1" Background="Transparent">
        <FrameworkElement x:Name="dummyElement" Visibility="Collapsed" />

        <NeedleWaitLoad
            Width="80"
            Height="80"
            Foreground="DodgerBlue"
            Visibility="{Binding DistributeMusicViewModel.IsLoading, Converter={StaticResource BoolToVisibleCollapsedConverter}}" />

        <DataGrid
            x:Name="DataGrid_ShowBySong"
            HeadersVisibility="All"
            ItemsSource="{Binding DistributeMusicViewModel.DisplayFavorites}"
            MyAttachProperty.DisplayRowNumber="False"
            Visibility="{Binding DistributeMusicViewModel.IsInSong, Converter={StaticResource BoolToVisibleCollapsedConverter}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding DataContext.PlayCurrentItemsCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <i:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource BatchAddAndPlayModelConverter}">
                                <MultiBinding.Bindings>
                                    <Binding Path="DataContext.DistributeMusicViewModel.DisplayFavorites" RelativeSource="{RelativeSource AncestorType=DataGrid}" />
                                    <Binding Path="SelectedItem" RelativeSource="{RelativeSource AncestorType=DataGrid}" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </i:InvokeCommandAction.CommandParameter>
                    </i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Style>
                <Style BasedOn="{StaticResource DataGrid_Transparent}" TargetType="DataGrid">
                    <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DistributeMusicViewModel.DisplayFavorites.Count}" Value="0">
                            <Setter Property="ContextMenu" Value="{x:Null}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding DistributeMusicViewModel.IsLoading}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Style>
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="DataGridRow">
                    <Setter Property="Header" Value="{Binding IndexString, Mode=OneWay}" />
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridCheckBoxColumn
                    MaxWidth="60"
                    Binding="{Binding IsDeleting, UpdateSourceTrigger=PropertyChanged}"
                    ElementStyle="{StaticResource {x:Type CheckBox}}"
                    Visibility="{Binding DataContext.DistributeMusicViewModel.CanBatchSelect, Converter={StaticResource BoolToVisibleCollapsedConverter}, Source={x:Reference dummyElement}}">
                    <DataGridCheckBoxColumn.HeaderTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding DataContext.DistributeMusicViewModel.SelectFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid}}">
                                <CheckBox.Style>
                                    <Style BasedOn="{StaticResource CheckBox_SelectAll}" TargetType="CheckBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="0">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridCheckBoxColumn.HeaderTemplate>
                </DataGridCheckBoxColumn>

                <DataGridTemplateColumn
                    MinWidth="230"
                    CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                    HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"
                    SortMemberPath="Music.Name" />

                <DataGridTemplateColumn MaxWidth="150" SortMemberPath="Music.Singer">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock Text="歌手" />
                                <TextBlock Style="{StaticResource TextBlock_DataGridColumnHeader_SortIcon}" />
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Music.Singer}" ToolTip="{Binding Music.Singer}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn MaxWidth="200" SortMemberPath="Music.Album">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock Text="专辑" />
                                <TextBlock Style="{StaticResource TextBlock_DataGridColumnHeader_SortIcon}" />
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Music.Album}" ToolTip="{Binding Music.Album}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn MinWidth="120" SortMemberPath="Music.Size">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock Text="文件(MB)" />
                                <TextBlock Style="{StaticResource TextBlock_DataGridColumnHeader_SortIcon}" />
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Music.Size}" ToolTip="{Binding Music.Size}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn MinWidth="80" SortMemberPath="Music.Duration">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock Text="时长" />
                                <TextBlock Style="{StaticResource TextBlock_DataGridColumnHeader_SortIcon}" />
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Music.Duration}" ToolTip="{Binding Music.Duration}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn
                    Width="*"
                    MaxWidth="1000"
                    SortMemberPath="Music.FilePath">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock Text="文件路径" />
                                <TextBlock Style="{StaticResource TextBlock_DataGridColumnHeader_SortIcon}" />
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Music.FilePath}" ToolTip="{Binding Music.FilePath}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Grid Visibility="{Binding DistributeMusicViewModel.IsInAlbum, Converter={StaticResource BoolToVisibleCollapsedConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="7*" />
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0">
                <TextBox
                    Background="Transparent"
                    BorderBrush="{StaticResource TransparentButtonBackground}"
                    DockPanel.Dock="Top"
                    MyAttachProperty.IsCollapsed="True"
                    MyAttachProperty.PlaceHolder="搜索专辑"
                    Style="{StaticResource TextBox_Execute}"
                    Text="{Binding DistributeMusicViewModel.AlbumMusicFilteKeyWords, UpdateSourceTrigger=PropertyChanged, Delay=100}" />

                <ListBox
                    x:Name="MusicByAlbumListBox"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    DockPanel.Dock="Bottom"
                    ItemsSource="{Binding DistributeMusicViewModel.DisplayMusicAlbumFavorites}"
                    SelectedIndex="0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DataContext.PlayCurrentCategoryCommand, RelativeSource={RelativeSource AncestorType=Grid}}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <TextBlock
                                    DockPanel.Dock="Left"
                                    Style="{StaticResource DefaultSingerBack}"
                                    Text="&#xe6dc;" />

                                <StackPanel Margin="10" VerticalAlignment="Center">
                                    <TextBlock
                                        Margin="0,5"
                                        FontSize="16"
                                        Text="{Binding ClassifyKey}"
                                        ToolTip="{Binding ClassifyKey}" />
                                    <TextBlock Margin="0,5" FontSize="16">
                                        <TextBlock Text="{Binding DisplayByClassifyKeyFavorites.Count}" />
                                        <TextBlock Text="首" />
                                    </TextBlock>
                                </StackPanel>
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>

            <DataGrid
                Grid.Column="1"
                HeadersVisibility="All"
                ItemsSource="{Binding SelectedItem.DisplayByClassifyKeyFavorites, ElementName=MusicByAlbumListBox}"
                MyAttachProperty.DisplayRowNumber="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding DataContext.PlayCurrentItemsCommand, RelativeSource={RelativeSource AncestorType=Grid}}">
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource BatchAddAndPlayModelConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="ItemsSource" RelativeSource="{RelativeSource AncestorType=DataGrid}" />
                                        <Binding Path="SelectedItem" RelativeSource="{RelativeSource AncestorType=DataGrid}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Style>
                    <Style BasedOn="{StaticResource DataGrid_Transparent}" TargetType="DataGrid">
                        <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DistributeMusicViewModel.DisplayFavorites.Count}" Value="0">
                                <Setter Property="ContextMenu" Value="{x:Null}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>

                <DataGrid.Columns>
                    <DataGridCheckBoxColumn
                        MinWidth="40"
                        Binding="{Binding IsDeleting, UpdateSourceTrigger=PropertyChanged}"
                        ElementStyle="{StaticResource {x:Type CheckBox}}"
                        Visibility="{Binding DataContext.DistributeMusicViewModel.CanBatchSelect, Converter={StaticResource BoolToVisibleCollapsedConverter}, Source={x:Reference dummyElement}}">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding DataContext.DistributeMusicViewModel.SelectAlbumFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid}, UpdateSourceTrigger=PropertyChanged}">
                                    <CheckBox.Style>
                                        <Style BasedOn="{StaticResource CheckBox_SelectAll}" TargetType="CheckBox">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="0">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>

                    <DataGridTemplateColumn
                        Width="Auto"
                        MinWidth="230"
                        CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                        HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"
                        SortMemberPath="Music.Name" />

                    <DataGridTemplateColumn
                        Width="*"
                        MaxWidth="1000"
                        SortMemberPath="Music.Singer">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock Text="歌手" />
                                    <TextBlock Style="{StaticResource TextBlock_DataGridColumnHeader_SortIcon}" />
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Music.Singer}" ToolTip="{Binding Music.Singer}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <Grid Visibility="{Binding DistributeMusicViewModel.IsInSinger, Converter={StaticResource BoolToVisibleCollapsedConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="7*" />
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Column="0">
                <TextBox
                    Background="Transparent"
                    BorderBrush="{StaticResource TransparentButtonBackground}"
                    DockPanel.Dock="Top"
                    MyAttachProperty.IsCollapsed="True"
                    MyAttachProperty.PlaceHolder="搜索歌手"
                    Style="{StaticResource TextBox_Execute}"
                    Text="{Binding DistributeMusicViewModel.SingerMusicFilteKeyWords, UpdateSourceTrigger=PropertyChanged, Delay=100}" />

                <ListBox
                    x:Name="MusicBySingerListBox"
                    HorizontalContentAlignment="Left"
                    DockPanel.Dock="Bottom"
                    ItemsSource="{Binding DistributeMusicViewModel.DisplayMusicSingerFavorites}"
                    SelectedIndex="0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DataContext.PlayCurrentCategoryCommand, RelativeSource={RelativeSource AncestorType=Grid}}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <TextBlock DockPanel.Dock="Left" Style="{StaticResource DefaultSingerBack}" />

                                <StackPanel Margin="10" VerticalAlignment="Center">
                                    <TextBlock
                                        Margin="0,5"
                                        FontSize="16"
                                        Text="{Binding ClassifyKey}"
                                        ToolTip="{Binding ClassifyKey}" />
                                    <TextBlock Margin="0,5" FontSize="16">
                                        <TextBlock Text="{Binding DisplayByClassifyKeyFavorites.Count}" />
                                        <TextBlock Text="首" />
                                    </TextBlock>
                                </StackPanel>
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>

            <DataGrid
                x:Name="DataGrid_ShowBySinger"
                Grid.Column="1"
                HeadersVisibility="All"
                ItemsSource="{Binding SelectedItem.DisplayByClassifyKeyFavorites, ElementName=MusicBySingerListBox}"
                MyAttachProperty.DisplayRowNumber="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding DataContext.PlayCurrentItemsCommand, RelativeSource={RelativeSource AncestorType=Grid}}">
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource BatchAddAndPlayModelConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="ItemsSource" RelativeSource="{RelativeSource AncestorType=DataGrid}" />
                                        <Binding Path="SelectedItem" RelativeSource="{RelativeSource AncestorType=DataGrid}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Style>
                    <Style BasedOn="{StaticResource DataGrid_Transparent}" TargetType="DataGrid">
                        <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DistributeMusicViewModel.DisplayFavorites.Count}" Value="0">
                                <Setter Property="ContextMenu" Value="{x:Null}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>

                <DataGrid.Columns>
                    <DataGridCheckBoxColumn
                        MinWidth="40"
                        Binding="{Binding IsDeleting, UpdateSourceTrigger=PropertyChanged}"
                        ElementStyle="{StaticResource {x:Type CheckBox}}"
                        Visibility="{Binding DataContext.DistributeMusicViewModel.CanBatchSelect, Converter={StaticResource BoolToVisibleCollapsedConverter}, Source={x:Reference dummyElement}}">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding DataContext.DistributeMusicViewModel.SelectSingerFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid}, UpdateSourceTrigger=PropertyChanged}">
                                    <CheckBox.Style>
                                        <Style BasedOn="{StaticResource CheckBox_SelectAll}" TargetType="CheckBox">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="0">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>

                    <DataGridTemplateColumn
                        Width="Auto"
                        MinWidth="230"
                        CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                        HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"
                        SortMemberPath="Music.Name" />

                    <DataGridTemplateColumn
                        Width="*"
                        MaxWidth="1000"
                        SortMemberPath="Music.Album">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock Text="专辑" />
                                    <TextBlock Style="{StaticResource TextBlock_DataGridColumnHeader_SortIcon}" />
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Music.Album}" ToolTip="{Binding Music.Album}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <Grid Visibility="{Binding DistributeMusicViewModel.IsInDir, Converter={StaticResource BoolToVisibleCollapsedConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="7*" />
            </Grid.ColumnDefinitions>

            <ListBox
                x:Name="MusicByDirListBox"
                Grid.Column="0"
                HorizontalContentAlignment="Left"
                ContextMenu="{StaticResource MusicDir_CRUD}"
                DockPanel.Dock="Bottom"
                ItemsSource="{Binding DistributeMusicViewModel.MusicDirFavorites}"
                SelectedIndex="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding DataContext.PlayCurrentCategoryCommand, RelativeSource={RelativeSource AncestorType=Grid}}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <StackPanel Margin="10" VerticalAlignment="Center">
                                <TextBlock
                                    Margin="0,5"
                                    FontSize="16"
                                    Text="{Binding ClassifyKey}"
                                    ToolTip="{Binding ClassifyKey}" />
                                <TextBlock Margin="0,5" FontSize="16">
                                    <TextBlock Text="{Binding DisplayByClassifyKeyFavorites.Count}" />
                                    <TextBlock Text="首" />
                                </TextBlock>
                            </StackPanel>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <DataGrid
                x:Name="DataGrid_ShowByDir"
                Grid.Column="1"
                HeadersVisibility="All"
                ItemsSource="{Binding SelectedItem.DisplayByClassifyKeyFavorites, ElementName=MusicByDirListBox}"
                MyAttachProperty.DisplayRowNumber="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding DataContext.PlayCurrentItemsCommand, RelativeSource={RelativeSource AncestorType=Grid}}">
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource BatchAddAndPlayModelConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="ItemsSource" RelativeSource="{RelativeSource AncestorType=DataGrid}" />
                                        <Binding Path="SelectedItem" RelativeSource="{RelativeSource AncestorType=DataGrid}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Style>
                    <Style BasedOn="{StaticResource DataGrid_Transparent}" TargetType="DataGrid">
                        <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DistributeMusicViewModel.DisplayFavorites.Count}" Value="0">
                                <Setter Property="ContextMenu" Value="{x:Null}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>

                <DataGrid.Columns>
                    <DataGridCheckBoxColumn
                        MinWidth="40"
                        Binding="{Binding IsDeleting, UpdateSourceTrigger=PropertyChanged}"
                        ElementStyle="{StaticResource {x:Type CheckBox}}"
                        Visibility="{Binding DataContext.DistributeMusicViewModel.CanBatchSelect, Converter={StaticResource BoolToVisibleCollapsedConverter}, Source={x:Reference dummyElement}}">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding DataContext.DistributeMusicViewModel.SelectDirFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid}, UpdateSourceTrigger=PropertyChanged}">
                                    <CheckBox.Style>
                                        <Style BasedOn="{StaticResource CheckBox_SelectAll}" TargetType="CheckBox">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="0">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>

                    <DataGridTemplateColumn
                        Width="Auto"
                        MinWidth="230"
                        CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                        HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"
                        SortMemberPath="Music.Name" />

                    <DataGridTemplateColumn
                        Width="*"
                        MaxWidth="1000"
                        SortMemberPath="Music.Singer">
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock Text="歌手" />
                                    <TextBlock Style="{StaticResource TextBlock_DataGridColumnHeader_SortIcon}" />
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Music.Singer}" ToolTip="{Binding Music.Singer}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
