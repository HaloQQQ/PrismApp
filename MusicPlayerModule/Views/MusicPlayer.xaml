<UserControl x:Class="MusicPlayerModule.Views.MusicPlayer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:attachs="clr-namespace:IceTea.Wpf.Core.Attachs;assembly=IceTea.Wpf.Core"
             xmlns:helper="clr-namespace:IceTea.Wpf.Core.Helper;assembly=IceTea.Wpf.Core"
             xmlns:waitLoads="clr-namespace:IceTea.Wpf.Core.WaitLoads;assembly=IceTea.Wpf.Core"
             xmlns:common="clr-namespace:MusicPlayerModule.Common" FocusVisualStyle="{x:Null}"
             xmlns:commonModel="clr-namespace:MusicPlayerModule.Models.Common"
             xmlns:personalConverter="clr-namespace:MusicPlayerModule.Converters"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MusicPlayerModule;component/Resources/Resources.xaml"/>
                <ResourceDictionary Source="/MusicPlayerModule;component/Resources/DataGridContextMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <personalConverter:LyricHeightConverter x:Key="LyricHeightConverter"/>

            <Style TargetType="Image" x:Key="MusicImage">
                <Setter Property="Width" Value="60" />
                <Setter Property="Height" Value="60" />

                <Setter Property="Margin" Value="5" />

                <Setter Property="Source" Value="{Binding CurrentMusic.Music.ImageSource}" />

                <Setter Property="Clip">
                    <Setter.Value>
                        <RectangleGeometry Rect="0,0,60,60" RadiusX="5" RadiusY="5"/>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding CurrentMusic.Music.ImageSource}" Value="{x:Null}">
                        <Setter Property="Source">
                            <Setter.Value>
                                <BitmapImage UriSource="/MusicPlayerModule;component/Resources/音符SVG-87.png" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <Style TargetType="TextBlock" x:Key="Music_PointABTextBlock" BasedOn="{StaticResource PointABTextBlock}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding CurrentMusic}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CategoryRadioButton" TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DisplayFavorites.Count}" Value="0">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid CommandManager.Executed="UserControl_Executed" MouseWheel="Grid_MouseWheel"
          attachs:MyAttachProperty.IsElementFocused="True" FocusVisualStyle="{x:Null}">
        <Grid.InputBindings>
            <KeyBinding Key="Space" Command="{Binding PlayPlayingCommand}" CommandParameter="{Binding CurrentMusic}"/>

            <KeyBinding Command="GoToPage" Key="Esc"/>

            <KeyBinding Command="Close" CommandParameter="CloseDesktopLyricPanel" Modifiers="Alt" Key="C"/>

            <KeyBinding Command="{Binding PlayAllCommand}" Gesture="Alt+P"/>

            <KeyBinding Command="{Binding PointACommand}" Key="D1"  Modifiers="Ctrl"/>
            <KeyBinding Command="{Binding PointBCommand}" Key="D2" Modifiers="Ctrl"/>
            <KeyBinding Command="{Binding ResetPointABCommand}" Key="Delete" Modifiers="Ctrl"/>

            <KeyBinding Command="{Binding AddFolderCommand}" Key="O" Modifiers="Ctrl"/>

            <KeyBinding Command="{x:Static ComponentCommands.MoveToHome}" Key="Home" />

            <KeyBinding Command="{x:Static MediaCommands.Rewind}" Key="Left" />

            <KeyBinding Command="{x:Static MediaCommands.DecreaseVolume}" Modifiers="Ctrl" Key="Down" />

            <KeyBinding Command="{Binding PrevCommand}" CommandParameter="{Binding CurrentMusic}" Key="PageUp"/>

            <KeyBinding Command="{Binding PlayPlayingCommand}" CommandParameter="{Binding CurrentMusic}" Key="F" Modifiers="Alt"/>

            <KeyBinding Command="{Binding CleanPlayingCommand}" Key="D" Modifiers="Alt"/>

            <KeyBinding Command="{Binding NextCommand}" CommandParameter="{Binding CurrentMusic}" Key="PageDown"/>

            <KeyBinding Command="{Binding StopPlayMusicCommand}" CommandParameter="{Binding CurrentMusic}" Key="W" Modifiers="Alt"/>

            <KeyBinding Command="{Binding CleanPlayingCommand}" Key="A" Modifiers="Alt"/>

            <KeyBinding Command="{x:Static MediaCommands.IncreaseVolume}" Modifiers="Ctrl" Key="Up" />

            <KeyBinding Command="{x:Static MediaCommands.FastForward}" Key="Right" />

            <KeyBinding Command="{x:Static ComponentCommands.MoveToEnd}" Key="End" />
        </Grid.InputBindings>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Margin="15,0" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="45*"/>
                <ColumnDefinition Width="23*"/>
                <ColumnDefinition Width="32*"/>
            </Grid.ColumnDefinitions>

            <Viewbox Grid.Column="0" HorizontalAlignment="Left" Style="{StaticResource OnlyDownViewbox}">
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding PlayAllCommand}" ToolTip="Alt+P" Style="{StaticResource PlayAllButton}"/>

                    <ToggleButton x:Name="ToggleBatch" Style="{StaticResource BatchOperateToggleButton}"
                                  IsChecked="{Binding IsBatchSelect,Mode=TwoWay}"/>

                    <Button Command="{Binding DownLoadCommand}" Style="{StaticResource DownloadButton}"/>

                    <Button Command="{Binding AddFilesCommand}" ToolTip="Ctrl+O" Style="{StaticResource AddMusicButton}">
                        <Button.InputBindings>
                            <MouseBinding MouseAction="RightClick" Command="{Binding AddFolderCommand}"/>
                        </Button.InputBindings>
                    </Button>

                    <Button Command="{Binding BatchDeleteCommand}" Style="{StaticResource DeleteButton}"/>
                </StackPanel>
            </Viewbox>

            <Viewbox Grid.Column="2" HorizontalAlignment="Right" Style="{StaticResource OnlyDownViewbox}">
                <DockPanel Grid.Column="2" LastChildFill="False" DockPanel.Dock="Right">
                    <Border DockPanel.Dock="Right" VerticalAlignment="Center"
                        CornerRadius="15" Visibility="{Binding IsBatchSelect,Converter={StaticResource BoolToCollapsedVisibleConverter}}"
                        BorderThickness="1" BorderBrush="{x:Static helper:MyStaticResources.TransparentButtonBackground}">
                        <Border.Clip>
                            <RectangleGeometry Rect="0,0,150,28" RadiusX="15" RadiusY="15"/>
                        </Border.Clip>
                        <WrapPanel VerticalAlignment="Center">
                            <RadioButton Style="{StaticResource CategoryRadioButton}" x:Name="RadioBtnShowBySong" GroupName="MusicDisplayMode" BorderThickness="0,0,0.5,0" Command="{Binding DistributeMusicViewModel.DistributeBySongCommand}" Content="&#xe790;" ToolTip="单曲" IsChecked="True"/>
                            <RadioButton Style="{StaticResource CategoryRadioButton}" x:Name="RadioBtnShowByAlbum" GroupName="MusicDisplayMode" Command="{Binding DistributeMusicViewModel.DistributeByAlbumCommand}" Content="&#xe6dc;" ToolTip="专辑"/>
                            <RadioButton Style="{StaticResource CategoryRadioButton}" x:Name="RadioBtnShowBySinger" GroupName="MusicDisplayMode" Command="{Binding DistributeMusicViewModel.DistributeBySingerCommand}" Content="&#xe61c;" ToolTip="歌手"/>
                            <RadioButton Style="{StaticResource CategoryRadioButton}" x:Name="RadioBtnShowByDir" GroupName="MusicDisplayMode" Command="{Binding DistributeMusicViewModel.DistributeByDirectoryCommand}" BorderThickness="0.5,0,0,0" Content="&#xebdf;" ToolTip="文件夹"/>
                        </WrapPanel>
                    </Border>

                    <TextBox DockPanel.Dock="Right" x:Name="FavoritesKeyWordsTxt">
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource TextBox_FilteList}">

                                <EventSetter Event="LostFocus" Handler="FavoritesKeyWordsTxtBox_LostFocus"/>

                                <Setter Property="Text" Value="{Binding FavoriteListFilteKeyWords,UpdateSourceTrigger=PropertyChanged}" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsBatchSelect}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsChecked,ElementName=RadioBtnShowBySong}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding DistributeMusicViewModel.MusicDirs.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <ToggleButton DockPanel.Dock="Right" Content="退出批量操作"
                                  Visibility="{Binding IsBatchSelect,Converter={StaticResource BoolToVisibleCollapsedConverter}}" 
                                  Style="{StaticResource TransparentButtonBase}" 
                                  IsChecked="{Binding IsBatchSelect,Converter={StaticResource OppositeBoolConverter},Mode=TwoWay}"/>
                </DockPanel>
            </Viewbox>
        </Grid>

        <Grid Grid.Row="1" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <MediaElement Grid.Row="0" Source="{Binding CurrentMusic.Music.FilePath}" x:Name="mediaPlayer"/>
            
            <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinHeight="400">
                <FrameworkElement x:Name="dummyElement" Visibility="Collapsed"/>
                
                <waitLoads:NeedleWaitLoad Foreground="DodgerBlue" Width="80" Height="80">
                    <waitLoads:NeedleWaitLoad.Style>
                        <Style TargetType="UserControl">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Value="True" Binding="{Binding IsLoading}"/>
                                        <Condition Value="0" Binding="{Binding DisplayFavorites.Count}"/>
                                    </MultiDataTrigger.Conditions>
                                    
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </waitLoads:NeedleWaitLoad.Style>
                </waitLoads:NeedleWaitLoad>
                
                <Viewbox Grid.Row="0" Style="{StaticResource OnlyDownViewbox}" VerticalAlignment="Top">
                    <DataGrid x:Name="DataGrid_ShowBySong" Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=Grid},Mode=OneWay}" 
                              Visibility="{Binding IsChecked,ElementName=RadioBtnShowBySong,Converter={StaticResource BooleanToVisibilityConverter}}" 
                              HeadersVisibility="All" 
                              attachs:MyAttachProperty.DisplayRowNumber="True"
                              ItemsSource="{Binding DisplayFavorites}">
                        <DataGrid.Style>
                            <Style TargetType="DataGrid" BasedOn="{StaticResource DataGrid_Transparent}">
                                <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />
                                
                                <Style.Triggers>
                                    <DataTrigger Value="0" Binding="{Binding DisplayFavorites.Count}">
                                        <Setter Property="ContextMenu" Value="{x:Null}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Style>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_Favorites_MouseDoubleClick"/>
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.Columns>
                            <DataGridTemplateColumn MinWidth="40"
                                                        Visibility="{Binding DataContext.IsBatchSelect, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference dummyElement}}">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <CheckBox Style="{StaticResource CheckBoxSelectAll}"
                                                Command="{Binding DataContext.SelectAllCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Mode=Self}}" 
                                                IsChecked="{Binding DataContext.SelectFavoriteAll,RelativeSource={RelativeSource AncestorType=DataGrid},UpdateSourceTrigger=PropertyChanged}"
                                                />
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsDeleting,UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn MinWidth="230" SortMemberPath="Music.Name"
                                                    CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}" 
                                                    HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"/>

                            <DataGridTemplateColumn MaxWidth="150" SortMemberPath="Music.Singer">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock Text="歌手" />
                                            <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Music.Singer}" ToolTip="{Binding Music.Singer}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn MaxWidth="150" SortMemberPath="Music.Album">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock Text="专辑" />
                                            <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Music.Album}" ToolTip="{Binding Music.Album}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn SortMemberPath="Music.Size">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock Text="文件大小(MB)" />
                                            <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Music.Size}" ToolTip="{Binding Music.Size}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn SortMemberPath="Music.Duration">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                                <TextBlock Text="时长" />
                                                <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                            </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Music.Duration}" ToolTip="{Binding Music.Duration}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="200" MaxWidth="1000" SortMemberPath="Music.FilePath">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                                <TextBlock Text="文件路径" />
                                                <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                            </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Music.FilePath}" ToolTip="{Binding Music.FilePath}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Viewbox>

                <Grid Visibility="{Binding IsChecked,ElementName=RadioBtnShowByAlbum,Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="7*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Column="0">
                        <TextBox DockPanel.Dock="Top" Text="{Binding DistributeMusicViewModel.AlbumMusicFilteKeyWords,UpdateSourceTrigger=PropertyChanged}" 
                                     attachs:MyAttachProperty.PlaceHolder="搜索专辑"  Style="{StaticResource TextBox_QueryTxt}"/>

                        <ListBox DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" SelectedIndex="0"
                                 x:Name="MusicByAlbumListBox" ItemsSource="{Binding DistributeMusicViewModel.DisplayMusicAlbumFavorites}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}" />

                                    <EventSetter Event="MouseDoubleClick" Handler="MusicDistribute_ListBox_MouseDoubleClick"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <!--<Image DockPanel.Dock="Left" Style="{StaticResource MyImage}"/>-->
                                        <TextBlock DockPanel.Dock="Left" Text="&#xe6dc;" Style="{StaticResource DefaultSingerBack}"/>

                                        <StackPanel VerticalAlignment="Center" Margin="10">
                                            <TextBlock FontSize="16" Margin="0,5" Text="{Binding ClassifyKey}" ToolTip="{Binding ClassifyKey}"/>
                                            <TextBlock FontSize="16" Margin="0,5">
                                                    <TextBlock Text="{Binding DisplayByClassifyKeyFavorites.Count}"/>
                                                    <TextBlock Text="首"/>
                                                </TextBlock>
                                        </StackPanel>
                                    </DockPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>

                    <Viewbox Grid.Column="1" Style="{StaticResource OnlyDownViewbox}" VerticalAlignment="Top">
                        <DataGrid x:Name="DataGrid_ShowByAlbum" Grid.Column="1"
                              HeadersVisibility="All" Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=Grid},Mode=OneWay}" 
                              attachs:MyAttachProperty.DisplayRowNumber="True"
                              ItemsSource="{Binding SelectedItem.DisplayByClassifyKeyFavorites,ElementName=MusicByAlbumListBox}">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid" BasedOn="{StaticResource DataGrid_Transparent}">
                                    <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                                    <Style.Triggers>
                                        <DataTrigger Value="0" Binding="{Binding DisplayFavorites.Count}">
                                            <Setter Property="ContextMenu" Value="{x:Null}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_Favorites_MouseDoubleClick"/>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTemplateColumn MinWidth="40"
                                            Visibility="{Binding DataContext.IsBatchSelect, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference dummyElement}}">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <CheckBox Style="{StaticResource CheckBoxSelectAll}"
                                            Command="{Binding DataContext.DistributeMusicViewModel.CurrentAlbumSelectAllCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                            CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Mode=Self}}" 
                                            IsChecked="{Binding DataContext.DistributeMusicViewModel.SelectAlbumFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid},UpdateSourceTrigger=PropertyChanged}"
                                            />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsDeleting,UpdateSourceTrigger=PropertyChanged}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn MinWidth="230" Width="Auto" SortMemberPath="Music.Name"
                                                        CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                                                        HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"/>

                                <DataGridTemplateColumn Width="Auto" MaxWidth="1000" SortMemberPath="Music.Singer">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <TextBlock Text="歌手" />
                                                <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Music.Singer}" ToolTip="{Binding Music.Singer}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Viewbox>
                </Grid>

                <Grid Visibility="{Binding IsChecked,ElementName=RadioBtnShowBySinger,Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="7*"/>
                    </Grid.ColumnDefinitions>

                    <!--<Viewbox Grid.Column="0" Style="{StaticResource OnlyDownViewbox}">-->
                    <DockPanel Grid.Column="0">
                        <TextBox DockPanel.Dock="Top" Text="{Binding DistributeMusicViewModel.SingerMusicFilteKeyWords,UpdateSourceTrigger=PropertyChanged}" attachs:MyAttachProperty.PlaceHolder="搜索歌手" Style="{StaticResource TextBox_QueryTxt}"/>

                        <ListBox DockPanel.Dock="Bottom" SelectedIndex="0" x:Name="MusicBySingerListBox" ItemsSource="{Binding DistributeMusicViewModel.DisplayMusicSingerFavorites}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}" />

                                    <EventSetter Event="MouseDoubleClick" Handler="MusicDistribute_ListBox_MouseDoubleClick"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <!--<Image DockPanel.Dock="Left" Style="{StaticResource MyImage}"/>-->
                                        <TextBlock DockPanel.Dock="Left" Style="{StaticResource DefaultSingerBack}"/>

                                        <StackPanel VerticalAlignment="Center" Margin="10">
                                            <TextBlock FontSize="16" Margin="0,5" Text="{Binding ClassifyKey}" ToolTip="{Binding ClassifyKey}"/>
                                            <TextBlock FontSize="16" Margin="0,5">
                                                <TextBlock Text="{Binding DisplayByClassifyKeyFavorites.Count}"/>
                                                <TextBlock Text="首"/>
                                            </TextBlock>
                                        </StackPanel>
                                    </DockPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                    <!--</Viewbox>-->

                    <Viewbox Grid.Column="1" Style="{StaticResource OnlyDownViewbox}" VerticalAlignment="Top">
                        <DataGrid x:Name="DataGrid_ShowBySinger" Grid.Column="1"
                              HeadersVisibility="All" Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=Grid},Mode=OneWay}" 
                              attachs:MyAttachProperty.DisplayRowNumber="True"
                              ItemsSource="{Binding SelectedItem.DisplayByClassifyKeyFavorites,ElementName=MusicBySingerListBox}">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid" BasedOn="{StaticResource DataGrid_Transparent}">
                                    <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                                    <Style.Triggers>
                                        <DataTrigger Value="0" Binding="{Binding DisplayFavorites.Count}">
                                            <Setter Property="ContextMenu" Value="{x:Null}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_Favorites_MouseDoubleClick"/>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTemplateColumn MinWidth="40"
                                            Visibility="{Binding DataContext.IsBatchSelect, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference dummyElement}}">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <CheckBox Style="{StaticResource CheckBoxSelectAll}"
                                            Command="{Binding DataContext.DistributeMusicViewModel.CurrentSingerSelectAllCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                            CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Mode=Self}}" 
                                            IsChecked="{Binding DataContext.DistributeMusicViewModel.SelectSingerFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid},UpdateSourceTrigger=PropertyChanged}"
                                            />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsDeleting,UpdateSourceTrigger=PropertyChanged}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn MinWidth="230" Width="Auto" SortMemberPath="Music.Name"  
                                                        CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                                                        HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"/>

                                <DataGridTemplateColumn Width="Auto" MaxWidth="1000" SortMemberPath="Music.Album">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <TextBlock Text="专辑" />
                                                <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Music.Album}" ToolTip="{Binding Music.Album}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Viewbox>
                </Grid>

                <Grid Visibility="{Binding IsChecked,ElementName=RadioBtnShowByDir,Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="7*"/>
                    </Grid.ColumnDefinitions>

                    <!--<Viewbox Grid.Column="0" Style="{StaticResource OnlyDownViewbox}">-->
                    <ListBox Grid.Column="0" DockPanel.Dock="Bottom" SelectedIndex="0" x:Name="MusicByDirListBox" 
                             ContextMenu="{StaticResource MusicDir_CRUD}" ItemsSource="{Binding DistributeMusicViewModel.MusicDirFavorites}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}" />

                                <EventSetter Event="MouseDoubleClick" Handler="MusicDistribute_ListBox_MouseDoubleClick"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <StackPanel VerticalAlignment="Center" Margin="10">
                                        <TextBlock FontSize="16" Margin="0,5" Text="{Binding ClassifyKey}" ToolTip="{Binding ClassifyKey}"/>
                                        <TextBlock FontSize="16" Margin="0,5">
                                                <TextBlock Text="{Binding DisplayByClassifyKeyFavorites.Count}"/>
                                                <TextBlock Text="首"/>
                                            </TextBlock>
                                    </StackPanel>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <!--</Viewbox>-->

                    <Viewbox Grid.Column="1" Style="{StaticResource OnlyDownViewbox}"
                             VerticalAlignment="Top">
                        <DataGrid x:Name="DataGrid_ShowByDir" Grid.Column="1"
                              HeadersVisibility="All" Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=Grid},Mode=OneWay}"
                              attachs:MyAttachProperty.DisplayRowNumber="True"
                              ItemsSource="{Binding SelectedItem.DisplayByClassifyKeyFavorites,ElementName=MusicByDirListBox}">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid" BasedOn="{StaticResource DataGrid_Transparent}">
                                    <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                                    <Style.Triggers>
                                        <DataTrigger Value="0" Binding="{Binding DisplayFavorites.Count}">
                                            <Setter Property="ContextMenu" Value="{x:Null}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_Favorites_MouseDoubleClick"/>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTemplateColumn MinWidth="40"
                                            Visibility="{Binding DataContext.IsBatchSelect, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference dummyElement}}">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <CheckBox Style="{StaticResource CheckBoxSelectAll}"
                                                    Command="{Binding DataContext.DistributeMusicViewModel.CurrentDirSelectAllCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                    CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Mode=Self}}" 
                                                    IsChecked="{Binding DataContext.DistributeMusicViewModel.SelectDirFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid},UpdateSourceTrigger=PropertyChanged}"
                                                    />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsDeleting,UpdateSourceTrigger=PropertyChanged}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn MinWidth="230" Width="Auto" SortMemberPath="Music.Name"
                                                        CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                                                        HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"/>

                                <DataGridTemplateColumn Width="Auto" MaxWidth="1000" SortMemberPath="Music.Singer">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <TextBlock Text="歌手" />
                                                <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Music.Singer}" ToolTip="{Binding Music.Singer}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Viewbox>
                </Grid>
            </Grid>
        </Grid>

        <!--歌词展示页面-->
        <Border x:Name="LyricPage" Grid.RowSpan="3" Background="{DynamicResource BackPanel.Background}">
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{x:Static MediaCommands.TogglePlayPause}"/>
            </Border.InputBindings>
            <DockPanel>
                <TextBlock DockPanel.Dock="Top" x:Name="SliderTxt" Style="{StaticResource LyricSlideTxt}">
                    <TextBlock.InputBindings>
                        <MouseBinding MouseAction="LeftClick" Command="GoToPage"/>
                    </TextBlock.InputBindings>
                </TextBlock>

                <DockPanel Width="{Binding ActualWidth,RelativeSource={RelativeSource AncestorType=Border},Converter={StaticResource DigitDoubleConverter},ConverterParameter=0.6}" 
                           VerticalAlignment="Top">
                    <!--Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=Border},Converter={StaticResource DigitSubConverter},ConverterParameter=0.65}"-->
                    <DockPanel.Height>
                        <MultiBinding Converter="{StaticResource LyricHeightConverter}">
                            <MultiBinding.Bindings>
                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource AncestorType=Border}" />
                                <Binding Path="ActualHeight" ElementName="OperatrionPanel" />
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </DockPanel.Height>
                    <TextBlock DockPanel.Dock="Top" HorizontalAlignment="Center" FontSize="21" FontWeight="Bold" 
                               Text="{Binding CurrentMusic.Music.Name}" Foreground="{x:Static helper:MyStaticResources.SkyBlue}"/>

                    <TextBlock DockPanel.Dock="Top" HorizontalAlignment="Center" Margin="0,10"
                               Style="{StaticResource NotImportantTxt_White}"
                               Text="{Binding CurrentMusic.Music.Singer}"/>

                    <StackPanel Visibility="Collapsed" Width="{Binding ActualWidth,RelativeSource={RelativeSource AncestorType=DockPanel}}" 
                                        Margin="0,30,0,0" x:Name="LyricSimple" VerticalAlignment="Bottom">
                        <ContentControl  HorizontalAlignment="Left" FontSize="30"
                                     Content="{Binding CurrentMusic.OneLine}"
                                     ContentTemplate="{StaticResource PanelSimpleLyric}" />

                        <ContentControl  HorizontalAlignment="Right" FontSize="30"
                                     Content="{Binding CurrentMusic.AnotherLine}" 
                                     ContentTemplate="{StaticResource PanelSimpleLyric}" />
                    </StackPanel>

                    <ListBox Width="{Binding ActualWidth,RelativeSource={RelativeSource AncestorType=DockPanel}}"
                             x:Name="LyricList" DockPanel.Dock="Top" HorizontalAlignment="Center"
                             Style="{StaticResource LyricListBox}" Visibility="Visible"
                             ScrollViewer.VerticalScrollBarVisibility="Disabled"
                             ItemsSource="{Binding CurrentMusic.Music.Lyric.Lines}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource LyricListBoxItem}">
                                <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>
                                <EventSetter Event="PreviewMouseDown" Handler="SwitchLyricMode"/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlayingLine}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ListBoxItem.RenderTransform).(ScaleTransform.ScaleX)" 
                                                        To="1.5" Duration="0:0:0.5" />
                                                    <DoubleAnimation Storyboard.TargetProperty="(ListBoxItem.RenderTransform).(ScaleTransform.ScaleY)"
                                                        To="1.5" Duration="0:0:0.5" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ListBoxItem.RenderTransform).(ScaleTransform.ScaleX)" 
                                                        To="1.0" Duration="0:0:0.5" />
                                                    <DoubleAnimation Storyboard.TargetProperty="(ListBoxItem.RenderTransform).(ScaleTransform.ScaleY)" 
                                                        To="1.0" Duration="0:0:0.5" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.OpacityMask>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Border>
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0" Color="Transparent"/>
                                                <GradientStop Offset="0.15" Color="White"/>
                                                <GradientStop Offset="0.85" Color="White"/>
                                                <GradientStop Offset="1" Color="Transparent"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <TextBlock FontSize="24" Text=" " />
                                    </Border>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </ListBox.OpacityMask>
                    </ListBox>
                </DockPanel>
            </DockPanel>

            <Border.RenderTransform>
                <TranslateTransform Y="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Border.RenderTransform>
        </Border>

        <Grid Grid.Row="2" Background="#20000000" Cursor="Arrow" x:Name="OperatrionPanel">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Viewbox>
                <Grid>
                    <Slider x:Name="musicSlider" Value="{Binding CurrentMusic.CurrentMills}"
                        Style="{StaticResource MusicProgressSlider}"
                        ValueChanged="musicSlider_ValueChanged"
                        Width="500" Maximum="{Binding CurrentMusic.Music.TotalMills}"/>

                    <TextBlock Text="A" ToolTip="{Binding CurrentMusic.PointATime}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource Music_PointABTextBlock}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Value="0" Binding="{Binding CurrentMusic.PointAMills}"/>
                                            <Condition Value="0" Binding="{Binding CurrentMusic.PointBMills}"/>
                                        </MultiDataTrigger.Conditions>

                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <TextBlock.RenderTransform>
                            <TranslateTransform>
                                <TranslateTransform.X>
                                    <MultiBinding Converter="{StaticResource MultiConverter_MultiplicationDivision}">
                                        <Binding Path="CurrentMusic.PointAMills" Mode="OneWay" />
                                        <Binding Path="Width" ElementName="musicSlider" Mode="OneWay" />
                                        <Binding Path="CurrentMusic.Music.TotalMills" Mode="OneWay" />
                                    </MultiBinding>
                                </TranslateTransform.X>
                            </TranslateTransform>
                        </TextBlock.RenderTransform>
                    </TextBlock>

                    <TextBlock Text="B" ToolTip="{Binding CurrentMusic.PointBTime}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource Music_PointABTextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Value="0" Binding="{Binding CurrentMusic.PointBMills}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <TextBlock.RenderTransform>
                            <TranslateTransform>
                                <TranslateTransform.X>
                                    <MultiBinding Converter="{StaticResource MultiConverter_MultiplicationDivision}">
                                        <Binding Path="CurrentMusic.PointBMills" Mode="OneWay" />
                                        <Binding Path="Width" ElementName="musicSlider" Mode="OneWay" />
                                        <Binding Path="CurrentMusic.Music.TotalMills" Mode="OneWay" />
                                    </MultiBinding>
                                </TranslateTransform.X>
                            </TranslateTransform>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </Grid>
            </Viewbox>

            <Grid Grid.Row="1"  Background="Transparent">
                <Grid.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="GoToPage"/>
                </Grid.InputBindings>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>

                <Viewbox Grid.Column="0" Style="{StaticResource OnlyDownViewbox}" HorizontalAlignment="Left">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="0">
                        <Image Style="{StaticResource MusicImage}"/>

                        <DockPanel>
                            <StackPanel DockPanel.Dock="Top">
                                <TextBlock FontSize="14" Margin="5,3" Style="{StaticResource ThemeBlk}" Text="{Binding CurrentMusic.Music.Singer}" />
                                <TextBlock FontSize="14" Margin="5,3" Style="{StaticResource ThemeBlk}" Text="{Binding CurrentMusic.Music.Name}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton Style="{StaticResource Love}"/>
                                <Button Style="{StaticResource IconButtonBase_Small}" Content="&#xe63b;" ToolTip="下载" />
                                <Button Style="{StaticResource IconButtonBase_Small}" Content="&#xe891;" ToolTip="评论" />
                                <Button Style="{StaticResource IconButtonBase_Small}" Content="&#xe608;" ToolTip="分享" />
                                <Button Style="{StaticResource IconButtonBase_Small}" Content="&#xe682;" ToolTip="更多" />
                            </StackPanel>
                        </DockPanel>
                    </StackPanel>
                </Viewbox>

                <Viewbox Grid.Column="1" Style="{StaticResource OnlyDownViewbox}">
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Grid.Column="1">
                        <Button Command="{Binding DelayCommand}" Click="MusicGoBack" Style="{StaticResource Rewind1sIconButton}"/>

                        <Button Command="{Binding PrevCommand}" CommandParameter="{Binding CurrentMusic}" 
                            Style="{StaticResource PrevOneIconButton}"/>

                        <ToggleButton Command="{Binding PlayPlayingCommand}" CommandParameter="{Binding CurrentMusic}" 
                                  Style="{StaticResource PlayIconToggleButton}"
                                  IsChecked="{Binding Running,Mode=OneWay}" />

                        <Button Command="{Binding NextCommand}" CommandParameter="{Binding CurrentMusic}" 
                            Style="{StaticResource NextOneIconButton}"/>

                        <Button Command="{Binding AheadCommand}" Click="MusicGoForward" Style="{StaticResource FastForward1sIconButton}"/>

                        <Button Command="{Binding StopPlayMusicCommand}" Style="{StaticResource StopMediaIconButton}"/>
                    </StackPanel>
                </Viewbox>

                <Viewbox Grid.Column="2" Style="{StaticResource OnlyDownViewbox}" HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="2" Margin="10,5">
                        <Grid Margin="5,0" Background="Transparent" x:Name="MusicSpeedRatioPanel">
                            <TextBlock Visibility="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=Grid},Converter={StaticResource BoolToCollapsedVisibleConverter}}" HorizontalAlignment="Center" Style="{StaticResource NotImportantTxt_Black}">
                                <TextBlock Text="{Binding CurrentMusic.CurrentTime,FallbackValue=00:00}" />/<TextBlock Text="{Binding CurrentMusic.Music.Duration,FallbackValue=00:00}" />
                            </TextBlock>

                            <StackPanel Orientation="Horizontal" Visibility="{Binding IsMouseOver,RelativeSource={RelativeSource AncestorType=Grid},Converter={StaticResource BoolToVisibleHiddenConverter}}">
                                <ToggleButton Content="倍速" x:Name="MusicSpeedRatioButton" Style="{StaticResource MusicEffectToggleButton}"/>
                                <Popup Placement="Top" HorizontalOffset="-112" VerticalOffset="-6"
                                   IsOpen="{Binding IsChecked,ElementName=MusicSpeedRatioButton}"
                                   PlacementTarget="{Binding ElementName=MusicSpeedRatioButton}">
                                    <Border Background="{x:Static helper:MyStaticResources.PopupBackground}" Padding="10,15" Width="280" Height="100" Clip="{StaticResource PopupGeometryGroup_MediaSpeedRatio}">
                                        <StackPanel>
                                            <TextBlock VerticalAlignment="Top" FontSize="16" Foreground="{x:Static helper:MyStaticResources.WhiteLight}" TextAlignment="Center">
                                                <TextBlock Text="{Binding Value,ElementName=MusicSpeedRatioSlider}"/>
                                                倍速播放
                                            </TextBlock>

                                            <Slider Margin="0,10" VerticalAlignment="Center" x:Name="MusicSpeedRatioSlider"
                                                ValueChanged="MusicSpeedRatioSlider_ValueChanged"
                                                Minimum="0.5" Maximum="1.5" Width="260" MinHeight="3"  Value="1" TickFrequency="0.1"/>

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Text="减慢" Grid.Column="0" FontSize="16" Foreground="{x:Static helper:MyStaticResources.WhiteLight}"/>
                                                <TextBlock Text="正常" Grid.Column="1" TextAlignment="Center" FontSize="16" Foreground="{x:Static helper:MyStaticResources.WhiteLight}"/>
                                                <TextBlock Text="加快" Grid.Column="2" FontSize="16" Foreground="{x:Static helper:MyStaticResources.WhiteLight}"/>
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <ToggleButton Content="音质" Style="{StaticResource MusicEffectToggleButton}"/>
                                <ToggleButton Content="音效" Style="{StaticResource MusicEffectToggleButton}"/>
                            </StackPanel>
                        </Grid>

                        <ToggleButton x:Name="volumeToggleButton" IsChecked="{Binding IsMuted,ElementName=mediaPlayer,Mode=TwoWay}" 
                                  MouseEnter="ToggleButton_MouseEnter" MouseLeave="ToggleButton_MouseLeave"
                                  Click="volumeToggleButton_Click"
                                  Style="{StaticResource VolumeIconToggleButton}"/>
                        <Popup Placement="Top" HorizontalOffset="-23" VerticalOffset="6"
                               StaysOpen="True" x:Name="VolumePopup"
                               PlacementTarget="{Binding ElementName=volumeToggleButton}">
                            <!--音量调节模态框-->
                            <Border x:Name="VolumeControl" Visibility="{Binding IsOpen,ElementName=VolumePopup,Converter={StaticResource BoolToVisibleCollapsedConverter},Mode=TwoWay}"
                                    Clip="{StaticResource PopupGeometryGroup_Volume}"
                                    Background="{x:Static helper:MyStaticResources.PopupBackground}" Width="65" Height="212">
                                <StackPanel MouseLeave="Popup_MouseLeave" Background="Transparent">
                                    <Slider Margin="10,25,10,10" MinWidth="4" Style="{StaticResource Slider_ObviousThumb}"
                                        Minimum="0" Maximum="100" ValueChanged="Slider_ValueChanged"
                                        Orientation="Vertical" Height="130" x:Name="VolumeSlider" 
                                        attachs:MyAttachProperty.IsSliderThumbObvious="True"
                                        Value="{Binding Volume,ElementName=mediaPlayer,
                                                    Converter={StaticResource DigitDoubleConverter},
                                                    ConverterParameter=100}"/>

                                    <TextBlock x:Name="volumeStr" HorizontalAlignment="Center" Style="{StaticResource NotImportantTxt_White}">
                                        <TextBlock Text="{Binding Path=Value,ElementName=VolumeSlider,Mode=OneWay}" />%
                                    </TextBlock>
                                </StackPanel>
                            </Border>
                        </Popup>

                        <ToggleButton x:Name="listButton" IsChecked="{Binding IsEditingPlayOrder}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource IconButtonBase_Small}">
                                    <Setter Property="Margin" Value="2,0" />

                                    <Setter Property="Content" Value="{Binding SelectedItem.IconString,ElementName=PlayOrderList,FallbackValue=播放顺序}" />
                                    <Setter Property="ToolTip" Value="{Binding SelectedItem.Description,ElementName=PlayOrderList}" />
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Popup Placement="Top" HorizontalOffset="-65" VerticalOffset="-7"
                           IsOpen="{Binding IsChecked,ElementName=listButton}"
                           PlacementTarget="{Binding ElementName=listButton}">
                            <Border Background="{x:Static helper:MyStaticResources.PopupBackground}" Height="303" Clip="{StaticResource PopupGeometryGroup_PlayOrder}">
                                <ListBox SelectedItem="{Binding CurrentPlayOrder}" ItemsSource="{x:Static common:AppStatics.MediaPlayOrderList}" x:Name="PlayOrderList">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">

                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate DataType="commonModel:MediaPlayOrderModel">
                                                        <TextBlock Style="{StaticResource IconText}" Margin="30,10">
                                                            <TextBlock Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" 
                                                                       Text="{Binding IconString}" />
                                                            <TextBlock Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" 
                                                                       Text="{Binding Description}" />
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.Style>
                                        <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">

                                            <Style.Triggers>
                                                <DataTrigger Value="{x:Null}" Binding="{Binding CurrentPlayOrder}">
                                                    <Setter Property="SelectedIndex" Value="1" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.Style>
                                </ListBox>
                            </Border>
                        </Popup>

                        <TextBlock Style="{StaticResource IconText}" Text="&#xe607;" ToolTip="一起听" />
                        <ToggleButton x:Name="DesktopLyricToggleButton" Content="&#xe671;" ToolTip="桌面歌词 Alt+C">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource ExpandIconToggleButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayPlaying.Count}" Value="0">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ToggleButton x:Name="PlayingListButton" Click="playingList_PreviewMouseLeftButtonDown">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource IconButtonBase_Small}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayPlaying.Count}" Value="0">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                            <TextBlock>
                                <TextBlock Text="&#xea6f;" ToolTip="播放队列"/>
                                <TextBlock Width="30" Text="{Binding DisplayPlaying.Count}"/>
                            </TextBlock>
                        </ToggleButton>
                        <Popup Placement="Top" PopupAnimation="Fade" x:Name="PlayingListPopup"
                                HorizontalOffset="-334" VerticalOffset="-18" Opened="DataGrid_UpdateScrollBar"
                                Height="490" Width="400" Closed="PlayingListPopup_Closed"
                                IsOpen="{Binding IsChecked,ElementName=PlayingListButton}"
                                PlacementTarget="{Binding ElementName=PlayingListButton}">
                            <Border Background="{x:Static helper:MyStaticResources.PopupBackground}" CornerRadius="10">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <DockPanel Grid.Row="0" LastChildFill="False" Margin="20,20,20,0">
                                        <DockPanel DockPanel.Dock="Top">
                                            <TextBlock Foreground="{x:Static helper:MyStaticResources.WhiteLight}" DockPanel.Dock="Left" HorizontalAlignment="Left">
                                                共<TextBlock Text="{Binding DisplayPlaying.Count}"/>首
                                            </TextBlock>

                                            <TextBlock DockPanel.Dock="Right" HorizontalAlignment="Right">
                                              <ToggleButton x:Name="QueryButton" Content="&#xe632;" ToolTip="搜索" Style="{StaticResource IconButtonBase_Small}"/>
                                              <Button Content="&#xe622;" ToolTip="添加到" Style="{StaticResource IconButtonBase_Small}"/>
                                              <Button Content="&#xec7b;" ToolTip="清空列表" Command="{Binding CleanPlayingCommand}" Style="{StaticResource IconButtonBase_Small}"/>
                                            </TextBlock>
                                        </DockPanel>

                                        <StackPanel Visibility="{Binding IsChecked,ElementName=QueryButton,Mode=OneWay,Converter={StaticResource BoolToVisibleCollapsedConverter}}" 
                                                    DockPanel.Dock="Bottom" Orientation="Horizontal">
                                            <TextBox Text="{Binding PlayingListFilteKeyWords,UpdateSourceTrigger=PropertyChanged}" 
                                                     attachs:MyAttachProperty.PlaceHolder="请输入关键字" 
                                                     Background="Transparent" BorderThickness="1"
                                                     Padding="10,0,0,0" attachs:MyAttachProperty.CornerRadius="15"
                                                     BorderBrush="{x:Static helper:MyStaticResources.WhiteLight}" x:Name="PlayingKeyWordsTxt"
                                                     Margin="0,5,5,5" Width="310"/>
                                            <Button Content="消失" Command="Close" CommandParameter="StopPlayingListFilte" 
                                                    Style="{StaticResource ClosePlayingListFilter}"/>
                                        </StackPanel>
                                    </DockPanel>

                                    <DataGrid Grid.Row="1" x:Name="PlayingDataGrid"
                                          ItemsSource="{Binding DisplayPlaying}"
                                          Style="{StaticResource DataGrid_Transparent}"
                                          HeadersVisibility="Row" ContextMenu="{StaticResource PlayinigDataGridContextMenu}"
                                          SelectedItem="{Binding CurrentMusic,Mode=OneWay}">

                                        <DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCell_General}">
                                                <Style.Triggers>
                                                    <DataTrigger Value="True" Binding="{Binding DataContext.IsPlayingMusic,RelativeSource={RelativeSource AncestorType=DataGridRow}}">
                                                        <Setter Property="Foreground" Value="{x:Static helper:MyStaticResources.SkyBlue}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.CellStyle>

                                        <DataGrid.RowStyle>
                                            <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                                <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_Playing_MouseDoubleClick"/>

                                                <Setter Property="Header" Value="{Binding IndexString,Mode=OneWay}" />
                                            </Style>
                                        </DataGrid.RowStyle>

                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn MinWidth="30">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ToggleButton Style="{StaticResource Love}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Width="300" CellTemplate="{StaticResource PlayingDataGridFirstColumnCellTemplate}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </Border>
                        </Popup>
                    </StackPanel>
                </Viewbox>
            </Grid>
        </Grid>

        <Grid x:Name="DesktopLyricBar" Grid.RowSpan="3" Panel.ZIndex="100" 
                Visibility="{Binding IsChecked,ElementName=DesktopLyricToggleButton,Mode=OneWay,Converter={StaticResource BooleanToVisibilityConverter}}" 
                MaxWidth="960" Height="140" attachs:MyAttachProperty.IsDraggable="True" MouseLeave="DesktopLyricPanel_Hidden">
            <StackPanel x:Name="DesktopLyricPanel" Background="#66000000" Visibility="Hidden">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <Viewbox Grid.Column="0" Style="{StaticResource OnlyDownViewbox}" HorizontalAlignment="Left">
                        <StackPanel Orientation="Horizontal" Grid.Column="0">
                            <TextBlock Foreground="#EBEBEB" Margin="20,0" MaxWidth="250" Text="{Binding CurrentMusic.Music.Name}" FontSize="18"/>
                            <TextBlock Foreground="#EBEBEB" Text="{Binding CurrentMusic.Music.Singer}"/>
                        </StackPanel>
                    </Viewbox>

                    <Viewbox Grid.Column="1" Style="{StaticResource OnlyDownViewbox}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="1">
                            <Button Command="{Binding DelayCommand}" Content="&#xe68e;" ToolTip="回退0.5s" Click="MusicGoBack" Style="{StaticResource IconButtonBase_Small_Scale}"/>

                            <Button Command="{Binding PrevCommand}" CommandParameter="{Binding CurrentMusic}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource PrevOneIconButton}">
                                        <Setter Property="FontSize" Value="25" />
                                        <Setter Property="Foreground" Value="#EBEBEB" />

                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="#6AD2FF" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <ToggleButton Command="{Binding PlayPlayingCommand}" 
                                      CommandParameter="{Binding CurrentMusic}" 
                                          IsChecked="{Binding Running,Mode=OneWay}" ToolTip="Alt+F">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton" BasedOn="{StaticResource PlayIconToggleButton}">
                                        <Setter Property="FontSize" Value="28" />
                                        <Setter Property="Foreground" Value="#EBEBEB" />

                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="#6AD2FF" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <Button Command="{Binding NextCommand}" CommandParameter="{Binding CurrentMusic}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource NextOneIconButton}">
                                        <Setter Property="FontSize" Value="25" />
                                        <Setter Property="Foreground" Value="#EBEBEB" />

                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="#6AD2FF" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Button Command="{Binding AheadCommand}" Content="&#xe690;" ToolTip="快进0.5s" Click="MusicGoForward" Style="{StaticResource IconButtonBase_Small_Scale}"/>

                            <Button Command="Close" CommandParameter="CloseDesktopLyricPanel">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource IconButtonBase_Small_Scale}">
                                        <Setter Property="Content" Value="&#xe624;" />
                                        <Setter Property="ToolTip" Value="关闭" />
                                        <Setter Property="FontSize" Value="14" />
                                        <Setter Property="Foreground" Value="#EBEBEB" />
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </Viewbox>

                    <Viewbox Grid.Column="2" Style="{StaticResource OnlyDownViewbox}" HorizontalAlignment="Right">
                        <TextBlock Grid.Column="2" HorizontalAlignment="Right" Margin="20,0" Foreground="#EBEBEB" Style="{StaticResource NotImportantTxt_Black}">
                            <TextBlock Text="{Binding CurrentMusic.CurrentTime,FallbackValue=00:00}" />/<TextBlock Text="{Binding CurrentMusic.Music.Duration,FallbackValue=00:00}" />
                        </TextBlock>
                    </Viewbox>
                </Grid>
            </StackPanel>

            <StackPanel Margin="0,30,0,0">
                <ContentControl  HorizontalAlignment="Left" FontSize="30"
                             MouseEnter="DesktopLyricPanel_Visible"
                             Content="{Binding CurrentMusic.OneLine}" 
                             ContentTemplate="{StaticResource DesktopLyric}" />

                <ContentControl  HorizontalAlignment="Right" FontSize="30"
                             MouseEnter="DesktopLyricPanel_Visible"
                             Content="{Binding CurrentMusic.AnotherLine}" 
                             ContentTemplate="{StaticResource DesktopLyric}" />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>