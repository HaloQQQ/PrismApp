<UserControl
    x:Class="MusicPlayerModule.Views.MusicPlayer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:contracts="clr-namespace:MusicPlayerModule.Contracts"
    xmlns:personalConverter="clr-namespace:MusicPlayerModule.Converters"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:viewmodels="clr-namespace:MusicPlayerModule.ViewModels"
    prism:ViewModelLocator.AutoWireViewModel="True"
    FocusVisualStyle="{x:Null}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MusicPlayerModule;component/Resources/Resources.xaml" />
                <ResourceDictionary Source="/MusicPlayerModule;component/Resources/DataGridContextMenu.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <personalConverter:MultiLyricHeightMultiConverter x:Key="MultiLyricHeightMultiConverter" />

            <DataTemplate x:Key="ThreePrimaryColorModel" DataType="{x:Type viewmodels:ThreePrimaryColorModel}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}" />
                    <Slider
                        Width="100"
                        Height="3"
                        Maximum="255"
                        Style="{StaticResource Slider_ObviousThumb}"
                        TickFrequency="1"
                        Value="{Binding Value}" />
                </StackPanel>
            </DataTemplate>

            <Style x:Key="MusicImage" TargetType="Image">
                <Setter Property="Width" Value="60" />
                <Setter Property="Height" Value="60" />

                <Setter Property="Margin" Value="5" />

                <Setter Property="Source" Value="{Binding CurrentMedia.Music.ImageSource}" />

                <Setter Property="Clip">
                    <Setter.Value>
                        <RectangleGeometry
                            RadiusX="5"
                            RadiusY="5"
                            Rect="0,0,60,60" />
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding CurrentMedia.Music.ImageSource}" Value="{x:Null}">
                        <Setter Property="Source">
                            <Setter.Value>
                                <BitmapImage UriSource="/MusicPlayerModule;component/Resources/音符SVG-87.png" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style
                x:Key="Music_PointABTextBlock"
                BasedOn="{StaticResource PointABTextBlock}"
                TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding CurrentMedia}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style
                x:Key="CategoryRadioButton"
                BasedOn="{StaticResource {x:Type RadioButton}}"
                TargetType="RadioButton">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DisplayFavorites.Count}" Value="0">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsLoading}" Value="True">
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid
        CommandManager.Executed="UserControl_Executed"
        FocusVisualStyle="{x:Null}"
        MouseWheel="Grid_MouseWheel"
        MyAttachProperty.IsElementFocused="True">
        <Grid.InputBindings>
            <KeyBinding
                Key="{Binding KeyGestureDic[搜索].SelectedKey}"
                Command="Find"
                CommandParameter="Favorite"
                Modifiers="{Binding KeyGestureDic[搜索].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[歌词封面].SelectedKey}"
                Command="GoToPage"
                Modifiers="{Binding KeyGestureDic[歌词封面].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[播放列表].SelectedKey}"
                Command="Open"
                Modifiers="{Binding KeyGestureDic[播放列表].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[播放所有音乐].SelectedKey}"
                Command="{Binding PlayAllCommand}"
                Modifiers="{Binding KeyGestureDic[播放所有音乐].ModifierKey}" />


            <KeyBinding
                Key="{Binding KeyGestureDic[设置A点].SelectedKey}"
                Command="{Binding PointACommand}"
                Modifiers="{Binding KeyGestureDic[设置A点].ModifierKey}" />
            <KeyBinding
                Key="{Binding KeyGestureDic[设置B点].SelectedKey}"
                Command="{Binding PointBCommand}"
                Modifiers="{Binding KeyGestureDic[设置B点].ModifierKey}" />
            <KeyBinding
                Key="{Binding KeyGestureDic[去A点].SelectedKey}"
                Command="{Binding ToPointACommand}"
                Modifiers="{Binding KeyGestureDic[去A点].ModifierKey}" />
            <KeyBinding
                Key="{Binding KeyGestureDic[全体返回A点].SelectedKey}"
                Command="{Binding AllToPointACommand}"
                Modifiers="{Binding KeyGestureDic[全体返回A点].ModifierKey}" />


            <KeyBinding
                Key="{Binding KeyGestureDic[重置AB点].SelectedKey}"
                Command="{Binding ResetPointABCommand}"
                Modifiers="{Binding KeyGestureDic[重置AB点].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[打开文件夹].SelectedKey}"
                Command="{Binding AddFolderCommand}"
                Modifiers="{Binding KeyGestureDic[打开文件夹].ModifierKey}" />


            <KeyBinding
                Key="{Binding KeyGestureDic[返回开头].SelectedKey}"
                Command="{Binding MoveToHomeCommand}"
                Modifiers="{Binding KeyGestureDic[返回开头].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[快退].SelectedKey}"
                Command="{Binding RewindCommand}"
                Modifiers="{Binding KeyGestureDic[快退].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[降低音量].SelectedKey}"
                Command="{Binding DecreaseVolumeCommand}"
                Modifiers="{Binding KeyGestureDic[降低音量].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[上一个].SelectedKey}"
                Command="{Binding PrevCommand}"
                CommandParameter="{Binding CurrentMedia}"
                Modifiers="{Binding KeyGestureDic[上一个].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[播放/暂停].SelectedKey}"
                Command="{Binding PlayPlayingCommand}"
                CommandParameter="{Binding CurrentMedia}"
                Modifiers="{Binding KeyGestureDic[播放/暂停].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[清空播放队列].SelectedKey}"
                Command="{Binding CleanPlayingCommand}"
                Modifiers="{Binding KeyGestureDic[清空播放队列].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[下一个].SelectedKey}"
                Command="{Binding NextCommand}"
                CommandParameter="{Binding CurrentMedia}"
                Modifiers="{Binding KeyGestureDic[下一个].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[停止].SelectedKey}"
                Command="{Binding StopPlayCommand}"
                CommandParameter="{Binding CurrentMedia}"
                Modifiers="{Binding KeyGestureDic[停止].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[提高音量].SelectedKey}"
                Command="{Binding IncreaseVolumeCommand}"
                Modifiers="{Binding KeyGestureDic[提高音量].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[快进].SelectedKey}"
                Command="{Binding FastForwardCommand}"
                Modifiers="{Binding KeyGestureDic[快进].ModifierKey}" />

            <KeyBinding
                Key="{Binding KeyGestureDic[跳至结尾].SelectedKey}"
                Command="{Binding MoveToEndCommand}"
                Modifiers="{Binding KeyGestureDic[跳至结尾].ModifierKey}" />
        </Grid.InputBindings>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Margin="15,0" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="45*" />
                <ColumnDefinition Width="23*" />
                <ColumnDefinition Width="32*" />
            </Grid.ColumnDefinitions>

            <Viewbox
                Grid.Column="0"
                HorizontalAlignment="Left"
                Style="{StaticResource OnlyDownViewbox}">
                <StackPanel Orientation="Horizontal">
                    <Button
                        Command="{Binding PlayAllCommand}"
                        IsEnabled="{Binding IsLoading, Converter={StaticResource OppositeBoolConverter}}"
                        Style="{StaticResource PlayAllButton}"
                        ToolTip="{Binding KeyGestureDic[播放所有音乐].ToolTip}" />

                    <ToggleButton x:Name="ToggleBatch" IsChecked="{Binding CanBatchSelect, Mode=TwoWay}">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource BatchOperateToggleButton}" TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DisplayFavorites.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>

                    </ToggleButton>

                    <Button
                        Command="{Binding DownLoadCommand}"
                        IsEnabled="{Binding IsLoading, Converter={StaticResource OppositeBoolConverter}}"
                        Style="{StaticResource DownloadButton}" />

                    <Button
                        Command="{Binding AddFilesCommand}"
                        IsEnabled="{Binding IsLoading, Converter={StaticResource OppositeBoolConverter}}"
                        Style="{StaticResource AddMusicButton}"
                        ToolTip="{Binding KeyGestureDic[打开文件夹].ToolTip}">
                        <Button.InputBindings>
                            <MouseBinding Command="{Binding AddFolderCommand}" MouseAction="RightClick" />
                        </Button.InputBindings>
                    </Button>

                    <Button Command="{Binding BatchDeleteCommand}" Style="{StaticResource DeleteButton}" />
                </StackPanel>
            </Viewbox>

            <Viewbox
                Grid.Column="2"
                HorizontalAlignment="Right"
                Style="{StaticResource OnlyDownViewbox}">
                <DockPanel
                    Grid.Column="2"
                    DockPanel.Dock="Right"
                    LastChildFill="False">
                    <Border
                        VerticalAlignment="Center"
                        BorderBrush="{StaticResource TransparentButtonBackground}"
                        BorderThickness="1"
                        CornerRadius="15"
                        DockPanel.Dock="Right"
                        Visibility="{Binding CanBatchSelect, Converter={StaticResource BoolToCollapsedVisibleConverter}}">
                        <Border.Clip>
                            <RectangleGeometry
                                RadiusX="15"
                                RadiusY="15"
                                Rect="0,0,150,28" />
                        </Border.Clip>
                        <WrapPanel VerticalAlignment="Center">
                            <RadioButton
                                x:Name="RadioBtnShowBySong"
                                BorderThickness="0,0,0.5,0"
                                Content="&#xe790;"
                                GroupName="MusicDisplayMode"
                                IsChecked="{Binding IsInSong}"
                                Style="{StaticResource CategoryRadioButton}"
                                ToolTip="单曲" />
                            <RadioButton
                                x:Name="RadioBtnShowByAlbum"
                                Command="{Binding DistributeMusicViewModel.DistributeByAlbumCommand}"
                                Content="&#xe6dc;"
                                GroupName="MusicDisplayMode"
                                IsChecked="{Binding DistributeMusicViewModel.IsInAlbum}"
                                Style="{StaticResource CategoryRadioButton}"
                                ToolTip="专辑" />
                            <RadioButton
                                x:Name="RadioBtnShowBySinger"
                                Command="{Binding DistributeMusicViewModel.DistributeBySingerCommand}"
                                Content="&#xe61c;"
                                GroupName="MusicDisplayMode"
                                IsChecked="{Binding DistributeMusicViewModel.IsInSinger}"
                                Style="{StaticResource CategoryRadioButton}"
                                ToolTip="歌手" />
                            <RadioButton
                                x:Name="RadioBtnShowByDir"
                                BorderThickness="0.5,0,0,0"
                                Command="{Binding DistributeMusicViewModel.DistributeByDirectoryCommand}"
                                Content="&#xebdf;"
                                GroupName="MusicDisplayMode"
                                IsChecked="{Binding DistributeMusicViewModel.IsInDir}"
                                Style="{StaticResource CategoryRadioButton}"
                                ToolTip="文件夹" />
                        </WrapPanel>
                    </Border>

                    <TextBox x:Name="FavoritesKeyWordsTxt" DockPanel.Dock="Right">
                        <TextBox.Style>
                            <Style BasedOn="{StaticResource TextBox_FilteList}" TargetType="TextBox">

                                <Setter Property="IsEnabled" Value="{Binding IsLoading, Converter={StaticResource OppositeBoolConverter}}" />

                                <Setter Property="Text" Value="{Binding FavoriteListFilteKeyWords, UpdateSourceTrigger=PropertyChanged, Delay=100}" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanBatchSelect}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsChecked, ElementName=RadioBtnShowBySong}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding DisplayFavorites.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <ToggleButton
                        Content="退出批量操作"
                        DockPanel.Dock="Right"
                        IsChecked="{Binding CanBatchSelect, Converter={StaticResource OppositeBoolConverter}, Mode=TwoWay}"
                        Style="{StaticResource TransparentButtonBase}"
                        Visibility="{Binding CanBatchSelect, Converter={StaticResource BoolToVisibleCollapsedConverter}}" />
                </DockPanel>
            </Viewbox>
        </Grid>

        <Grid Grid.Row="1" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <MediaElement
                x:Name="mediaPlayer"
                Grid.Row="0"
                Source="{Binding CurrentMedia.Music.FilePath}" />

            <Grid
                Grid.Row="1"
                MinHeight="400"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <FrameworkElement x:Name="dummyElement" Visibility="Collapsed" />

                <NeedleWaitLoad
                    Width="80"
                    Height="80"
                    Foreground="DodgerBlue">
                    <NeedleWaitLoad.Style>
                        <Style TargetType="UserControl">
                            <Setter Property="Visibility" Value="Collapsed" />

                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsLoading}" Value="True" />
                                        <Condition Binding="{Binding DisplayFavorites.Count}" Value="0" />
                                    </MultiDataTrigger.Conditions>

                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </NeedleWaitLoad.Style>
                </NeedleWaitLoad>

                <Viewbox
                    Grid.Row="0"
                    VerticalAlignment="Top"
                    Style="{StaticResource OnlyDownViewbox}">
                    <DataGrid
                        x:Name="DataGrid_ShowBySong"
                        Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}, Mode=OneWay}"
                        HeadersVisibility="All"
                        ItemsSource="{Binding DisplayFavorites}"
                        MyAttachProperty.DisplayRowNumber="False"
                        Visibility="{Binding IsChecked, ElementName=RadioBtnShowBySong, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <DataGrid.Style>
                            <Style BasedOn="{StaticResource DataGrid_Transparent}" TargetType="DataGrid">
                                <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DisplayFavorites.Count}" Value="0">
                                        <Setter Property="ContextMenu" Value="{x:Null}" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Style>
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="DataGridRow">
                                <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_Favorites_MouseDoubleClick" />

                                <Setter Property="Header" Value="{Binding IndexString, Mode=OneWay}" />
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn
                                MaxWidth="60"
                                Binding="{Binding IsDeleting, UpdateSourceTrigger=PropertyChanged}"
                                ElementStyle="{StaticResource {x:Type CheckBox}}"
                                Visibility="{Binding DataContext.CanBatchSelect, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference dummyElement}}">
                                <DataGridCheckBoxColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <CheckBox Command="{Binding DataContext.SelectAllCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" IsChecked="{Binding DataContext.SelectFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid}}">
                                            <CheckBox.Style>
                                                <Style BasedOn="{StaticResource CheckBoxSelectAll}" TargetType="CheckBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="0">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </CheckBox.Style>
                                        </CheckBox>
                                    </DataTemplate>
                                </DataGridCheckBoxColumn.HeaderTemplate>
                            </DataGridCheckBoxColumn>

                            <DataGridTemplateColumn
                                MinWidth="230"
                                CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                                HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"
                                SortMemberPath="Music.Name" />

                            <DataGridTemplateColumn MaxWidth="150" SortMemberPath="Music.Singer">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock Text="歌手" />
                                            <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Music.Singer}" ToolTip="{Binding Music.Singer}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn MaxWidth="150" SortMemberPath="Music.Album">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock Text="专辑" />
                                            <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Music.Album}" ToolTip="{Binding Music.Album}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn SortMemberPath="Music.Size">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock Text="文件大小(MB)" />
                                            <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Music.Size}" ToolTip="{Binding Music.Size}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn SortMemberPath="Music.Duration">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock Text="时长" />
                                            <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Music.Duration}" ToolTip="{Binding Music.Duration}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                Width="200"
                                MaxWidth="1000"
                                SortMemberPath="Music.FilePath">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock Text="文件路径" />
                                            <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Music.FilePath}" ToolTip="{Binding Music.FilePath}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Viewbox>

                <Grid Visibility="{Binding IsChecked, ElementName=RadioBtnShowByAlbum, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="7*" />
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Column="0">
                        <TextBox
                            DockPanel.Dock="Top"
                            MyAttachProperty.PlaceHolder="搜索专辑"
                            Style="{StaticResource TextBox_QueryTxt}"
                            Text="{Binding DistributeMusicViewModel.AlbumMusicFilteKeyWords, UpdateSourceTrigger=PropertyChanged, Delay=100}" />

                        <ListBox
                            x:Name="MusicByAlbumListBox"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
                            DockPanel.Dock="Bottom"
                            ItemsSource="{Binding DistributeMusicViewModel.DisplayMusicAlbumFavorites}"
                            SelectedIndex="0">
                            <ListBox.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

                                    <EventSetter Event="MouseDoubleClick" Handler="MusicDistribute_ListBox_MouseDoubleClick" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <!--<Image DockPanel.Dock="Left" Style="{StaticResource MyImage}"/>-->
                                        <TextBlock
                                            DockPanel.Dock="Left"
                                            Style="{StaticResource DefaultSingerBack}"
                                            Text="&#xe6dc;" />

                                        <StackPanel Margin="10" VerticalAlignment="Center">
                                            <TextBlock
                                                Margin="0,5"
                                                FontSize="16"
                                                Text="{Binding ClassifyKey}"
                                                ToolTip="{Binding ClassifyKey}" />
                                            <TextBlock Margin="0,5" FontSize="16">
                                                <TextBlock Text="{Binding DisplayByClassifyKeyFavorites.Count}" />
                                                <TextBlock Text="首" />
                                            </TextBlock>
                                        </StackPanel>
                                    </DockPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>

                    <Viewbox
                        Grid.Column="1"
                        VerticalAlignment="Top"
                        Style="{StaticResource OnlyDownViewbox}">
                        <DataGrid
                            x:Name="DataGrid_ShowByAlbum"
                            Grid.Column="1"
                            Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}, Mode=OneWay}"
                            HeadersVisibility="All"
                            ItemsSource="{Binding SelectedItem.DisplayByClassifyKeyFavorites, ElementName=MusicByAlbumListBox}"
                            MyAttachProperty.DisplayRowNumber="True">
                            <DataGrid.Style>
                                <Style BasedOn="{StaticResource DataGrid_Transparent}" TargetType="DataGrid">
                                    <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayFavorites.Count}" Value="0">
                                            <Setter Property="ContextMenu" Value="{x:Null}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="DataGridRow">
                                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_Favorites_MouseDoubleClick" />
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn
                                    MinWidth="40"
                                    Binding="{Binding IsDeleting, UpdateSourceTrigger=PropertyChanged}"
                                    ElementStyle="{StaticResource {x:Type CheckBox}}"
                                    Visibility="{Binding DataContext.CanBatchSelect, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference dummyElement}}">
                                    <DataGridCheckBoxColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding DataContext.DistributeMusicViewModel.SelectAlbumFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid}, UpdateSourceTrigger=PropertyChanged}">
                                                <CheckBox.Style>
                                                    <Style BasedOn="{StaticResource CheckBoxSelectAll}" TargetType="CheckBox">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="0">
                                                                <Setter Property="IsEnabled" Value="False" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </CheckBox.Style>
                                            </CheckBox>
                                        </DataTemplate>
                                    </DataGridCheckBoxColumn.HeaderTemplate>
                                </DataGridCheckBoxColumn>

                                <DataGridTemplateColumn
                                    Width="Auto"
                                    MinWidth="230"
                                    CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                                    HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"
                                    SortMemberPath="Music.Name" />

                                <DataGridTemplateColumn
                                    Width="Auto"
                                    MaxWidth="1000"
                                    SortMemberPath="Music.Singer">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <TextBlock Text="歌手" />
                                                <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Music.Singer}" ToolTip="{Binding Music.Singer}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Viewbox>
                </Grid>

                <Grid Visibility="{Binding IsChecked, ElementName=RadioBtnShowBySinger, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="7*" />
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="0">
                        <TextBox
                            DockPanel.Dock="Top"
                            MyAttachProperty.PlaceHolder="搜索歌手"
                            Style="{StaticResource TextBox_QueryTxt}"
                            Text="{Binding DistributeMusicViewModel.SingerMusicFilteKeyWords, UpdateSourceTrigger=PropertyChanged, Delay=100}" />

                        <ListBox
                            x:Name="MusicBySingerListBox"
                            HorizontalContentAlignment="Left"
                            DockPanel.Dock="Bottom"
                            ItemsSource="{Binding DistributeMusicViewModel.DisplayMusicSingerFavorites}"
                            SelectedIndex="0">
                            <ListBox.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

                                    <EventSetter Event="MouseDoubleClick" Handler="MusicDistribute_ListBox_MouseDoubleClick" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <!--<Image DockPanel.Dock="Left" Style="{StaticResource MyImage}"/>-->
                                        <TextBlock DockPanel.Dock="Left" Style="{StaticResource DefaultSingerBack}" />

                                        <StackPanel Margin="10" VerticalAlignment="Center">
                                            <TextBlock
                                                Margin="0,5"
                                                FontSize="16"
                                                Text="{Binding ClassifyKey}"
                                                ToolTip="{Binding ClassifyKey}" />
                                            <TextBlock Margin="0,5" FontSize="16">
                                                <TextBlock Text="{Binding DisplayByClassifyKeyFavorites.Count}" />
                                                <TextBlock Text="首" />
                                            </TextBlock>
                                        </StackPanel>
                                    </DockPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>

                    <Viewbox
                        Grid.Column="1"
                        VerticalAlignment="Top"
                        Style="{StaticResource OnlyDownViewbox}">
                        <DataGrid
                            x:Name="DataGrid_ShowBySinger"
                            Grid.Column="1"
                            Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}, Mode=OneWay}"
                            HeadersVisibility="All"
                            ItemsSource="{Binding SelectedItem.DisplayByClassifyKeyFavorites, ElementName=MusicBySingerListBox}"
                            MyAttachProperty.DisplayRowNumber="True">
                            <DataGrid.Style>
                                <Style BasedOn="{StaticResource DataGrid_Transparent}" TargetType="DataGrid">
                                    <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayFavorites.Count}" Value="0">
                                            <Setter Property="ContextMenu" Value="{x:Null}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="DataGridRow">
                                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_Favorites_MouseDoubleClick" />
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn
                                    MinWidth="40"
                                    Binding="{Binding IsDeleting, UpdateSourceTrigger=PropertyChanged}"
                                    ElementStyle="{StaticResource {x:Type CheckBox}}"
                                    Visibility="{Binding DataContext.CanBatchSelect, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference dummyElement}}">
                                    <DataGridCheckBoxColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding DataContext.DistributeMusicViewModel.SelectSingerFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid}, UpdateSourceTrigger=PropertyChanged}">
                                                <CheckBox.Style>
                                                    <Style BasedOn="{StaticResource CheckBoxSelectAll}" TargetType="CheckBox">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="0">
                                                                <Setter Property="IsEnabled" Value="False" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </CheckBox.Style>
                                            </CheckBox>
                                        </DataTemplate>
                                    </DataGridCheckBoxColumn.HeaderTemplate>
                                </DataGridCheckBoxColumn>

                                <DataGridTemplateColumn
                                    Width="Auto"
                                    MinWidth="230"
                                    CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                                    HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"
                                    SortMemberPath="Music.Name" />

                                <DataGridTemplateColumn
                                    Width="Auto"
                                    MaxWidth="1000"
                                    SortMemberPath="Music.Album">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <TextBlock Text="专辑" />
                                                <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Music.Album}" ToolTip="{Binding Music.Album}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Viewbox>
                </Grid>

                <Grid Visibility="{Binding IsChecked, ElementName=RadioBtnShowByDir, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="7*" />
                    </Grid.ColumnDefinitions>

                    <ListBox
                        x:Name="MusicByDirListBox"
                        Grid.Column="0"
                        HorizontalContentAlignment="Left"
                        ContextMenu="{StaticResource MusicDir_CRUD}"
                        DockPanel.Dock="Bottom"
                        ItemsSource="{Binding DistributeMusicViewModel.MusicDirFavorites}"
                        SelectedIndex="0">
                        <ListBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

                                <EventSetter Event="MouseDoubleClick" Handler="MusicDistribute_ListBox_MouseDoubleClick" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <StackPanel Margin="10" VerticalAlignment="Center">
                                        <TextBlock
                                            Margin="0,5"
                                            FontSize="16"
                                            Text="{Binding ClassifyKey}"
                                            ToolTip="{Binding ClassifyKey}" />
                                        <TextBlock Margin="0,5" FontSize="16">
                                            <TextBlock Text="{Binding DisplayByClassifyKeyFavorites.Count}" />
                                            <TextBlock Text="首" />
                                        </TextBlock>
                                    </StackPanel>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Viewbox
                        Grid.Column="1"
                        VerticalAlignment="Top"
                        Style="{StaticResource OnlyDownViewbox}">
                        <DataGrid
                            x:Name="DataGrid_ShowByDir"
                            Grid.Column="1"
                            Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}, Mode=OneWay}"
                            HeadersVisibility="All"
                            ItemsSource="{Binding SelectedItem.DisplayByClassifyKeyFavorites, ElementName=MusicByDirListBox}"
                            MyAttachProperty.DisplayRowNumber="True">
                            <DataGrid.Style>
                                <Style BasedOn="{StaticResource DataGrid_Transparent}" TargetType="DataGrid">
                                    <Setter Property="ContextMenu" Value="{StaticResource FavoriteDataGridContextMenu}" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayFavorites.Count}" Value="0">
                                            <Setter Property="ContextMenu" Value="{x:Null}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.RowStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="DataGridRow">
                                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_Favorites_MouseDoubleClick" />
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn
                                    MinWidth="40"
                                    Binding="{Binding IsDeleting, UpdateSourceTrigger=PropertyChanged}"
                                    ElementStyle="{StaticResource {x:Type CheckBox}}"
                                    Visibility="{Binding DataContext.CanBatchSelect, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference dummyElement}}">
                                    <DataGridCheckBoxColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding DataContext.DistributeMusicViewModel.SelectDirFavoriteAll, RelativeSource={RelativeSource AncestorType=DataGrid}, UpdateSourceTrigger=PropertyChanged}">
                                                <CheckBox.Style>
                                                    <Style BasedOn="{StaticResource CheckBoxSelectAll}" TargetType="CheckBox">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="0">
                                                                <Setter Property="IsEnabled" Value="False" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </CheckBox.Style>
                                            </CheckBox>
                                        </DataTemplate>
                                    </DataGridCheckBoxColumn.HeaderTemplate>
                                </DataGridCheckBoxColumn>

                                <DataGridTemplateColumn
                                    Width="Auto"
                                    MinWidth="230"
                                    CellTemplate="{StaticResource FavoriteDataGridFirstColumnCellTemplate}"
                                    HeaderStyle="{StaticResource FavoriteDataGridFirstColumnHeaderStyle}"
                                    SortMemberPath="Music.Name" />

                                <DataGridTemplateColumn
                                    Width="Auto"
                                    MaxWidth="1000"
                                    SortMemberPath="Music.Singer">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <TextBlock Text="歌手" />
                                                <TextBlock Style="{StaticResource DataGridColumnHeaderSortIcon}" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Music.Singer}" ToolTip="{Binding Music.Singer}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Viewbox>
                </Grid>
            </Grid>
        </Grid>

        <!--  歌词展示页面  -->
        <Border
            x:Name="LyricPage"
            Grid.RowSpan="3"
            Background="{DynamicResource BackPanel.Background}">
            <Border.InputBindings>
                <MouseBinding Command="{x:Static MediaCommands.TogglePlayPause}" MouseAction="LeftClick" />
            </Border.InputBindings>
            <DockPanel>
                <DockPanel
                    Margin="20,5"
                    HorizontalAlignment="Stretch"
                    DockPanel.Dock="Top">
                    <Button
                        Command="{x:Static NavigationCommands.GoToPage}"
                        Content="&#xe65e;"
                        DockPanel.Dock="Left"
                        Style="{StaticResource IconButtonBase_Small}" />

                    <ToggleButton
                        x:Name="LyricSettingButton"
                        Content="&#xe8b8;"
                        DockPanel.Dock="Right"
                        FontSize="20"
                        Style="{StaticResource IconButtonBase_Big_Scale}" />
                    <Popup
                        IsOpen="{Binding IsChecked, ElementName=LyricSettingButton}"
                        MouseLeftButtonDown="EmptyHandler"
                        Placement="Left"
                        PlacementTarget="{Binding ElementName=LyricSettingButton}">
                        <Border
                            Width="300"
                            Height="340"
                            Padding="10"
                            Background="{StaticResource PopupBackground}"
                            CornerRadius="10">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock
                                        FontSize="20"
                                        Style="{StaticResource ThemeBlk}"
                                        Text="大小:" />
                                    <StackPanel VerticalAlignment="Center">
                                        <Slider
                                            x:Name="LyricFontSizeSlider"
                                            Width="200"
                                            Height="3"
                                            Margin="5"
                                            HorizontalAlignment="Left"
                                            Maximum="30"
                                            Minimum="15"
                                            Style="{StaticResource Slider_ObviousThumb}"
                                            TickFrequency="5"
                                            Value="{Binding DesktopLyric.CurrentLyricFontSize}" />

                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock
                                                Margin="-2,0,0,0"
                                                Style="{StaticResource ThemeBlk}"
                                                Text="15" />
                                            <TextBlock
                                                Margin="46,0,0,0"
                                                Style="{StaticResource ThemeBlk}"
                                                Text="20" />
                                            <TextBlock
                                                Margin="48,0,0,0"
                                                Style="{StaticResource ThemeBlk}"
                                                Text="25" />
                                            <TextBlock
                                                Margin="46,0,0,0"
                                                Style="{StaticResource ThemeBlk}"
                                                Text="30" />
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock
                                        FontSize="20"
                                        Style="{StaticResource ThemeBlk}"
                                        Text="颜色:" />

                                    <StackPanel>
                                        <ListBox
                                            x:Name="LyricForegroundListBox"
                                            Margin="5,0"
                                            ItemsSource="{Binding DesktopLyric.DefaultLyricForegrounds}"
                                            SelectedItem="{Binding DesktopLyric.CurrentLyricForeground}">
                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel MaxWidth="220" />
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                            <ListBox.ItemContainerStyle>
                                                <Style BasedOn="{StaticResource ListBoxItem_General}" TargetType="ListBoxItem">
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="Background" Value="{Binding ColorBrush}" />
                                                    <Setter Property="BorderThickness" Value="2" />
                                                    <Setter Property="ToolTip" Value="{Binding ColorBrush.Color}" />

                                                    <EventSetter Event="MouseMove" Handler="DragLeaveFrom" />

                                                    <Setter Property="IsSelected" Value="{Binding Selected}" />

                                                    <Setter Property="Width" Value="40" />
                                                    <Setter Property="Height" Value="40" />

                                                    <Setter Property="MyAttachProperty.CornerRadius" Value="20" />
                                                    <Setter Property="Content" Value="{x:Null}" />

                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Selected}" Value="True">
                                                            <Setter Property="BorderBrush" Value="{StaticResource HoveredTransparentButtonBackground}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                        </ListBox>

                                        <StackPanel Orientation="Horizontal">
                                            <ListBox
                                                ItemContainerStyle="{StaticResource ListBoxItem_General}"
                                                ItemTemplate="{StaticResource ThreePrimaryColorModel}"
                                                ItemsSource="{Binding DesktopLyric.LyricColorBrush.Colors}" />

                                            <Button
                                                x:Name="ForegroundColor"
                                                Width="40"
                                                Height="40"
                                                AllowDrop="True"
                                                Background="{Binding DesktopLyric.LyricColorBrush.ColorBrush, Mode=TwoWay}"
                                                Command="{Binding DesktopLyric.SelectLyricColorCommand}"
                                                Drop="DropIn_ForegroundColor"
                                                ToolTip="{Binding DesktopLyric.LyricColorBrush.ColorBrush.Color}">
                                                <Button.Style>
                                                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                        <Setter Property="MinWidth" Value="0" />
                                                        <Setter Property="MinHeight" Value="0" />

                                                        <Setter Property="MyAttachProperty.CornerRadius" Value="20" />

                                                        <Setter Property="BorderThickness" Value="2" />
                                                        <Setter Property="BorderBrush" Value="Transparent" />

                                                        <Setter Property="Effect" Value="{x:Null}" />

                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding DesktopLyric.LyricColorBrush.IsSelected}" Value="True">
                                                                <Setter Property="BorderBrush" Value="{StaticResource HoveredTransparentButtonBackground}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>

                                <StackPanel Margin="0,10" Orientation="Horizontal">
                                    <TextBlock
                                        FontSize="20"
                                        Style="{StaticResource ThemeBlk}"
                                        Text="渐变:" />

                                    <ListBox
                                        ItemContainerStyle="{StaticResource ListBoxItem_General}"
                                        ItemTemplate="{StaticResource ThreePrimaryColorModel}"
                                        ItemsSource="{Binding DesktopLyric.LinearGradientColorBrush.Colors}" />

                                    <Border
                                        x:Name="LinearGradientStartColor"
                                        Width="40"
                                        Height="40"
                                        AllowDrop="True"
                                        Background="{Binding DesktopLyric.LinearGradientColorBrush.ColorBrush, Mode=TwoWay}"
                                        CornerRadius="20"
                                        Drop="DropIn_LinearGradientForegroundColor"
                                        ToolTip="{Binding DesktopLyric.LinearGradientColorBrush.ColorBrush.Color}" />

                                    <Button
                                        MinWidth="0"
                                        Padding="7,5"
                                        Command="{Binding DesktopLyric.LinearGradientColorBrush.ResetColorCommand}"
                                        Content="重置"
                                        FontSize="14"
                                        MyAttachProperty.CornerRadius="10"
                                        Style="{StaticResource TransparentButtonBase}" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock
                                        FontSize="20"
                                        Style="{StaticResource ThemeBlk}"
                                        Text="字体:" />
                                    <ListBox
                                        Width="260"
                                        ItemsSource="{Binding DesktopLyric.Fonts}"
                                        SelectedItem="{Binding DesktopLyric.CurrentFontModel}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                                                <Setter Property="MyAttachProperty.CornerRadius" Value="10" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource TransparentButtonBackground}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="viewmodels:FontModel">
                                                <TextBlock
                                                    MinWidth="60"
                                                    Padding="10,5"
                                                    FontFamily="{Binding Family}"
                                                    FontSize="14"
                                                    Text="{Binding DisplayName}"
                                                    TextAlignment="Center"
                                                    TextWrapping="Wrap" />
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </Popup>
                </DockPanel>

                <DockPanel VerticalAlignment="Top">
                    <DockPanel.Height>
                        <MultiBinding Converter="{StaticResource MultiLyricHeightMultiConverter}">
                            <MultiBinding.Bindings>
                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource AncestorType=Border}" />
                                <Binding ElementName="OperatrionPanel" Path="ActualHeight" />
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </DockPanel.Height>

                    <TextBlock
                        HorizontalAlignment="Center"
                        DockPanel.Dock="Top"
                        FontFamily="{Binding DesktopLyric.CurrentFontModel.Family}"
                        FontSize="21"
                        FontWeight="Bold"
                        Foreground="{Binding DesktopLyric.CurrentLyricForeground.ColorBrush, FallbackValue=SkyBlue}"
                        Text="{Binding CurrentMedia.Music.Name}" />

                    <TextBlock
                        Margin="0,10"
                        HorizontalAlignment="Center"
                        DockPanel.Dock="Top"
                        FontFamily="{Binding DesktopLyric.CurrentFontModel.Family}"
                        Foreground="{Binding DesktopLyric.CurrentLyricForeground.ColorBrush, FallbackValue=SkyBlue}"
                        Text="{Binding CurrentMedia.Music.Singer}" />

                    <StackPanel
                        x:Name="LyricSimple"
                        Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=DockPanel}}"
                        Margin="0,30,0,0"
                        VerticalAlignment="Bottom"
                        Visibility="Collapsed">
                        <ContentControl
                            HorizontalAlignment="Left"
                            Content="{Binding CurrentMedia.OneLine}"
                            ContentTemplate="{StaticResource PanelSimpleLyric}"
                            FontFamily="{Binding DesktopLyric.CurrentFontModel.Family}"
                            FontSize="30" />

                        <ContentControl
                            HorizontalAlignment="Right"
                            Content="{Binding CurrentMedia.AnotherLine}"
                            ContentTemplate="{StaticResource PanelSimpleLyric}"
                            FontFamily="{Binding DesktopLyric.CurrentFontModel.Family}"
                            FontSize="30" />
                    </StackPanel>

                    <ListBox
                        x:Name="LyricList"
                        DockPanel.Dock="Top"
                        Focusable="False"
                        ItemsSource="{Binding CurrentMedia.Music.Lyric.Lines}"
                        OpacityMask="{StaticResource GradientOpacityMask}"
                        ScrollViewer.VerticalScrollBarVisibility="Disabled"
                        SelectionChanged="LyricList_SelectionChanged">
                        <ListBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource LyricListBoxItem}" TargetType="ListBoxItem">
                                <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick" />
                                <EventSetter Event="PreviewMouseRightButtonDown" Handler="SwitchLyricMode" />

                                <Setter Property="Padding" Value="120,10" />

                                <Setter Property="IsSelected" Value="{Binding IsPlayingLine, Mode=OneWay}" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlayingLine}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        DecelerationRatio="0.5"
                                                        Storyboard.TargetProperty="(ListBoxItem.RenderTransform).(ScaleTransform.ScaleX)"
                                                        To="1.5"
                                                        Duration="0:0:0.5" />
                                                    <DoubleAnimation
                                                        DecelerationRatio="0.5"
                                                        Storyboard.TargetProperty="(ListBoxItem.RenderTransform).(ScaleTransform.ScaleY)"
                                                        To="1.5"
                                                        Duration="0:0:0.5" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        DecelerationRatio="0.5"
                                                        Storyboard.TargetProperty="(ListBoxItem.RenderTransform).(ScaleTransform.ScaleX)"
                                                        To="1.0"
                                                        Duration="0:0:0.5" />
                                                    <DoubleAnimation
                                                        DecelerationRatio="0.5"
                                                        Storyboard.TargetProperty="(ListBoxItem.RenderTransform).(ScaleTransform.ScaleY)"
                                                        To="1.0"
                                                        Duration="0:0:0.5" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </DockPanel>
            </DockPanel>

            <Border.RenderTransform>
                <TranslateTransform Y="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Window}}" />
            </Border.RenderTransform>
        </Border>

        <Grid
            x:Name="OperatrionPanel"
            Grid.Row="2"
            Background="#20000000"
            Cursor="Arrow">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Viewbox>
                <Grid>
                    <Slider
                        x:Name="musicSlider"
                        Maximum="{Binding CurrentMedia.TotalMills}"
                        Style="{StaticResource MediaProgressSlider}"
                        ValueChanged="musicSlider_ValueChanged"
                        Value="{Binding CurrentMedia.CurrentMills}" />

                    <TextBlock Text="A" ToolTip="{Binding CurrentMedia.PointATime}">
                        <TextBlock.Style>
                            <Style BasedOn="{StaticResource Music_PointABTextBlock}" TargetType="TextBlock">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentMedia.PointAMills}" Value="0" />
                                            <Condition Binding="{Binding CurrentMedia.PointBMills}" Value="0" />
                                        </MultiDataTrigger.Conditions>

                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <TextBlock.RenderTransform>
                            <TranslateTransform>
                                <TranslateTransform.X>
                                    <MultiBinding Converter="{StaticResource MultiConverter_MultiplicationDivision}">
                                        <Binding Mode="OneWay" Path="CurrentMedia.PointAMills" />
                                        <Binding
                                            ElementName="musicSlider"
                                            Mode="OneWay"
                                            Path="Width" />
                                        <Binding Mode="OneWay" Path="CurrentMedia.TotalMills" />
                                    </MultiBinding>
                                </TranslateTransform.X>
                            </TranslateTransform>
                        </TextBlock.RenderTransform>
                    </TextBlock>

                    <TextBlock Text="B" ToolTip="{Binding CurrentMedia.PointBTime}">
                        <TextBlock.Style>
                            <Style BasedOn="{StaticResource Music_PointABTextBlock}" TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMedia.PointBMills}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <TextBlock.RenderTransform>
                            <TranslateTransform>
                                <TranslateTransform.X>
                                    <MultiBinding Converter="{StaticResource MultiConverter_MultiplicationDivision}">
                                        <Binding Mode="OneWay" Path="CurrentMedia.PointBMills" />
                                        <Binding
                                            ElementName="musicSlider"
                                            Mode="OneWay"
                                            Path="Width" />
                                        <Binding Mode="OneWay" Path="CurrentMedia.TotalMills" />
                                    </MultiBinding>
                                </TranslateTransform.X>
                            </TranslateTransform>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </Grid>
            </Viewbox>

            <Grid Grid.Row="1" Background="Transparent">
                <Grid.InputBindings>
                    <MouseBinding Command="GoToPage" MouseAction="LeftClick" />
                </Grid.InputBindings>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>

                <Viewbox
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    Style="{StaticResource OnlyDownViewbox}">
                    <StackPanel
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        Orientation="Horizontal">
                        <Image Style="{StaticResource MusicImage}" />

                        <DockPanel>
                            <StackPanel DockPanel.Dock="Top">
                                <TextBlock
                                    Margin="5,3"
                                    FontSize="14"
                                    Style="{StaticResource ThemeBlk}"
                                    Text="{Binding CurrentMedia.Music.Name}" />
                                <TextBlock
                                    Margin="5,3"
                                    FontSize="14"
                                    Style="{StaticResource ThemeBlk}"
                                    Text="{Binding CurrentMedia.Music.Singer}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton Style="{StaticResource Love}" />
                                <Button
                                    Content="&#xe63b;"
                                    Style="{StaticResource IconButtonBase_Small}"
                                    ToolTip="下载" />
                                <Button
                                    Content="&#xe891;"
                                    Style="{StaticResource IconButtonBase_Small}"
                                    ToolTip="评论" />
                                <Button
                                    Content="&#xe608;"
                                    Style="{StaticResource IconButtonBase_Small}"
                                    ToolTip="分享" />
                                <Button
                                    Content="&#xe682;"
                                    Style="{StaticResource IconButtonBase_Small}"
                                    ToolTip="更多" />
                            </StackPanel>
                        </DockPanel>
                    </StackPanel>
                </Viewbox>

                <Viewbox Grid.Column="1" Style="{StaticResource OnlyDownViewbox}">
                    <StackPanel
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                        <Button Command="{Binding RewindCommand}" Style="{StaticResource Rewind1sIconButton}" />

                        <Button
                            Command="{Binding PrevCommand}"
                            CommandParameter="{Binding CurrentMedia}"
                            Style="{StaticResource PrevOneIconButton}" />

                        <ToggleButton
                            Command="{Binding PlayPlayingCommand}"
                            CommandParameter="{Binding CurrentMedia}"
                            IsChecked="{Binding Running, Mode=OneWay}"
                            Style="{StaticResource PlayIconToggleButton}" />

                        <Button
                            Command="{Binding NextCommand}"
                            CommandParameter="{Binding CurrentMedia}"
                            Style="{StaticResource NextOneIconButton}" />

                        <Button Command="{Binding FastForwardCommand}" Style="{StaticResource FastForward1sIconButton}" />

                        <Button Command="{Binding StopPlayCommand}" Style="{StaticResource StopMediaIconButton}" />
                    </StackPanel>
                </Viewbox>

                <Viewbox
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    Style="{StaticResource OnlyDownViewbox}">
                    <StackPanel
                        Grid.Column="2"
                        Margin="10,5"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                        <Grid
                            x:Name="MusicSpeedRatioPanel"
                            Margin="5,0"
                            Background="Transparent">
                            <TextBlock
                                HorizontalAlignment="Center"
                                Style="{StaticResource NotImportantTxt_Black}"
                                Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BoolToCollapsedVisibleConverter}}">
                                <TextBlock Text="{Binding CurrentMedia.CurrentTime, FallbackValue=00:00}" />
                                /
                                <TextBlock Text="{Binding CurrentMedia.Music.Duration, FallbackValue=00:00}" />
                            </TextBlock>

                            <StackPanel Orientation="Horizontal" Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource BoolToVisibleHiddenConverter}}">
                                <ToggleButton
                                    x:Name="MusicSpeedToggleButton"
                                    Content="倍速"
                                    Style="{StaticResource MusicEffectToggleButton}" />
                                <Popup
                                    Width="280"
                                    Height="110"
                                    HorizontalOffset="-115"
                                    MouseLeftButtonDown="EmptyHandler"
                                    MyAttachProperty.IsAppearOnHovered="True"
                                    Placement="Top"
                                    PlacementTarget="{Binding ElementName=MusicSpeedToggleButton}"
                                    VerticalOffset="7">
                                    <Border
                                        Padding="10,15"
                                        Background="{StaticResource PopupBackground}"
                                        Clip="{StaticResource PopupGeometryGroup_MediaSpeedRatio}">
                                        <StackPanel>
                                            <TextBlock
                                                VerticalAlignment="Top"
                                                FontSize="16"
                                                Foreground="{StaticResource LightWhite}"
                                                TextAlignment="Center">
                                                <TextBlock Text="{Binding Value, ElementName=MusicSpeedRatioSlider}" />
                                                倍速播放
                                            </TextBlock>

                                            <Slider
                                                x:Name="MusicSpeedRatioSlider"
                                                Width="260"
                                                Height="3"
                                                Margin="0,10"
                                                VerticalAlignment="Center"
                                                Maximum="1.5"
                                                Minimum="0.5"
                                                TickFrequency="0.1"
                                                ValueChanged="MusicSpeedRatioSlider_ValueChanged"
                                                Value="1" />

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <TextBlock
                                                    Grid.Column="0"
                                                    FontSize="16"
                                                    Foreground="{StaticResource LightWhite}"
                                                    Text="减慢" />
                                                <TextBlock
                                                    Grid.Column="1"
                                                    FontSize="16"
                                                    Foreground="{StaticResource LightWhite}"
                                                    Text="正常"
                                                    TextAlignment="Center" />
                                                <TextBlock
                                                    Grid.Column="2"
                                                    FontSize="16"
                                                    Foreground="{StaticResource LightWhite}"
                                                    Text="加快" />
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <ToggleButton Content="音质" Style="{StaticResource MusicEffectToggleButton}" />
                                <ToggleButton Content="音效" Style="{StaticResource MusicEffectToggleButton}" />
                            </StackPanel>
                        </Grid>

                        <ToggleButton
                            x:Name="VolumeToggleButton"
                            Click="VolumeToggleButton_Click"
                            IsChecked="{Binding IsMuted, ElementName=mediaPlayer, Mode=TwoWay}"
                            Style="{StaticResource VolumeIconToggleButton}" />
                        <Popup
                            x:Name="VolumePopup"
                            Width="65"
                            Height="202"
                            HorizontalOffset="-23"
                            MouseLeftButtonDown="EmptyHandler"
                            MyAttachProperty.IsAppearOnHovered="True"
                            Placement="Top"
                            PlacementTarget="{Binding ElementName=VolumeToggleButton}"
                            VerticalOffset="5">
                            <!--  音量调节模态框  -->
                            <StackPanel Background="{StaticResource PopupBackground}" Clip="{StaticResource PopupGeometryGroup_Volume}">
                                <Slider
                                    x:Name="VolumeSlider"
                                    Width="4"
                                    Height="130"
                                    Margin="10,25,10,10"
                                    Maximum="100"
                                    Minimum="0"
                                    Orientation="Vertical"
                                    Style="{StaticResource Slider_ObviousThumb}"
                                    ValueChanged="Slider_ValueChanged"
                                    Value="{Binding Volume, ElementName=mediaPlayer, Converter={StaticResource DigitMultiConverter}, ConverterParameter=100}" />

                                <TextBlock
                                    x:Name="volumeStr"
                                    HorizontalAlignment="Center"
                                    Style="{StaticResource NotImportantTxt_White}">
                                    <TextBlock Text="{Binding Path=Value, ElementName=VolumeSlider, Mode=OneWay}" />
                                    %
                                </TextBlock>
                            </StackPanel>
                        </Popup>

                        <ToggleButton x:Name="listButton" IsChecked="{Binding IsEditingPlayOrder}">
                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource IconButtonBase_Small}" TargetType="ToggleButton">
                                    <Setter Property="Margin" Value="2,0" />

                                    <Setter Property="Content" Value="{Binding SelectedItem.IconString, ElementName=PlayOrderList, FallbackValue=播放顺序}" />
                                    <Setter Property="ToolTip" Value="{Binding SelectedItem.Description, ElementName=PlayOrderList}" />
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Popup
                            HorizontalOffset="-67"
                            MouseLeftButtonDown="EmptyHandler"
                            MyAttachProperty.IsAppearOnHovered="True"
                            Placement="Top"
                            PlacementTarget="{Binding ElementName=listButton}"
                            VerticalOffset="10">
                            <Border
                                Height="310"
                                Background="{StaticResource PopupBackground}"
                                Clip="{StaticResource PopupGeometryGroup_PlayOrder}">
                                <ListBox
                                    x:Name="PlayOrderList"
                                    ItemsSource="{x:Static contracts:CustomStatics.MediaPlayOrderList}"
                                    SelectedItem="{Binding CurrentPlayOrder}">
                                    <ListBox.ItemContainerStyle>
                                        <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
                                            <Setter Property="Padding" Value="0,10" />

                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate DataType="contracts:MediaPlayOrderModel">
                                                        <TextBlock Margin="30,10" Style="{StaticResource IconText}">
                                                            <TextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Text="{Binding IconString}" />
                                                            <TextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Text="{Binding Description}" />
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.Style>
                                        <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="ListBox">

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CurrentPlayOrder}" Value="{x:Null}">
                                                    <Setter Property="SelectedIndex" Value="1" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.Style>
                                </ListBox>
                            </Border>
                        </Popup>

                        <Button
                            Content="&#xe607;"
                            Style="{StaticResource IconButtonBase_Small}"
                            ToolTip="一起听" />

                        <ToggleButton
                            Command="{Binding DesktopLyricPanelCommand}"
                            Content="&#xe671;"
                            IsChecked="{Binding DesktopLyric.IsDesktopLyricShow, Mode=OneWay}"
                            ToolTip="{Binding KeyGestureDic[桌面歌词].ToolTip}">
                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource ColoredExpandIconToggleButton}" TargetType="ToggleButton">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayPlaying.Count}" Value="0">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ToggleButton
                            x:Name="PlayingListButton"
                            Click="PlayingListButton_Click"
                            ToolTip="{Binding KeyGestureDic[播放列表].ToolTip}">
                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource IconButtonBase_Small}" TargetType="ToggleButton">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DisplayPlaying.Count}" Value="0">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                            <TextBlock>
                                <TextBlock Text="&#xea6f;" />
                                <TextBlock Width="30" Text="{Binding DisplayPlaying.Count}" />
                            </TextBlock>
                        </ToggleButton>
                        <Popup
                            x:Name="PlayingListPopup"
                            Width="400"
                            Height="490"
                            Closed="PlayingListPopup_Closed"
                            HorizontalOffset="-343"
                            IsOpen="{Binding IsChecked, ElementName=PlayingListButton}"
                            MouseLeftButtonDown="EmptyHandler"
                            Opened="PlayingListPopup_UpdateDataGridScrollBar"
                            Placement="Top"
                            PlacementTarget="{Binding ElementName=PlayingListButton}"
                            PopupAnimation="Fade"
                            VerticalOffset="-18">
                            <Popup.InputBindings>
                                <KeyBinding
                                    Key="{Binding KeyGestureDic[搜索].SelectedKey}"
                                    Command="Find"
                                    CommandParameter="Playing"
                                    CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=Popup}}"
                                    Modifiers="{Binding KeyGestureDic[搜索].ModifierKey}" />

                                <KeyBinding
                                    Key="Esc"
                                    Command="Close"
                                    CommandParameter="StopPlayingListFilte"
                                    CommandTarget="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=Popup}}" />
                            </Popup.InputBindings>
                            <Border Background="{StaticResource PopupBackground}" CornerRadius="10">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <DockPanel
                                        Grid.Row="0"
                                        Margin="20,20,20,0"
                                        LastChildFill="False">
                                        <DockPanel DockPanel.Dock="Top">
                                            <TextBlock
                                                HorizontalAlignment="Left"
                                                DockPanel.Dock="Left"
                                                Foreground="{StaticResource LightWhite}">
                                                共
                                                <TextBlock Text="{Binding DisplayPlaying.Count}" />
                                                首
                                            </TextBlock>

                                            <TextBlock HorizontalAlignment="Right" DockPanel.Dock="Right">
                                                <ToggleButton
                                                    x:Name="QueryButton"
                                                    Content="&#xe632;"
                                                    Style="{StaticResource IconButtonBase_Small}"
                                                    ToolTip="搜索" />

                                                <Button
                                                    Command="{Binding CleanPlayingCommand}"
                                                    Content="&#xec7b;"
                                                    Style="{StaticResource IconButtonBase_Small}"
                                                    ToolTip="{Binding KeyGestureDic[清空播放队列].ToolTip}" />
                                            </TextBlock>
                                        </DockPanel>

                                        <StackPanel
                                            DockPanel.Dock="Bottom"
                                            Orientation="Horizontal"
                                            Visibility="{Binding IsChecked, ElementName=QueryButton, Mode=OneWay, Converter={StaticResource BoolToVisibleCollapsedConverter}}">
                                            <TextBox
                                                x:Name="PlayingKeyWordsTxt"
                                                Width="310"
                                                Margin="0,5,5,5"
                                                Padding="10,0,0,0"
                                                Background="Transparent"
                                                BorderBrush="{StaticResource LightWhite}"
                                                BorderThickness="1"
                                                Focusable="True"
                                                IsVisibleChanged="PlayingListFilterPanel_IsVisibleChanged"
                                                MyAttachProperty.CornerRadius="15"
                                                MyAttachProperty.PlaceHolder="请输入关键字"
                                                Text="{Binding PlayingListFilteKeyWords, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
                                            <Button
                                                Command="Close"
                                                CommandParameter="StopPlayingListFilte"
                                                Content="消失"
                                                Style="{StaticResource ClosePlayingListFilter}" />
                                        </StackPanel>
                                    </DockPanel>

                                    <DataGrid
                                        x:Name="PlayingDataGrid"
                                        Grid.Row="1"
                                        ContextMenu="{StaticResource PlayinigDataGridContextMenu}"
                                        HeadersVisibility="Row"
                                        ItemsSource="{Binding DisplayPlaying}"
                                        SelectedItem="{Binding CurrentMedia, Mode=OneWay}"
                                        Style="{StaticResource DataGrid_Transparent}">

                                        <DataGrid.CellStyle>
                                            <Style BasedOn="{StaticResource DataGridCell_General}" TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding DataContext.IsPlayingMedia, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource SkyBlue}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.CellStyle>

                                        <DataGrid.RowStyle>
                                            <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="DataGridRow">
                                                <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_Playing_MouseDoubleClick" />

                                                <Setter Property="Header" Value="{Binding IndexString, Mode=OneWay}" />
                                            </Style>
                                        </DataGrid.RowStyle>

                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn MinWidth="30">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ToggleButton Style="{StaticResource Love}" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Width="300" CellTemplate="{StaticResource PlayingDataGridFirstColumnCellTemplate}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </Border>
                        </Popup>
                    </StackPanel>
                </Viewbox>
            </Grid>
        </Grid>
    </Grid>
</UserControl>