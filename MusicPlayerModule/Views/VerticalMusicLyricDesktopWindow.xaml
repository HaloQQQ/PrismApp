<Window
    x:Class="MusicPlayerModule.Views.VerticalMusicLyricDesktopWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MusicPlayerModule.Converters"
    xmlns:datatemplateselectors="clr-namespace:MusicPlayerModule.DataTemplateSelectors"
    xmlns:prism="http://prismlibrary.com/"
    Title="VerticalMusicLyricDesktopWindow"
    MinWidth="166"
    MinHeight="650"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="Transparent"
    Cursor="SizeAll"
    MyAttachProperty.CornerRadius="10"
    MyAttachProperty.UseWindowCommand="False"
    MyAttachProperty.WindowStartupLocation="Manual"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    SizeToContent="WidthAndHeight"
    Style="{StaticResource Window_WithoutTitleBar}"
    Topmost="True">
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>

        <converters:DesktopLyricColorfulMultiConverter x:Key="DesktopLyricColorfulMultiConverter" />

        <converters:NoEnglishDesktopLyricColorfulMultiConverter x:Key="NoEnglishDesktopLyricColorfulMultiConverter" />

        <DataTemplate x:Key="VerticalDesktopLyricWithoutEnglish">
            <Grid Margin="10,20">
                <TextBlock
                    Width="{Binding FontSize, RelativeSource={RelativeSource Self}}"
                    VerticalAlignment="Top"
                    FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=ContentControl}, Converter={StaticResource DigitMultiConverter}, ConverterParameter=1.5, FallbackValue=20}"
                    Foreground="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                    LineHeight="{Binding FontSize, RelativeSource={RelativeSource Self}}"
                    LineStackingStrategy="BlockLineHeight"
                    Text="{Binding VerticalWords, FallbackValue=狗空音乐，就是歌多}"
                    TextTrimming="None"
                    TextWrapping="Wrap" />

                <TextBlock
                    Width="{Binding FontSize, RelativeSource={RelativeSource Self}}"
                    VerticalAlignment="Top"
                    FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=ContentControl}, Converter={StaticResource DigitMultiConverter}, ConverterParameter=1.5, FallbackValue=20}"
                    LineHeight="{Binding FontSize, RelativeSource={RelativeSource Self}}"
                    LineStackingStrategy="BlockLineHeight"
                    Text="{Binding VerticalWords}"
                    TextTrimming="None"
                    TextWrapping="Wrap">
                    <TextBlock.Foreground>
                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                            <GradientStop Offset="0.2" Color="{Binding DataContext.DesktopLyric.LinearGradientColorBrush.ColorBrush.Color, RelativeSource={RelativeSource AncestorType=ContentControl}}" />
                            <GradientStop Offset="1" Color="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush.Color, RelativeSource={RelativeSource AncestorType=ContentControl}}" />
                        </LinearGradientBrush>
                    </TextBlock.Foreground>
                    <TextBlock.Height>
                        <MultiBinding Converter="{StaticResource NoEnglishDesktopLyricColorfulMultiConverter}">
                            <Binding Mode="OneWay" Path="IsPlayed" />

                            <Binding Mode="OneWay" Path="IsPlayingLine" />

                            <Binding
                                Mode="OneWay"
                                Path="DataContext.CurrentMedia.WordProgress"
                                RelativeSource="{RelativeSource AncestorType=ContentControl}" />

                            <Binding Mode="OneWay" Path="Words.Length" />

                            <Binding
                                Mode="OneWay"
                                Path="FontSize"
                                RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </TextBlock.Height>
                </TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="VerticalDesktopLyricWithEnglish">
            <Grid Margin="10,20">
                <TextBlock
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=ContentControl}, Converter={StaticResource DigitMultiConverter}, ConverterParameter=1.5, FallbackValue=20}"
                    Foreground="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                    Text="{Binding Words, FallbackValue=狗空音乐，就是歌多}"
                    TextAlignment="Center"
                    TextTrimming="None"
                    TextWrapping="NoWrap">
                    <TextBlock.LayoutTransform>
                        <TransformGroup>
                            <TranslateTransform Y="-50" />
                            <RotateTransform Angle="90" />
                        </TransformGroup>
                    </TextBlock.LayoutTransform>
                </TextBlock>

                <TextBlock
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    FontSize="{Binding DataContext.DesktopLyric.CurrentLyricFontSize, RelativeSource={RelativeSource AncestorType=ContentControl}, Converter={StaticResource DigitMultiConverter}, ConverterParameter=1.5, FallbackValue=20}"
                    Text="{Binding Words}"
                    TextAlignment="Center"
                    TextTrimming="None"
                    TextWrapping="NoWrap">
                    <TextBlock.LayoutTransform>
                        <TransformGroup>
                            <TranslateTransform Y="-50" />
                            <RotateTransform Angle="90" />
                        </TransformGroup>
                    </TextBlock.LayoutTransform>
                    <TextBlock.Foreground>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0.2" Color="{Binding DataContext.DesktopLyric.LinearGradientColorBrush.ColorBrush.Color, RelativeSource={RelativeSource AncestorType=ContentControl}}" />
                            <GradientStop Offset="1" Color="{Binding DataContext.DesktopLyric.CurrentLyricForeground.ColorBrush.Color, RelativeSource={RelativeSource AncestorType=ContentControl}}" />
                        </LinearGradientBrush>
                    </TextBlock.Foreground>
                    <TextBlock.Width>
                        <MultiBinding Converter="{StaticResource DesktopLyricColorfulMultiConverter}">
                            <Binding Mode="OneWay" Path="IsPlayed" />

                            <Binding Mode="OneWay" Path="IsPlayingLine" />

                            <Binding
                                Mode="OneWay"
                                Path="DataContext.CurrentMedia.WordProgress"
                                RelativeSource="{RelativeSource AncestorType=ContentControl}" />

                            <Binding Mode="OneWay" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </TextBlock.Width>
                </TextBlock>
            </Grid>
        </DataTemplate>

        <datatemplateselectors:VerticalLyricDataTemplateSelector
            x:Key="LyricDataTemlateSelector"
            VerticalDesktopLyricWithEnglish="{StaticResource VerticalDesktopLyricWithEnglish}"
            VerticalDesktopLyricWithoutEnglish="{StaticResource VerticalDesktopLyricWithoutEnglish}" />
    </Window.Resources>

    <Grid
        x:Name="DesktopLyricBar"
        MouseDown="DragWindow_MouseDonw"
        MouseLeave="DesktopLyricPanel_Hidden">
        <Grid
            x:Name="DesktopLyricPanel"
            Background="#66000000"
            Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="4*" />
                <RowDefinition Height="3*" />
                <RowDefinition Height="120" />
            </Grid.RowDefinitions>

            <StackPanel
                Grid.Row="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Orientation="Vertical">
                <TextBlock
                    Width="{Binding FontSize, RelativeSource={RelativeSource Self}}"
                    MaxHeight="180"
                    Margin="10"
                    FontSize="18"
                    Foreground="#EBEBEB"
                    Text="{Binding CurrentMedia.Music.Name, FallbackValue=ChineseTitle}"
                    TextTrimming="WordEllipsis" />

                <TextBlock
                    MaxWidth="180"
                    Margin="10"
                    FontSize="18"
                    Foreground="#EBEBEB"
                    Text="{Binding CurrentMedia.Music.Name, FallbackValue=EnglishTitle}"
                    TextTrimming="WordEllipsis"
                    TextWrapping="NoWrap"
                    Visibility="{Binding CurrentMedia.Music.IsEnglishTitle, Converter={StaticResource BoolToVisibleCollapsedConverter}}">
                    <TextBlock.LayoutTransform>
                        <TransformGroup>
                            <RotateTransform Angle="90" />
                        </TransformGroup>
                    </TextBlock.LayoutTransform>
                </TextBlock>


                <TextBlock
                    Width="{Binding FontSize, RelativeSource={RelativeSource Self}}"
                    Foreground="#EBEBEB"
                    Text="{Binding CurrentMedia.Music.Singer, FallbackValue=ChineseSinger}"
                    TextTrimming="WordEllipsis"
                    Visibility="{Binding CurrentMedia.Music.IsEnglishSinger, Converter={StaticResource BoolToCollapsedVisibleConverter}}" />


                <TextBlock
                    Margin="10"
                    FontSize="18"
                    Foreground="#EBEBEB"
                    Text="{Binding CurrentMedia.Music.Singer, FallbackValue=EnglishTitle}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap"
                    Visibility="{Binding CurrentMedia.Music.IsEnglishSinger, Converter={StaticResource BoolToVisibleCollapsedConverter}}">
                    <TextBlock.LayoutTransform>
                        <TransformGroup>
                            <RotateTransform Angle="90" />
                        </TransformGroup>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </StackPanel>

            <StackPanel
                Grid.Row="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Orientation="Vertical">
                <Button
                    Command="{Binding RewindCommand}"
                    Content="&#xe68e;"
                    Style="{StaticResource ButtonBase_Icon_ScaleDown_Small_HoverBlue}"
                    ToolTip="{Binding KeyGestureDic[快退].ToolTip}" />

                <Button Command="{Binding PrevCommand}" CommandParameter="{Binding CurrentMedia}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource Button_Icon_Prev}" TargetType="Button">
                            <Setter Property="FontSize" Value="25" />
                            <Setter Property="Foreground" Value="#EBEBEB" />

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#6AD2FF" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <ToggleButton
                    Command="{Binding TogglePlayCommand}"
                    CommandParameter="{Binding CurrentMedia}"
                    IsChecked="{Binding Running, Mode=OneWay}">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource ToggleButton_Icon_Play}" TargetType="ToggleButton">
                            <Setter Property="FontSize" Value="28" />
                            <Setter Property="Foreground" Value="#EBEBEB" />

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#6AD2FF" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Button Command="{Binding NextCommand}" CommandParameter="{Binding CurrentMedia}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource Button_Icon_Next}" TargetType="Button">
                            <Setter Property="FontSize" Value="25" />
                            <Setter Property="Foreground" Value="#EBEBEB" />

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#6AD2FF" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button
                    Command="{Binding FastForwardCommand}"
                    Content="&#xe690;"
                    Style="{StaticResource ButtonBase_Icon_ScaleDown_Small_HoverBlue}"
                    ToolTip="{Binding KeyGestureDic[快进].ToolTip}" />

                <ToggleButton IsChecked="{Binding DesktopLyric.IsSingleLine}">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource ButtonBase_Icon_ScaleDown_Small_HoverBlue}" TargetType="ToggleButton">
                            <Setter Property="Content" Value="&#xe60b;" />
                            <Setter Property="Foreground" Value="#EBEBEB" />
                            <Setter Property="ToolTip" Value="单行" />
                            <Setter Property="FontWeight" Value="Bold" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DesktopLyric.IsSingleLine}" Value="True">
                                    <Setter Property="Content" Value="&#xe64c;" />
                                    <Setter Property="ToolTip" Value="双行" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <ToggleButton IsChecked="{Binding DesktopLyric.IsVertical}">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource ButtonBase_Icon_ScaleDown_Small_HoverBlue}" TargetType="ToggleButton">
                            <Setter Property="Content" Value="&#xe65c;" />
                            <Setter Property="Foreground" Value="#EBEBEB" />
                            <Setter Property="ToolTip" Value="竖屏" />
                            <Setter Property="FontWeight" Value="Bold" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DesktopLyric.IsVertical}" Value="True">
                                    <Setter Property="Content" Value="&#xe659;" />
                                    <Setter Property="ToolTip" Value="横屏" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Button Command="{Binding ToggleDesktopLyricCommand}" ToolTip="{Binding KeyGestureDic[桌面歌词].ToolTip}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource ButtonBase_Icon_ScaleDown_Small_HoverBlue}" TargetType="Button">
                            <Setter Property="Content" Value="&#xe624;" />
                            <Setter Property="Foreground" Value="#EBEBEB" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <StackPanel
                Grid.Row="2"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom">
                <TextBlock
                    Margin="10"
                    Foreground="#EBEBEB"
                    Style="{StaticResource TextBlock_NotImportant_Black}">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="90" />
                    </TextBlock.LayoutTransform>
                    <TextBlock Text="{Binding CurrentMedia.CurrentTime, FallbackValue=00:00}" />
                    /
                    <TextBlock Text="{Binding CurrentMedia.Music.Duration, FallbackValue=00:00}" />
                </TextBlock>
            </StackPanel>
        </Grid>

        <Grid Margin="30,0,0,0">
            <StackPanel Orientation="Horizontal">
                <ContentControl
                    VerticalAlignment="Top"
                    Content="{Binding CurrentMedia.OneLine}"
                    ContentTemplateSelector="{StaticResource LyricDataTemlateSelector}"
                    FontFamily="{Binding DesktopLyric.CurrentFontModel.Family}"
                    MouseEnter="DesktopLyricPanel_Visible"
                    Visibility="{Binding DesktopLyric.IsSingleLine, Converter={StaticResource BoolToHiddenVisibleConverter}}" />

                <ContentControl
                    VerticalAlignment="Bottom"
                    Content="{Binding CurrentMedia.AnotherLine}"
                    ContentTemplateSelector="{StaticResource LyricDataTemlateSelector}"
                    FontFamily="{Binding DesktopLyric.CurrentFontModel.Family}"
                    MouseEnter="DesktopLyricPanel_Visible"
                    Visibility="{Binding DesktopLyric.IsSingleLine, Converter={StaticResource BoolToHiddenVisibleConverter}}" />
            </StackPanel>

            <ContentControl
                VerticalAlignment="Center"
                Content="{Binding CurrentMedia.CurrentLine}"
                ContentTemplateSelector="{StaticResource LyricDataTemlateSelector}"
                FontFamily="{Binding DesktopLyric.CurrentFontModel.Family}"
                MouseEnter="DesktopLyricPanel_Visible"
                Visibility="{Binding DesktopLyric.IsSingleLine, Converter={StaticResource BoolToVisibleCollapsedConverter}}" />
        </Grid>
    </Grid>
</Window>
