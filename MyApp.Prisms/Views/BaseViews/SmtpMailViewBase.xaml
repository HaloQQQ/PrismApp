<UserControl
    x:Class="MyApp.Prisms.Views.BaseViews.SmtpMailViewBase"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="Transparent"
    FocusVisualStyle="{x:Null}"
    FontSize="20"
    MyAttachProperty.IsElementFocused="True">
    <UserControl.Resources>
        <Style x:Key="Prefix" TargetType="TextBlock">
            <Setter Property="Width" Value="80" />
            <Setter Property="VerticalAlignment" Value="Center" />

            <Setter Property="TextAlignment" Value="Right" />
        </Style>
        <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
            <Setter Property="MinWidth" Value="220" />
            <Setter Property="MaxWidth" Value="220" />
        </Style>
        <Style x:Key="HorizontalListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="5,3,0,3" />
            <Setter Property="Background" Value="{StaticResource TransparentButtonBackground}" />
            <Setter Property="MaxWidth" Value="130.5" />
            <Setter Property="Height" Value="30" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />

            <Setter Property="Foreground" Value="{DynamicResource TextBlock.Foreground}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                            x:Name="border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            ToolTip="{TemplateBinding Content}">
                            <DockPanel>
                                <Button
                                    x:Name="CloseButton"
                                    Command="Close"
                                    Content="&#xe612;"
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource ButtonBase_Icon_ScaleUp_Small_HoverBlue}"
                                    Visibility="Hidden" />

                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--<Setter Property="Foreground" Value="{StaticResource ShallowBlue}" />-->
                                <Setter Property="Background" Value="{StaticResource HoveredTransparentButtonBackground}" />
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterX="0" ScaleX="1.01" ScaleY="1.01" />
                                    </Setter.Value>
                                </Setter>

                                <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="ListBox">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style BasedOn="{StaticResource HorizontalListBoxItemStyle}" TargetType="ListBoxItem">
                        <Setter Property="MaxWidth" Value="250" />
                        <Setter Property="Width" Value="250" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />

            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="7*" />
        </Grid.ColumnDefinitions>
        <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto">
            <StackPanel CommandManager.Executed="StackPanel_Executed">
                <WrapPanel>
                    <TextBlock Style="{StaticResource Prefix}" Text="发件人:" />
                    <TextBox
                        MinWidth="125"
                        MaxWidth="125"
                        MyAttachProperty.PlaceHolder="发件邮箱"
                        Text="{Binding From, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Text="{Binding MailSuffix, Mode=OneTime}" />
                </WrapPanel>
                <WrapPanel>
                    <TextBlock Style="{StaticResource Prefix}" Text="收件人:" />
                    <TextBox x:Name="TosTextBox" MyAttachProperty.PlaceHolder="收件邮箱" />
                    <ListBox x:Name="lstBxTos" ItemsSource="{Binding Tos}" />
                </WrapPanel>
                <WrapPanel>
                    <TextBlock Style="{StaticResource Prefix}" Text="抄送:" />
                    <TextBox x:Name="CcsTextBox" MyAttachProperty.PlaceHolder="抄送邮箱" />
                    <ListBox x:Name="lstBxCcs" ItemsSource="{Binding Ccs}" />
                </WrapPanel>
                <WrapPanel>
                    <TextBlock Style="{StaticResource Prefix}" Text="加密抄送:" />
                    <TextBox x:Name="BccsTextBox" MyAttachProperty.PlaceHolder="加密抄送邮箱" />
                    <ListBox x:Name="lstBxBccs" ItemsSource="{Binding Bccs}" />
                </WrapPanel>
                <WrapPanel>
                    <TextBlock Style="{StaticResource Prefix}" Text="主题:" />
                    <TextBox MyAttachProperty.PlaceHolder="主题" Text="{Binding Subject, UpdateSourceTrigger=PropertyChanged}" />
                </WrapPanel>
                <WrapPanel>
                    <TextBlock Style="{StaticResource Prefix}" Text="正文:" />
                    <TextBox
                        MinHeight="100"
                        MaxHeight="200"
                        VerticalContentAlignment="Top"
                        MyAttachProperty.PlaceHolder="正文"
                        Text="{Binding Body, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="Wrap"
                        VerticalScrollBarVisibility="Auto" />
                </WrapPanel>
                <WrapPanel>
                    <TextBlock Style="{StaticResource Prefix}" Text="附件:" />
                    <Button
                        Command="{x:Static ApplicationCommands.Open}"
                        Content="&#xe704;"
                        FontSize="20"
                        Style="{StaticResource ButtonBase_Icon_ScaleDown_Small_HoverBlue}" />
                    <ListBox x:Name="lstBxAttachments" ItemsSource="{Binding Attachments}" />
                </WrapPanel>
                <StackPanel Orientation="Horizontal">
                    <Button
                        Command="{Binding SendMailCommand}"
                        Content="发送"
                        MyAttachProperty.IconFontText="&#xe64f;"
                        Style="{StaticResource ButtonBase_Icon_Conent_Transparent}" />

                    <Button
                        Command="{Binding DeleteDeletionCommand}"
                        Content="清空删除"
                        MyAttachProperty.IconFontText="&#xec7b;"
                        Style="{StaticResource ButtonBase_Icon_Conent_Transparent}" />
                </StackPanel>
                <Border
                    BorderBrush="{StaticResource LightWhite}"
                    BorderThickness="1"
                    CornerRadius="10">
                    <WrapPanel>
                        <ComboBox
                            IsReadOnly="True"
                            ItemsSource="{Binding TargetFolders}"
                            SelectedIndex="0"
                            Text="{Binding CurrentFolder}" />
                        <ComboBox
                            IsReadOnly="True"
                            ItemsSource="{Binding MessageFlags}"
                            SelectedIndex="0"
                            Text="{Binding CurrentFlag}" />

                        <Button
                            Command="{Binding QueryMailCommand}"
                            Content="查询"
                            MyAttachProperty.IconFontText="&#xe632;"
                            Style="{StaticResource ButtonBase_Icon_Conent_Transparent}" />
                    </WrapPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>

        <Grid Grid.Column="1">
            <NeedleWaitLoad
                Width="80"
                Height="80"
                Foreground="DodgerBlue"
                Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibleCollapsedConverter}}" />
            <DataGrid ItemsSource="{Binding Mails}" Style="{StaticResource DataGrid_Transparent}">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="设置标记">
                            <MenuItem Command="{Binding SetFlagCommand}" Header="设置最新">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>None</sys:String>
                                        <sys:String>True</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding SetFlagCommand}" Header="取消最新">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>None</sys:String>
                                        <sys:String>False</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>

                            <MenuItem Command="{Binding SetFlagCommand}" Header="设置已读">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Seen</sys:String>
                                        <sys:String>True</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding SetFlagCommand}" Header="取消已读">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Seen</sys:String>
                                        <sys:String>False</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>

                            <MenuItem Command="{Binding SetFlagCommand}" Header="设置回复">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Answered</sys:String>
                                        <sys:String>True</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding SetFlagCommand}" Header="取消回复">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Answered</sys:String>
                                        <sys:String>False</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>

                            <MenuItem Command="{Binding SetFlagCommand}" Header="设置星标">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Flagged</sys:String>
                                        <sys:String>True</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding SetFlagCommand}" Header="取消星标">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Flagged</sys:String>
                                        <sys:String>False</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>

                            <MenuItem Command="{Binding SetFlagCommand}" Header="设置删除">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Deleted</sys:String>
                                        <sys:String>True</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding SetFlagCommand}" Header="取消删除">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Deleted</sys:String>
                                        <sys:String>False</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>

                            <MenuItem Command="{Binding SetFlagCommand}" Header="设置草稿">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Draft</sys:String>
                                        <sys:String>True</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding SetFlagCommand}" Header="取消草稿">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Draft</sys:String>
                                        <sys:String>False</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>

                            <MenuItem Command="{Binding SetFlagCommand}" Header="设置最近">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Recent</sys:String>
                                        <sys:String>True</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                            <MenuItem Command="{Binding SetFlagCommand}" Header="取消最近">
                                <MenuItem.CommandParameter>
                                    <x:Array Type="sys:String">
                                        <sys:String>Recent</sys:String>
                                        <sys:String>False</sys:String>
                                    </x:Array>
                                </MenuItem.CommandParameter>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="移动到" ItemsSource="{Binding TargetFolders}">
                            <MenuItem.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                                    <Setter Property="Header" Value="{Binding}" />
                                    <Setter Property="Command" Value="{Binding PlacementTarget.DataContext.MoveToCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />

                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <MenuItem Header="复制到" ItemsSource="{Binding TargetFolders}">
                            <MenuItem.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                                    <Setter Property="Header" Value="{Binding}" />
                                    <Setter Property="Command" Value="{Binding PlacementTarget.DataContext.CopyToCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <MenuItem Command="{Binding DeleteCommand}" Header="删除" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn
                        MinWidth="50"
                        Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"
                        ElementStyle="{StaticResource CheckBox_CheckMark}">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox
                                    Command="{Binding DataContext.SelectAllCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                    IsChecked="{Binding DataContext.IsMailsSelectedAll, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                    Style="{StaticResource CheckBox_CheckMark}" />
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>
                    <DataGridTextColumn Binding="{Binding Id}" Header="编号" />
                    <DataGridTextColumn
                        MaxWidth="150"
                        Binding="{Binding From}"
                        Header="发件人" />
                    <DataGridTemplateColumn MaxWidth="150" Header="收件人">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding To}" ToolTip="{Binding To}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn MaxWidth="100" Header="主题">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Subject}" ToolTip="{Binding Subject}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding SendTime, StringFormat=yyyy/MM/dd HH:mm:ss}" Header="发出时间" />
                    <DataGridTemplateColumn Header="抄送">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CC}" ToolTip="{Binding CC}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
