<UserControl x:Class="MyApp.Prisms.Views.Settings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:globalhotkey="clr-namespace:IceTea.Atom.Utils.HotKey.GlobalHotKey;assembly=IceTea.Atom"
             xmlns:appHotKey="clr-namespace:IceTea.General.Utils.AppHotKey;assembly=IceTea.General"
             xmlns:converters="http://IceTea.Wpf.Core.com/"
             MinWidth="800" MaxHeight="500"
             xmlns:viewModels="clr-namespace:MyApp.Prisms.ViewModels"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:attaches="http://IceTea.Wpf.Core.Attaches.com/" 
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <converters:Key2StringConverter x:Key="Key2StringConverter"/>

        <ObjectDataProvider x:Key="CustomKeys" MethodName="GetValues" ObjectType="{x:Type globalhotkey:CustomKeys}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="globalhotkey:CustomKeys" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="AppKeys" MethodName="GetValues" ObjectType="{x:Type Key}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="{x:Type Key}"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <DataTemplate DataType="{x:Type appHotKey:HotKeyGroup}">
            <GroupBox Header="{Binding GroupName}">
                <StackPanel>
                    <TextBlock Text="{Binding Description}"/>

                    <Button Command="{Binding DataContext.ResetGroupHotKeysCommand,RelativeSource={RelativeSource AncestorType=UserControl}}" 
                            CommandParameter="{Binding}" HorizontalAlignment="Right" 
                            Style="{StaticResource IconButtonBase_Expand}" Margin="0,10,20,0" Content="&#xe614;" ToolTip="重置快捷键"/>

                    <ListBox ItemsSource="{Binding KeyBindings}" HorizontalAlignment="Stretch"
                             ItemContainerStyle="{StaticResource ListBoxItem_General}" />
                </StackPanel>
            </GroupBox>
        </DataTemplate>

        <DataTemplate DataType="{x:Type appHotKey:AppHotKeyModel}">
            <StackPanel Orientation="Horizontal" MinHeight="40">
                <TextBlock FontSize="16" TextAlignment="Right" MinWidth="100">
                    <TextBlock Text="{Binding Name}" />:
                </TextBlock>

                <CheckBox Margin="10,0,0,0" Content="Ctrl:" IsChecked="{Binding IsSelectCtrl}" IsEnabled="{Binding IsUsable}" />

                <CheckBox Margin="10,0,0,0" Content="Shift:" IsChecked="{Binding IsSelectShift}" IsEnabled="{Binding IsUsable}" />

                <CheckBox Margin="10,0,0,0" Content="Alt:" IsChecked="{Binding IsSelectAlt}" IsEnabled="{Binding IsUsable}" />

                <ComboBox Margin="10,0,0,0" ItemsSource="{Binding Source={StaticResource AppKeys}}" IsReadOnly="True"
                      Text="{Binding SelectedKey,Converter={StaticResource Key2StringConverter}}" IsEnabled="{Binding IsUsable}" />

                <TextBox IsReadOnly="True" IsEnabled="{Binding IsUsable}" Text="{Binding CombineKeys, Mode=OneWay}"
                      KeyUp="AppHotKeyTextBox_OnKeyUp">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="attaches:MyAttachProperty.PlaceHolder" Value="组合键"/>

                            <Style.Triggers>
                                <DataTrigger Value="False" Binding="{Binding IsUsable}">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <CheckBox Style="{StaticResource SlideCheckBox}" IsChecked="{Binding IsUsable}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type globalhotkey:GlobalHotKeyModel}">
            <StackPanel Orientation="Horizontal" MinHeight="40">
                <TextBlock FontSize="16" TextAlignment="Right" MinWidth="100">
                    <TextBlock Text="{Binding Name}" />:
                </TextBlock>

                <CheckBox Margin="10,0,0,0" Content="Ctrl:" IsChecked="{Binding IsSelectCtrl}" IsEnabled="{Binding IsUsable}" />

                <CheckBox Margin="10,0,0,0" Content="Shift:" IsChecked="{Binding IsSelectShift}" IsEnabled="{Binding IsUsable}" />

                <CheckBox Margin="10,0,0,0" Content="Alt:" IsChecked="{Binding IsSelectAlt}" IsEnabled="{Binding IsUsable}" />

                <ComboBox Margin="10,0,0,0" ItemsSource="{Binding Source={StaticResource CustomKeys}}" IsReadOnly="True"
                          Text="{Binding SelectedKey}" IsEnabled="{Binding IsUsable}" />

                <TextBox IsReadOnly="True" IsEnabled="{Binding IsUsable}" Text="{Binding CombineKeys, Mode=OneWay}"
                         KeyUp="GlobalHotKeyTextBox_OnKeyUp">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="attaches:MyAttachProperty.PlaceHolder" Value="组合键"/>

                            <Style.Triggers>
                                <DataTrigger Value="False" Binding="{Binding IsUsable}">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <CheckBox Style="{StaticResource SlideCheckBox}" IsChecked="{Binding IsUsable}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:Pair}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Style="{StaticResource ThemeBlk}" Text="邮箱:" />
                <TextBox Text="{Binding Key}" IsReadOnly="True" Width="250" />
                <TextBlock Style="{StaticResource ThemeBlk}" Text="授权码:"/>
                <PasswordBox attaches:MyAttachProperty.Password="{Binding Value}" 
                             attaches:MyAttachProperty.IsReadOnly="True" Width="250" />
                <Button Content="&#xe60a;" 
                        Command="{Binding DataContext.RemoveMailAccountCommand,RelativeSource={RelativeSource AncestorType=TabControl}}" 
                        CommandParameter="{Binding}"
                        Style="{StaticResource IconButtonBase_Small_Scale}" FontSize="30"/>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <Border CornerRadius="20" Padding="0,10" Background="LightBlue">
        <TabControl Style="{StaticResource TabControl_ScrollContent}"
                        ItemContainerStyle="{StaticResource TabItem_Transparent}">
            <TabItem Header="默认目录">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="图片默认目录：" Style="{StaticResource ThemeBlk}"/>
                        <TextBox IsReadOnly="True" Text="{Binding DataContext.ImageDir,RelativeSource={RelativeSource AncestorType=TabControl}}" 
                                 attaches:MyAttachProperty.PlaceHolder="空目录"/>
                        <Button Style="{StaticResource TransparentButtonBase}" Content="浏览" 
                                    Command="{Binding DataContext.FindImageDirCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="音乐默认目录：" Style="{StaticResource ThemeBlk}"/>
                        <TextBox IsReadOnly="True" Text="{Binding DataContext.LastMusicDir,RelativeSource={RelativeSource AncestorType=TabControl}}" 
                                 attaches:MyAttachProperty.PlaceHolder="空目录"/>
                        <Button Style="{StaticResource TransparentButtonBase}" Content="浏览" 
                                    Command="{Binding DataContext.FindMusicDirCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="视频默认目录：" Style="{StaticResource ThemeBlk}"/>
                        <TextBox IsReadOnly="True" Text="{Binding DataContext.LastVideoDir,RelativeSource={RelativeSource AncestorType=TabControl}}" 
                                 attaches:MyAttachProperty.PlaceHolder="空目录"/>
                        <Button Style="{StaticResource TransparentButtonBase}" 
                                    Content="浏览" Command="{Binding DataContext.FindVideoDirCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"/>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="默认邮箱">
                <StackPanel>
                    <StackPanel Margin="2,0" Orientation="Horizontal">
                        <TextBlock Style="{StaticResource ThemeBlk}" Text="邮箱:" />
                        <TextBox Text="{Binding DataContext.CurrentMailPair.Key,UpdateSourceTrigger=PropertyChanged}" Width="250" attaches:MyAttachProperty.PlaceHolder="邮箱" />
                        <TextBlock Style="{StaticResource ThemeBlk}" Text="授权码:"/>
                        <PasswordBox attaches:MyAttachProperty.Password="{Binding DataContext.CurrentMailPair.Value,Mode=TwoWay}" Width="250" attaches:MyAttachProperty.PlaceHolder="授权码" />

                        <Button Style="{StaticResource IconButtonBase_Small_Scale}"
                                Command="{Binding DataContext.AddMailAccountCommand}"
                                FontSize="30" Content="&#xe622;">
                        </Button>
                    </StackPanel>
                    <ListBox ItemContainerStyle="{StaticResource ListBoxItem_General}"
                             ItemsSource="{Binding DataContext.MailAccounts}"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="全局快捷键">
                <GroupBox Header="全局" Foreground="{DynamicResource TextBlock.Foreground}">
                    <StackPanel>
                        <Button Command="{Binding DataContext.ResetGlobalHotKeysCommand,RelativeSource={RelativeSource AncestorType=TabControl}}" 
                                HorizontalAlignment="Right" 
                                Style="{StaticResource IconButtonBase_Expand}" Margin="0,10,20,0" Content="&#xe614;" ToolTip="重置快捷键"/>

                        <ListBox ItemsSource="{Binding DataContext.GlobalHotKeys,RelativeSource={RelativeSource AncestorType=TabControl}}" 
                                 HorizontalAlignment="Stretch"
                                 ItemContainerStyle="{StaticResource ListBoxItem_General}" />

                        <DockPanel LastChildFill="False">
                            <Button Margin="20,10" DockPanel.Dock="Right" Style="{StaticResource TransparentButtonBase}"
                                    Content="取消" Command="{Binding DataContext.CancelCommand,RelativeSource={RelativeSource AncestorType=TabControl}}" />
                            <Button Margin="20,10" DockPanel.Dock="Right" Style="{StaticResource TransparentButtonBase}"
                                    Content="确认" Command="{Binding DataContext.SubmitCommand,RelativeSource={RelativeSource AncestorType=TabControl}}" />
                        </DockPanel>
                    </StackPanel>
                </GroupBox>
            </TabItem>
            <TabItem Header="应用快捷键">
                <ListBox ItemsSource="{Binding DataContext.AppHotKeyManager,RelativeSource={RelativeSource AncestorType=TabControl}}" 
                         HorizontalAlignment="Stretch" ItemContainerStyle="{StaticResource ListBoxItem_General}" />
            </TabItem>
            <TabItem Header="常用">
                <Button Style="{StaticResource TransparentButtonBase}" Command="{Binding DataContext.CleanConfigWhenExitAppCommand}" ToolTip="关闭程序时清空所有配置">
                    <Button.Content>
                        <TextBlock>
                            <TextBlock Text="&#xec7b;" />
                            <TextBlock Text="清空配置" />
                        </TextBlock>
                    </Button.Content>
                </Button>
            </TabItem>
        </TabControl>
    </Border>
</UserControl>