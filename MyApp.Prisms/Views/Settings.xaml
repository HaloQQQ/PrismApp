<UserControl
    x:Class="MyApp.Prisms.Views.Settings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:appHotKey="clr-namespace:IceTea.General.Utils.AppHotKey;assembly=IceTea.General"
    xmlns:attaches="http://IceTea.Wpf.Core.Attaches.com/"
    xmlns:converters="http://IceTea.Wpf.Core.com/"
    xmlns:globalhotkey="clr-namespace:IceTea.Atom.Utils.HotKey.GlobalHotKey;assembly=IceTea.Atom"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:viewModels="clr-namespace:MyApp.Prisms.ViewModels"
    MinWidth="800"
    MaxHeight="500"
    prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <converters:Key2StringConverter x:Key="Key2StringConverter" />
        <converters:CornerRadiusToDigitConverter x:Key="CornerRadiusToDigitConverter" />

        <ObjectDataProvider
            x:Key="CustomKeys"
            MethodName="GetValues"
            ObjectType="{x:Type globalhotkey:CustomKeys}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="globalhotkey:CustomKeys" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider
            x:Key="AppKeys"
            MethodName="GetValues"
            ObjectType="{x:Type Key}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="{x:Type Key}" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <DataTemplate DataType="{x:Type appHotKey:AppHotKeyGroup}">
            <GroupBox Header="{Binding GroupName}">
                <StackPanel>
                    <TextBlock Text="{Binding Description}" />

                    <Button
                        Margin="0,10,20,0"
                        HorizontalAlignment="Right"
                        Command="{Binding DataContext.ResetGroupHotKeysCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding}"
                        Content="&#xe614;"
                        Style="{StaticResource IconButtonBase_Expand}"
                        ToolTip="重置快捷键" />

                    <ListBox
                        HorizontalAlignment="Stretch"
                        ItemContainerStyle="{StaticResource ListBoxItem_General}"
                        ItemsSource="{Binding KeyBindings}" />
                </StackPanel>
            </GroupBox>
        </DataTemplate>

        <DataTemplate DataType="{x:Type appHotKey:AppHotKeyModel}">
            <StackPanel MinHeight="40" Orientation="Horizontal">
                <TextBlock
                    MinWidth="110"
                    FontSize="16"
                    TextAlignment="Right">
                    <TextBlock Text="{Binding Name}" />
                    :
                </TextBlock>

                <CheckBox
                    Margin="10,0,0,0"
                    Content="Ctrl:"
                    IsChecked="{Binding IsSelectCtrl}"
                    IsEnabled="{Binding IsUsable}" />

                <CheckBox
                    Margin="10,0,0,0"
                    Content="Shift:"
                    IsChecked="{Binding IsSelectShift}"
                    IsEnabled="{Binding IsUsable}" />

                <CheckBox
                    Margin="10,0,0,0"
                    Content="Alt:"
                    IsChecked="{Binding IsSelectAlt}"
                    IsEnabled="{Binding IsUsable}" />

                <ComboBox
                    Margin="10,0,0,0"
                    IsEnabled="{Binding IsUsable}"
                    IsReadOnly="True"
                    ItemsSource="{Binding Source={StaticResource AppKeys}}"
                    Text="{Binding SelectedKey, Converter={StaticResource Key2StringConverter}}" />

                <TextBox
                    MinWidth="170"
                    IsEnabled="{Binding IsUsable}"
                    IsReadOnly="True"
                    KeyUp="AppHotKeyTextBox_OnKeyUp"
                    Text="{Binding CombineKeys, Mode=OneWay}">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
                            <Setter Property="attaches:MyAttachProperty.PlaceHolder" Value="组合键" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsUsable}" Value="False">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <CheckBox IsChecked="{Binding IsUsable}" Style="{StaticResource SlideCheckBox}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type globalhotkey:GlobalHotKeyModel}">
            <StackPanel MinHeight="40" Orientation="Horizontal">
                <TextBlock
                    MinWidth="110"
                    FontSize="16"
                    TextAlignment="Right">
                    <TextBlock Text="{Binding Name}" />
                    :
                </TextBlock>

                <CheckBox
                    Margin="10,0,0,0"
                    Content="Ctrl:"
                    IsChecked="{Binding IsSelectCtrl}"
                    IsEnabled="{Binding IsUsable}" />

                <CheckBox
                    Margin="10,0,0,0"
                    Content="Shift:"
                    IsChecked="{Binding IsSelectShift}"
                    IsEnabled="{Binding IsUsable}" />

                <CheckBox
                    Margin="10,0,0,0"
                    Content="Alt:"
                    IsChecked="{Binding IsSelectAlt}"
                    IsEnabled="{Binding IsUsable}" />

                <ComboBox
                    Margin="10,0,0,0"
                    IsEnabled="{Binding IsUsable}"
                    IsReadOnly="True"
                    ItemsSource="{Binding Source={StaticResource CustomKeys}}"
                    Text="{Binding SelectedKey}" />

                <TextBox
                    MinWidth="170"
                    IsEnabled="{Binding IsUsable}"
                    IsReadOnly="True"
                    KeyUp="GlobalHotKeyTextBox_OnKeyUp"
                    Text="{Binding CombineKeys, Mode=OneWay}">
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
                            <Setter Property="attaches:MyAttachProperty.PlaceHolder" Value="组合键" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsUsable}" Value="False">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <CheckBox IsChecked="{Binding IsUsable}" Style="{StaticResource SlideCheckBox}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:Pair}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Style="{StaticResource ThemeBlk}" Text="邮箱:" />
                <TextBox
                    Width="250"
                    IsReadOnly="True"
                    Text="{Binding Key}" />
                <TextBlock Style="{StaticResource ThemeBlk}" Text="授权码:" />
                <PasswordBox
                    Width="250"
                    attaches:MyAttachProperty.IsReadOnly="True"
                    attaches:MyAttachProperty.Password="{Binding Value}" />
                <Button
                    Command="{Binding DataContext.RemoveMailAccountCommand, RelativeSource={RelativeSource AncestorType=TabControl}}"
                    CommandParameter="{Binding}"
                    Content="&#xe60a;"
                    FontSize="30"
                    Style="{StaticResource IconButtonBase_Small_Scale}" />
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <Border
        Padding="0,10"
        Background="LightBlue"
        CornerRadius="20">
        <TabControl ItemContainerStyle="{StaticResource TabItem_Transparent}" Style="{StaticResource TabControl_ScrollContent}">
            <TabItem Header="默认目录">
                <StackPanel Margin="6,0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource ThemeBlk}" Text="图片默认目录：" />
                        <TextBox
                            Width="500"
                            attaches:MyAttachProperty.PlaceHolder="空目录"
                            IsReadOnly="True"
                            Text="{Binding DataContext.ImageDir, RelativeSource={RelativeSource AncestorType=TabControl}}" />
                        <Button
                            Command="{Binding DataContext.FindImageDirCommand, RelativeSource={RelativeSource AncestorType=TabControl}}"
                            Content="浏览"
                            Style="{StaticResource TransparentButtonBase}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource ThemeBlk}" Text="音乐默认目录：" />
                        <TextBox
                            Width="500"
                            attaches:MyAttachProperty.PlaceHolder="空目录"
                            IsReadOnly="True"
                            Text="{Binding DataContext.LastMusicDir, RelativeSource={RelativeSource AncestorType=TabControl}}" />
                        <Button
                            Command="{Binding DataContext.FindMusicDirCommand, RelativeSource={RelativeSource AncestorType=TabControl}}"
                            Content="浏览"
                            Style="{StaticResource TransparentButtonBase}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource ThemeBlk}" Text="视频默认目录：" />
                        <TextBox
                            Width="500"
                            attaches:MyAttachProperty.PlaceHolder="空目录"
                            IsReadOnly="True"
                            Text="{Binding DataContext.LastVideoDir, RelativeSource={RelativeSource AncestorType=TabControl}}" />
                        <Button
                            Command="{Binding DataContext.FindVideoDirCommand, RelativeSource={RelativeSource AncestorType=TabControl}}"
                            Content="浏览"
                            Style="{StaticResource TransparentButtonBase}" />
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="默认邮箱">
                <StackPanel>
                    <StackPanel Margin="6,0" Orientation="Horizontal">
                        <TextBlock Style="{StaticResource ThemeBlk}" Text="邮箱:" />
                        <TextBox
                            Width="250"
                            attaches:MyAttachProperty.PlaceHolder="邮箱"
                            Text="{Binding DataContext.CurrentMailPair.Key, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Style="{StaticResource ThemeBlk}" Text="授权码:" />
                        <PasswordBox
                            Width="250"
                            attaches:MyAttachProperty.Password="{Binding DataContext.CurrentMailPair.Value, Mode=TwoWay}"
                            attaches:MyAttachProperty.PlaceHolder="授权码" />

                        <Button
                            Command="{Binding DataContext.AddMailAccountCommand}"
                            Content="&#xe622;"
                            FontSize="30"
                            Style="{StaticResource IconButtonBase_Small_Scale}" />
                    </StackPanel>
                    <ListBox ItemContainerStyle="{StaticResource ListBoxItem_General}" ItemsSource="{Binding DataContext.MailAccounts}" />
                </StackPanel>
            </TabItem>
            <TabItem Header="全局快捷键">
                <GroupBox
                    Margin="5,0"
                    Foreground="{DynamicResource TextBlock.Foreground}"
                    Header="全局">
                    <StackPanel>
                        <Button
                            Margin="0,10,20,0"
                            HorizontalAlignment="Right"
                            Command="{Binding DataContext.ResetGlobalHotKeysCommand, RelativeSource={RelativeSource AncestorType=TabControl}}"
                            Content="&#xe614;"
                            Style="{StaticResource IconButtonBase_Expand}"
                            ToolTip="重置快捷键" />

                        <ListBox
                            HorizontalAlignment="Stretch"
                            ItemContainerStyle="{StaticResource ListBoxItem_General}"
                            ItemsSource="{Binding DataContext.GlobalHotKeys, RelativeSource={RelativeSource AncestorType=TabControl}}" />

                        <DockPanel LastChildFill="False">
                            <Button
                                Margin="20,10"
                                Command="{Binding DataContext.CancelCommand, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                Content="取消"
                                DockPanel.Dock="Right"
                                Style="{StaticResource TransparentButtonBase}" />
                            <Button
                                Margin="20,10"
                                Command="{Binding DataContext.SubmitCommand, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                Content="确认"
                                DockPanel.Dock="Right"
                                Style="{StaticResource TransparentButtonBase}" />
                        </DockPanel>
                    </StackPanel>
                </GroupBox>
            </TabItem>
            <TabItem Header="应用快捷键">
                <ListBox
                    HorizontalAlignment="Stretch"
                    ItemContainerStyle="{StaticResource ListBoxItem_General}"
                    ItemsSource="{Binding DataContext.AppHotKeyManager, RelativeSource={RelativeSource AncestorType=TabControl}}" />
            </TabItem>
            <TabItem Header="常用">
                <StackPanel>
                    <WrapPanel>
                        <TextBlock Style="{StaticResource ThemeBlk}" Text="窗口圆角:" />
                        <Slider
                            MinWidth="570"
                            MinHeight="4"
                            Maximum="20"
                            Minimum="0"
                            Style="{StaticResource Slider_ObviousThumb}"
                            TickFrequency="5"
                            Value="{Binding DataContext.CornerRadius, Converter={StaticResource CornerRadiusToDigitConverter}}" />
                    </WrapPanel>

                    <Button
                        Command="{Binding DataContext.CleanConfigWhenExitAppCommand}"
                        Style="{StaticResource TransparentButtonBase}"
                        ToolTip="关闭程序时清空所有配置">
                        <Button.Content>
                            <TextBlock>
                                <TextBlock Text="&#xec7b;" />
                                <TextBlock Text="清空配置" />
                            </TextBlock>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Border>
</UserControl>