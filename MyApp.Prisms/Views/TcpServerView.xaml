<UserControl
    x:Class="MyApp.Prisms.Views.TcpServerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attaches="http://IceTea.Wpf.Core.Attaches.com/"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:viewModels="clr-namespace:MyApp.Prisms.ViewModels.BaseViewModels"
    prism:ViewModelLocator.AutoWireViewModel="True"
    SnapsToDevicePixels="True">

    <UserControl.Resources>
        <ResourceDictionary>
            <Style
                x:Key="Lable"
                BasedOn="{StaticResource ThemeBlk}"
                TargetType="TextBlock">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Margin" Value="0" />
            </Style>

            <Style x:Key="HorizontalListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="5,3,0,3" />
                <Setter Property="Background" Value="{StaticResource TransparentButtonBackground}" />
                <Setter Property="MaxWidth" Value="130.5" />
                <Setter Property="Height" Value="30" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />

                <Setter Property="Foreground" Value="{DynamicResource TextBlock.Foreground}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                x:Name="border"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8"
                                ToolTip="{TemplateBinding Content}">
                                <DockPanel>
                                    <Button
                                        x:Name="CloseButton"
                                        Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                        CommandParameter="{Binding}"
                                        Content="&#xe612;"
                                        DockPanel.Dock="Right"
                                        Style="{StaticResource IconButtonBase_Small_Expand}"
                                        Visibility="Hidden" />

                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!--<Setter Property="Foreground" Value="{StaticResource ShallowBlue}" />-->
                                    <Setter Property="Background" Value="{StaticResource HoveredTransparentButtonBackground}" />
                                    <Setter Property="Cursor" Value="Hand" />
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform CenterX="0" ScaleX="1.01" ScaleY="1.01" />
                                        </Setter.Value>
                                    </Setter>

                                    <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <GroupBox>
        <GroupBox.Header>
            <TextBlock
                FontSize="20"
                FontWeight="Bold"
                Foreground="Blue"
                Text="{Binding Name}" />
        </GroupBox.Header>
        <Grid CommandManager.CanExecute="CommandBinding_OnCanExecute" CommandManager.Executed="CommandBinding_Executed">
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="50" />
                <RowDefinition Height="*" />
                <RowDefinition MaxHeight="50" />
            </Grid.RowDefinitions>

            <Viewbox
                Grid.Row="0"
                HorizontalAlignment="Left"
                Style="{StaticResource OnlyDownViewbox}">
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <TextBlock Style="{StaticResource Lable}" Text="服务器IP：" />

                    <ComboBox ItemsSource="{x:Static viewModels:BaseSocketViewModel.Ips}" Text="{Binding Ip, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.Style>
                            <Style BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
                                <Setter Property="IsEnabled" Value="True" />
                                <Setter Property="Margin" Value="3,0" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Socket.IsConnected}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>


                    <TextBlock Style="{StaticResource Lable}" Text="服务器监听端口：" />
                    <TextBox
                        InputScope="Digits"
                        IsEnabled="{Binding Socket.IsConnected, Converter={StaticResource OppositeBoolConverter}}"
                        MaxLength="5"
                        Style="{StaticResource TextBox_DisplayInfo}"
                        Text="{Binding Port, UpdateSourceTrigger=PropertyChanged}" />

                    <Button Command="{Binding ConnectCommand}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <TextBlock>
                                            <TextBlock Text="&#xe650;" />
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Text" Value="打开连接" />

                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Socket.IsConnected}" Value="True">
                                                                <Setter Property="Text" Value="关闭连接" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </TextBlock>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Viewbox>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <TextBlock Style="{StaticResource Lable}" Text="连接数：" />
                    <TextBlock Style="{StaticResource Lable}" Text="{Binding ConnList.Count}" />
                </StackPanel>

                <DockPanel Grid.Row="1">
                    <ListBox
                        Background="Transparent"
                        DockPanel.Dock="Top"
                        ItemContainerStyle="{StaticResource HorizontalListBoxItemStyle}"
                        ItemsSource="{Binding ConnList}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.Style>
                            <Style TargetType="ListBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ConnList.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>
                    </ListBox>

                    <RichTextBox
                        x:Name="rhTxt"
                        Background="Transparent"
                        ContextMenu="{StaticResource ForMessageBoard}"
                        DockPanel.Dock="Bottom" />
                </DockPanel>
            </Grid>

            <Viewbox
                Grid.Row="2"
                HorizontalAlignment="Left"
                Style="{StaticResource OnlyDownViewbox}">
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <TextBlock Style="{StaticResource ThemeBlk}" Text="发送：" />
                    <TextBox
                        MinWidth="200"
                        attaches:MyAttachProperty.PlaceHolder="待发送消息"
                        Text="{Binding SendMessage, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.Style>
                            <Style BasedOn="{StaticResource WidthAnimationWithoutPrefixTextBox}" TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ConnList.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Button Command="{Binding SendCommand}" Content="发送" />
                </StackPanel>
            </Viewbox>
        </Grid>
    </GroupBox>
</UserControl>