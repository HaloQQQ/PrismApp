<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helper="clr-namespace:TcpSocket.Helper"
                    xmlns:converters="clr-namespace:TcpSocket.Converters">
    
    <converters:DigitalDoubleConverter x:Key="DigitalDoubleConverter"/>
    
    <!-- PasswdBox -->
    <Style TargetType="PasswordBox">
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="MinHeight" Value="30" />

        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,3" />
        <Setter Property="Margin" Value="5,5" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        
        <Setter Property="helper:MyAttachProperty.CornerRadius" Value="15" />

        <Setter Property="Background" Value="{DynamicResource TextBox.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBlock.Foreground}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid x:Name="Grid" ClipToBounds="False">
                        <Border x:Name="Border" 
                                CornerRadius="{TemplateBinding helper:MyAttachProperty.CornerRadius}"
                                MinHeight="{TemplateBinding MinHeight}"
                                MinWidth="{TemplateBinding MinWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />

                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="2" Width="{TemplateBinding Width}"
                                      Foreground="{TemplateBinding Foreground}"
                                      VerticalContentAlignment="Center"
                                      VerticalAlignment="Stretch" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- RichTextBox -->
    <Style TargetType="RichTextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextBlock.Foreground}"/>
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Padding" Value="5" />

        <Setter Property="helper:MyAttachProperty.CornerRadius" Value="10" />

        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Grid x:Name="Grid" ClipToBounds="False">
                        <Border x:Name="Border"
                                CornerRadius="{TemplateBinding helper:MyAttachProperty.CornerRadius}"
                                MinHeight="{TemplateBinding MinHeight}"
                                MinWidth="{TemplateBinding MinWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />

                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="2"
                                      Foreground="{TemplateBinding Foreground}"
                                      VerticalContentAlignment="Center"
                                      VerticalAlignment="Stretch" />
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="LightGray" BlurRadius="7" ShadowDepth="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox通用样式 不能直接指定Width,Height -->
    <Style TargetType="TextBox">
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="MinHeight" Value="30" />

        <!-- <Setter Property="MaxWidth" Value="220" /> -->

        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,3" />
        <Setter Property="Margin" Value="5,5" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        
        <Setter Property="helper:MyAttachProperty.CornerRadius" Value="15" />


        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Background" Value="{DynamicResource TextBox.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBlock.Foreground}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <StackPanel Orientation="Horizontal" ClipToBounds="False">
                        <TextBlock Text="{TemplateBinding Tag}"
                                   Foreground="{DynamicResource TextBlock.Foreground}"
                                   VerticalAlignment="Center" MinWidth="50"
                                   FontSize="{TemplateBinding FontSize}" />

                        <Grid x:Name="Grid" ClipToBounds="False">
                            <Border x:Name="Border" 
                                    CornerRadius="{TemplateBinding helper:MyAttachProperty.CornerRadius}"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    MinWidth="{TemplateBinding MinWidth}"
                                    MaxHeight="{TemplateBinding MaxHeight}"
                                    MaxWidth="{TemplateBinding MaxWidth}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" />

                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="2" Width="{TemplateBinding Width}"
                                          Foreground="{TemplateBinding Foreground}"
                                          VerticalContentAlignment="Center"
                                          VerticalAlignment="Stretch" />
                        </Grid>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Blue" />
                            <!-- <Setter TargetName="Border" Property="Opacity" Value="0.2" /> -->
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource TextBox.Focused.BorderBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="Border" Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="Black" />
                        </Trigger>

                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="Grid" Property="IsEnabled" Value="False" />
                            <!-- <Setter TargetName="Border" Property="Opacity" Value="0.2" /> -->
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 不自动补全前缀的、正常TextBox -->
    <Style TargetType="TextBox" x:Key="WithoutPrefixTextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="Grid" ClipToBounds="False">
                        <Border x:Name="Border"
                                CornerRadius="{TemplateBinding helper:MyAttachProperty.CornerRadius}"
                                MinHeight="{TemplateBinding MinHeight}" 
                                MinWidth="{TemplateBinding MinWidth}"
                                MaxHeight="{TemplateBinding MaxHeight}" 
                                MaxWidth="{TemplateBinding MaxWidth}"
                                Width="{TemplateBinding Width}" 
                                Height="{TemplateBinding Height}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />

                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="2"
                                      Foreground="{TemplateBinding Foreground}"
                                      VerticalContentAlignment="Center"
                                      VerticalAlignment="Stretch" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Button通用样式 -->
    <Style TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Margin" Value="10,3" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Cursor" Value="Hand" />
        <!-- <Setter Property="Background" Value="#0292f9" /> -->
        <Setter Property="BorderBrush" Value="Transparent" />

        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />

        <Setter Property="helper:MyAttachProperty.CornerRadius" Value="8" />

        <Setter Property="Foreground" Value="White" />

        <Setter Property="FontSize" Value="16" />
        
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#9ae464" Offset="0"/>
                    <GradientStop Color="#1660c2" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border ClipToBounds="True"
                            CornerRadius="{TemplateBinding helper:MyAttachProperty.CornerRadius}"
                            Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter />
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Foreground" Value="Red" />
                            
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10"
                                                      Color="{DynamicResource ShadowColor}" 
                                                      RenderingBias="Quality"
                                                      ShadowDepth="5" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- <Trigger Property="IsEnabled" Value="True"> -->
            <!--     <Setter Property="Background" Value="#0292f9" /> -->
            <!-- </Trigger> -->

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Black" />
                <Setter Property="ToolTip" Value="禁用中"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Button带环形滚动条的按钮 -->
    <Style TargetType="Button" x:Key="CircleButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="BorderBrush" Value="LightGreen" />
        <Setter Property="BorderThickness" Value="2" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                            CornerRadius="{TemplateBinding helper:MyAttachProperty.CornerRadius}">
                        <Grid ClipToBounds="True">
                            <Rectangle Fill="{TemplateBinding BorderBrush}"
                                       RenderTransformOrigin="0,0">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform />
                                        <TranslateTransform
                                            X="{Binding ActualWidth,RelativeSource={RelativeSource FindAncestor, AncestorType=Grid, AncestorLevel=1}, Converter={StaticResource DigitalDoubleConverter}, ConverterParameter=0.5}"
                                            Y="{Binding ActualHeight,RelativeSource={RelativeSource FindAncestor, AncestorType=Grid, AncestorLevel=1}, Converter={StaticResource DigitalDoubleConverter}, ConverterParameter=0.5}" />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                                <Rectangle.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(Rectangle.RenderTransform).Children[0].(RotateTransform.Angle)"
                                                    To="360" Duration="0:0:2" RepeatBehavior="Forever" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Rectangle.Triggers>
                            </Rectangle>

                            <Border
                                CornerRadius="{Binding (helper:MyAttachProperty.CornerRadius), 
                                        RelativeSource={RelativeSource TemplatedParent}}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                Margin="{TemplateBinding BorderThickness}">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>