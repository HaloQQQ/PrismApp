<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- ToggleButton：只读ComboBox样式 -->
    <Style TargetType="ToggleButton" x:Key="ReadonlyComboBoxStyleBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Back" BorderThickness="1,1,0,1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="3,0,0,3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="7*" />
                                <ColumnDefinition Width="3*" MaxWidth="30" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter />
                            <Path Grid.Column="1" x:Name="PathFill" DockPanel.Dock="Right" Fill="{TemplateBinding Background}"
                                  Width="8" Height="6" Data="M0,0 L10,0 L5,10 z"
                                  RenderTransformOrigin="0.5,0.5" Stretch="Fill" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="White" />
                            <Setter TargetName="Back" Property="Background" Value="#90edfe" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Back" Property="Background" Value="#90edfe" />

                            <Setter TargetName="PathFill" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButton：可写ComboBox样式 -->
    <Style TargetType="ToggleButton" x:Key="ComboBoxStyleBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Back" Background="Transparent"
                            CornerRadius="{Binding CornerRadius, 
                                RelativeSource={RelativeSource FindAncestor, AncestorType=Border,AncestorLevel=1}}">
                        <Path Name="PathFill" Fill="{TemplateBinding Background}" Width="8" Height="6"
                              Data="M0,0 L10,0 L5,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="White" />
                            <Setter TargetName="Back" Property="Background" Value="#90edfe" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Back" Property="Background" Value="#90edfe" />

                            <Setter TargetName="PathFill" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Combobox通用样式 -->
    <Style TargetType="ComboBox">
        <Setter Property="BorderBrush" Value="LightGreen" />
        <Setter Property="Background" Value="#F7FDF7" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MaxDropDownHeight" Value="150" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,3" />
        <Setter Property="Margin" Value="10,2" />

        <!-- <Setter Property="Foreground" Value="{DynamicResource TextBlock.Foreground}" /> -->

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem"
                       BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                    <Setter Property="BorderBrush" Value="#ccc" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="7*" />
                            <ColumnDefinition Width="3*" MaxWidth="30" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" BorderThickness="1,1,0,1"
                                ClipToBounds="True" Background="{TemplateBinding Background}"
                                IsEnabled="{TemplateBinding IsEnabled}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="5,0,0,5">
                            <TextBox Style="{x:Null}"
                                     BorderBrush="Transparent"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Text="{TemplateBinding Text}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     FontSize="{TemplateBinding FontSize}"
                                     Foreground="{TemplateBinding Foreground}"
                                     Background="Transparent"
                                     BorderThickness="0"
                                     HorizontalAlignment="Stretch" />
                        </Border>
                        <Border Grid.Column="1" BorderThickness="0,1,1,1"
                                ClipToBounds="True" 
                                IsEnabled="{TemplateBinding IsEnabled}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="0,5,5,0">
                            <ToggleButton Style="{StaticResource ComboBoxStyleBtn}"
                                          IsChecked="{Binding 
                                            Path=IsDropDownOpen, Mode=TwoWay,
                                            RelativeSource={RelativeSource TemplatedParent}
                                          }"
                                          Background="{TemplateBinding BorderBrush}"
                                          ClickMode="Press" />
                            
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5" />
                                </Border.Effect>
                                <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                              SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto"
                                              VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ComboBoxItem通用样式 -->
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="#ccc" />

        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Back" Background="Transparent" BorderThickness="0" BorderBrush="#81D779">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Back" Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Back" Property="Background" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>