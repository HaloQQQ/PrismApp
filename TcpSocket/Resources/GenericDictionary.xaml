<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:TcpSocket.Converters"
                    xmlns:helper="clr-namespace:TcpSocket.Helper">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ScrollViewer.xaml" />
        <ResourceDictionary Source="TextBlock.xaml" />
        <ResourceDictionary Source="ToggleButton.xaml" />
        <ResourceDictionary Source="CheckBox.xaml" />
        <ResourceDictionary Source="ComboBox.xaml" />
        <ResourceDictionary Source="ButtonAndBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:OppositeBoolConverter x:Key="OppositeBoolConverter" />
    <converters:BoolToVisibleConverter x:Key="BoolToVisibleConverter" />
    <converters:BoolToCollapsedConverter x:Key="BoolToCollapsedConverter" />
    <converters:DigitalDoubleConverter x:Key="DigitalDoubleConverter" />

    <Style TargetType="FrameworkElement">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Cursor" Value="No" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Image 标题图标 -->
    <Style TargetType="Image" x:Key="ImgTitle">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="10,3" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!-- Popup -->
    <Style TargetType="Popup">
        <Setter Property="StaysOpen" Value="False" />
        <Setter Property="PopupAnimation" Value="Slide" />
    </Style>

    <!-- ItemsControl通用样式 -->
    <Style x:Key="VerticalScrollVirtualItemsControl" TargetType="ItemsControl">
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Standard" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />

        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ScrollViewer
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Cursor="{TemplateBinding Cursor}"
                        FontSize="{TemplateBinding FontSize}"
                        Foreground="{TemplateBinding Foreground}">
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBoxItem通用样式 -->
    <Style TargetType="ListBoxItem">
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextBlock.Foreground}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightCyan" />
                <Setter Property="Foreground" Value="Blue" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightSkyBlue" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true"
                                  Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Border x:Name="contentPanel" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1" />
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TabControl -->
    <Style TargetType="TabControl" x:Key="ScrollerStackPanelStyle">
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- TabItem -->
    <Style TargetType="TabItem">
        <Setter Property="Background" Value="Transparent" />
        
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border MinHeight="30" MinWidth="120" Padding="0" Margin="0">
                        <TextBlock Foreground="White" TextWrapping="NoWrap"
                                   TextTrimming="CharacterEllipsis"
                                   VerticalAlignment="Center"
                                   Text="{Binding Header,RelativeSource={RelativeSource FindAncestor,AncestorType=TabItem,AncestorLevel=1}}"
                                   HorizontalAlignment="Center"
                                   TextAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor,AncestorType=TabItem,AncestorLevel=1}}"
                                            Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Cursor" Value="Hand"/>
                                
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0.5,0.5" SpreadMethod="Reflect">
                                            <GradientStop Color="LightGreen" Offset="0" />
                                            <GradientStop Color="LightSkyBlue" Offset="0.5" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5"
                                                                ScaleX="1.02" ScaleY="1.02" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Background" Value="LightGreen" />
                                    </Trigger>

                                    <DataTrigger
                                        Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor,AncestorType=TabItem,AncestorLevel=1}}"
                                        Value="True">
                                        <Setter Property="BorderBrush" Value="LightSkyBlue" />
                                        <Setter Property="Background" Value="Green" />
                                        <Setter Property="BorderThickness" Value="0,0,3,0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuItem -->
    <Style TargetType="MenuItem">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ContextMenu -->
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="LightGreen" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem" BasedOn="{x:Null}">
                    <Setter Property="Background" Value="Transparent" />

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 菜单 -->
    <ContextMenu x:Key="MainMenu">
        <MenuItem Command="Save" CommandParameter="OnlyOneProcess"
                  CommandTarget="{Binding PlacementTarget,
                        RelativeSource={RelativeSource FindAncestor, 
                        AncestorType=ContextMenu, AncestorLevel=1}}">
            <MenuItem.Header>
                <CheckBox Content="只允许一个程序"
                          IsChecked="{Binding SoftwareContext.OnlyOneProcess, Mode=OneWay}"
                          IsEnabled="False"
                          Foreground="{Binding Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType=MenuItem,AncestorLevel=1}}"
                          Style="{StaticResource CheckMarkCheckBox}" />
            </MenuItem.Header>
        </MenuItem>

        <MenuItem Command="Save" CommandParameter="AutoStart"
                  CommandTarget="{Binding PlacementTarget,
                        RelativeSource={RelativeSource FindAncestor, 
                        AncestorType=ContextMenu, AncestorLevel=1}}">
            <MenuItem.Header>
                <CheckBox Content="开机自启"
                          IsChecked="{Binding SoftwareContext.AutoStart, Mode=OneWay}"
                          IsEnabled="False"
                          Foreground="{Binding Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType=MenuItem,AncestorLevel=1}}"
                          Style="{StaticResource CheckMarkCheckBox}" />
            </MenuItem.Header>
        </MenuItem>

        <MenuItem Command="Save" CommandParameter="BackgroundSwitch"
                  CommandTarget="{Binding PlacementTarget,
                        RelativeSource={RelativeSource FindAncestor, 
                        AncestorType=ContextMenu, AncestorLevel=1}}">
            <MenuItem.Header>
                <CheckBox Content="背景轮播"
                          IsChecked="{Binding SoftwareContext.BackgroundSwitch, Mode=OneWay}"
                          IsEnabled="False"
                          Foreground="{Binding Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType=MenuItem,AncestorLevel=1}}"
                          Style="{StaticResource CheckMarkCheckBox}" />
            </MenuItem.Header>
        </MenuItem>
    </ContextMenu>

    <!-- 消息板Menu -->
    <ContextMenu x:Key="ForMessageBoard">
        <MenuItem Header="清空" Command="Refresh" />
        <MenuItem Command="New" CommandParameter="Log">
            <MenuItem.Header>
                <CheckBox Content="记录日志"
                          IsChecked="{Binding IsLogging, Mode=OneWay}"
                          Foreground="{Binding Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType=MenuItem,AncestorLevel=1}}"
                          IsEnabled="False"
                          Style="{StaticResource CheckMarkCheckBox}" />
            </MenuItem.Header>
        </MenuItem>
        <MenuItem Header="打开日志文件" Command="Open" CommandParameter="Log" />
    </ContextMenu>

    <converters:MyBorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    <Style TargetType="GroupBox">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />

        <Setter Property="BorderBrush" Value="LightGray" />

        <Setter Property="helper:MyAttachProperty.CornerRadius" Value="5" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border RenderTransformOrigin="0.5,0.5"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{TemplateBinding helper:MyAttachProperty.CornerRadius}"
                                Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="100" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <!-- <Border BorderBrush="{TemplateBinding BorderBrush}"  -->
                            <!--         BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"> -->
                            <!--     <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/> -->
                            <!-- </Border> -->
                        </Border>
                        <Border x:Name="Header" Grid.Column="2" Background="Transparent"
                                HorizontalAlignment="Center" Padding="3,1,3,0"
                                Grid.Row="0" Grid.RowSpan="2">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="2"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>