<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <FontFamily x:Key="Iconfont">/Resources/#iconfont</FontFamily>

    <!-- TextBlock通用样式 -->
    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBlock" x:Key="ThemeBlk" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource TextBlock.Foreground}" />
        <Setter Property="Margin" Value="5,0" />
    </Style>

    <!-- TextBlock 悬停变色 -->
    <Style TargetType="TextBlock" x:Key="InterestingText" BasedOn="{StaticResource ThemeBlk}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#6ad2ff" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 通用标题样式 -->
    <Style TargetType="TextBlock" x:Key="TitleText" BasedOn="{StaticResource InterestingText}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="HorizontalAlignment" Value="Center" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 阿里巴巴Icon文字 -->
    <Style TargetType="TextBlock" x:Key="IconText" BasedOn="{StaticResource InterestingText}">
        <Setter Property="FontFamily" Value="{StaticResource Iconfont}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!-- 功能性Icon文字 -->
    <Style TargetType="TextBlock" x:Key="ClickIconText" BasedOn="{StaticResource IconText}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="25" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="0.95" ScaleY="0.95" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 布局功能Icon文字 -->
    <Style TargetType="TextBlock" x:Key="ContentLayoutIconText" BasedOn="{StaticResource ClickIconText}">

        <Setter Property="Text" Value="&#xec6b;" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowInList}" Value="True">
                <Setter Property="Text" Value="&#xe673;" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 锁屏Icon文字 -->
    <Style TargetType="TextBlock" x:Key="LockScreenIconText" BasedOn="{StaticResource ClickIconText}">
        <Setter Property="Text" Value="&#xe6e6;" />
        <Setter Property="ToolTip" Value="锁屏" />
    </Style>

    <!-- 置顶功能Icon文字 -->
    <Style TargetType="TextBlock" x:Key="TopMostIconText" BasedOn="{StaticResource ClickIconText}">
        <Style.Triggers>
            <DataTrigger Value="False"
                         Binding="{Binding Topmost, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                <Setter Property="TextBlock.Text" Value="&#xe9ba;" />
                <Setter Property="ToolTip" Value="窗口固定在最上层" />
            </DataTrigger>
            <DataTrigger Value="True"
                         Binding="{Binding Topmost, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                <Setter Property="TextBlock.Text" Value="&#xe626;" />
                <Setter Property="ToolTip" Value="取消固定在最上层" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 关闭窗口功能Icon文字 -->
    <Style TargetType="TextBlock" x:Key="CloseIconText" BasedOn="{StaticResource ClickIconText}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e81123" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 最大化窗口Icon文字 -->
    <Style TargetType="TextBlock" x:Key="MaxWindowIconText" BasedOn="{StaticResource ClickIconText}">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                Value="Maximized">
                <Setter Property="Text" Value="&#xe602;" />
            </DataTrigger>
            <!-- <DataTrigger -->
            <!--     Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" -->
            <!--     Value="Normal"> -->
            <!--     <Setter Property="Text" Value="&#xe661;" /> -->
            <!-- </DataTrigger> -->
        </Style.Triggers>
    </Style>
</ResourceDictionary>