<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WpfStyleResources</name>
    </assembly>
    <members>
        <member name="F:WpfStyleResources.Attachs.MyAttachProperty.HasContextMenuProperty">
            <summary>
            允许鼠标左键或滚轮也可以召唤出ContextMenu
            </summary>
        </member>
        <member name="F:WpfStyleResources.Attachs.MyAttachProperty.DisplayRowNumberProperty">
            <summary>
            设置是否显示行号
            </summary>
        </member>
        <member name="F:WpfStyleResources.Attachs.MyAttachProperty.IsScrollOneItemAtATimeProperty">
            <summary>
            辅助ListBox滚动时以Item为单位
            </summary>
        </member>
        <member name="F:WpfStyleResources.Attachs.MyAttachProperty.IsElementFocusedProperty">
            <summary>
            点击容器空白可获取焦点
            </summary>
        </member>
        <member name="T:WpfStyleResources.Converters.GroupBoxHeaderConverter">
            <summary>
            用于GroupBox标题居中
            </summary>
        </member>
        <member name="M:WpfStyleResources.Converters.GroupBoxHeaderConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert a value.
            </summary>
            <param name="values">values as produced by source binding</param>
            <param name="targetType">target type</param>
            <param name="parameter">converter parameter</param>
            <param name="culture">culture information</param>
            <returns>
            Converted value.
            Visual Brush that is used as the opacity mask for the Border
            in the style for GroupBox.
            </returns>
        </member>
        <member name="M:WpfStyleResources.Converters.GroupBoxHeaderConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Not Supported
            </summary>
            <param name="value">value, as produced by target</param>
            <param name="targetTypes">target types</param>
            <param name="parameter">converter parameter</param>
            <param name="culture">culture information</param>
            <returns>Nothing</returns>
        </member>
        <member name="T:WpfStyleResources.Extensions.DataGridExtensions">
            <summary>
            DataGridExtensions
            </summary>
        </member>
        <member name="M:WpfStyleResources.Extensions.DataGridExtensions.DataGridRow_MouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            用于DataGridRow单击空白区域也可选中行
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:WpfStyleResources.Extensions.DataGridExtensions.DataGrid_SelecteRowMove(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            选中行随着上下移动而变化
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:WpfStyleResources.Extensions.DataGridExtensions.DataGrid_SelectionChanged_ScrollIntoView(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            滚动条滚动到选中项
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:WpfStyleResources.Extensions.DataGridExtensions.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:WpfStyleResources.Extensions.Extensions.GetVisualAncestor``1(System.Windows.DependencyObject)">
            <summary>
            获取最近的指定类型Visual父元素
            </summary>
            <param name="reference"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WpfStyleResources.Extensions.Extensions.GetVisualAncestor``1(System.Windows.DependencyObject,System.Predicate{``0})">
            <summary>
            获取最近的指定类型Visual父元素
            </summary>
            <param name="reference"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WpfStyleResources.Extensions.Extensions.GetLogicalAncestor``1(System.Windows.DependencyObject,System.String)">
            <summary>
            获取最近的指定类型Logical父元素
            </summary>
            <param name="reference"></param>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WpfStyleResources.Extensions.Extensions.GetVisualChildObjects``1(System.Windows.DependencyObject)">
            <summary> 
            获得指定元素的所有Visual子元素 
            </summary> 
            <typeparam name="T"></typeparam> 
            <param name="obj"></param> 
            <returns></returns> 
        </member>
        <member name="M:WpfStyleResources.Extensions.Extensions.GetLogicalChildObjects``1(System.Windows.DependencyObject)">
            <summary> 
            获得指定元素的所有Visual子元素 
            </summary> 
            <typeparam name="T"></typeparam> 
            <param name="obj"></param> 
            <returns></returns> 
        </member>
        <member name="M:WpfStyleResources.Extensions.Extensions.GetVisualChildObject``1(System.Windows.DependencyObject,System.String)">
            <summary>
            查找Visual子元素 
            </summary> 
            <typeparam name="T"></typeparam> 
            <param name="obj"></param> 
            <param name="name">寻找该name的T控件或第一个T类型的无名控件</param> 
            <returns></returns> 
        </member>
        <member name="M:WpfStyleResources.Extensions.Extensions.GetVisualChildObject``1(System.Windows.DependencyObject,System.Predicate{``0})">
            <summary>
            查找Visual子元素 
            </summary> 
            <typeparam name="T"></typeparam> 
            <param name="obj"></param> 
            <param name="name">按条件查找寻找该name的T控件或第一个T类型的无名控件</param>
        </member>
        <member name="M:WpfStyleResources.Extensions.Extensions.GetLogicalChildObject``1(System.Windows.DependencyObject,System.String)">
            <summary>
            查找Logical子元素 
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:WpfStyleResources.Extensions.ListBoxExtensions.ListBox_SelectionChanged_ScrollIntoView(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            滚动条滚动到选中项
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:WpfStyleResources.Helper.CommonUtils.ShowWindowAsync(System.IntPtr,System.Int32)">
            <summary>
             该函数设置由不同线程产生的窗口的显示状态
             </summary>
             <param name="hWnd">窗口句柄</param>
             <param name="cmdShow">指定窗口如何显示。查看允许值列表，请查阅ShowWindow函数的说明部分</param>
             <returns>如果函数原来可见，返回值为非零；如果函数原来被隐藏，返回值为零</returns>
        </member>
        <member name="M:WpfStyleResources.Helper.CommonUtils.SetForegroundWindow(System.IntPtr)">
            <summary>
             该函数将创建指定窗口的线程设置到前台，并且激活该窗口。键盘输入转向该窗口，并为用户改各种可视的记号。
             系统给创建前台窗口的线程分配的权限稍高于其他线程。 
            </summary>
            <param name="hWnd">将被激活并被调入前台的窗口句柄</param>
            <returns>如果窗口设入了前台，返回值为非零；如果窗口未被设入前台，返回值为零</returns>
        </member>
        <member name="M:WpfStyleResources.Helper.ConfigManager.GetWholeReadKey(System.String[])">
            <summary>
            IConfigurationRoot，以:分割层级
            </summary>
            <param name="childKey"></param>
            <returns></returns>
        </member>
        <member name="T:WpfStyleResources.UserControls.UserControl1">
            <summary>
            UserControl1.xaml 的交互逻辑
            </summary>
            <summary>
            UserControl1
            </summary>
        </member>
        <member name="M:WpfStyleResources.UserControls.UserControl1.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:WpfStyleResources.UserControls.VirtualizingWrapPanel.CalculateExtent(System.Windows.Size,System.Int32)">
            <summary>
            width不超过availableSize的情况下，自身实际需要的Size(高度可能会超出availableSize)
            </summary>
            <param name="availableSize"></param>
            <param name="itemsCount"></param>
            <returns></returns>
        </member>
        <member name="M:WpfStyleResources.UserControls.VirtualizingWrapPanel.UpdateScrollInfo(System.Windows.Size)">
            <summary>
            更新滚动条
            </summary>
            <param name="availableSize"></param>
        </member>
        <member name="M:WpfStyleResources.UserControls.VirtualizingWrapPanel.GetVisiableRange(System.Int32@,System.Int32@)">
            <summary>
            获取所有item，在可视区域内第一个item和最后一个item的索引
            </summary>
            <param name="firstIndex"></param>
            <param name="lastIndex"></param>
        </member>
        <member name="M:WpfStyleResources.UserControls.VirtualizingWrapPanel.CleanUpItems(System.Int32,System.Int32)">
            <summary>
            将不在可视区域内的item 移除
            </summary>
            <param name="startIndex">可视区域开始索引</param>
            <param name="endIndex">可视区域结束索引</param>
        </member>
        <member name="M:WpfStyleResources.UserControls.VirtualizingWrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            scroll/availableSize/添加删除元素 改变都会触发  edit元素不会改变
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="T:WpfStyleResources.WaitLoads.ArcWaitLoad">
            <summary>
            ArcWaitLoad
            </summary>
        </member>
        <member name="M:WpfStyleResources.WaitLoads.ArcWaitLoad.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WpfStyleResources.WaitLoads.NeedleWaitLoad">
            <summary>
            NeedleWaitLoad
            </summary>
        </member>
        <member name="M:WpfStyleResources.WaitLoads.NeedleWaitLoad.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WpfStyleResources.WaitLoads.PointHorizonLineWaitLoad">
            <summary>
            PointHorizonLineWaitLoad
            </summary>
        </member>
        <member name="M:WpfStyleResources.WaitLoads.PointHorizonLineWaitLoad.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WpfStyleResources.WaitLoads.PointWaitLoad">
            <summary>
            PointWaitLoad
            </summary>
        </member>
        <member name="M:WpfStyleResources.WaitLoads.PointWaitLoad.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WpfStyleResources.WaitLoads.SquareFlipWaitLoad">
            <summary>
            SquareFlipWaitLoad
            </summary>
        </member>
        <member name="M:WpfStyleResources.WaitLoads.SquareFlipWaitLoad.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WpfStyleResources.WaitLoads.VerticalLineWaitLoad">
            <summary>
            VerticalLineWaitLoad
            </summary>
        </member>
        <member name="M:WpfStyleResources.WaitLoads.VerticalLineWaitLoad.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
